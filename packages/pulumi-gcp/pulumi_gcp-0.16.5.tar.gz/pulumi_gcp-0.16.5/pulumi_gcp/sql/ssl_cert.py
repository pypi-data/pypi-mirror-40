# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class SslCert(pulumi.CustomResource):
    """
    Creates a new Google SQL SSL Cert on a Google SQL Instance. For more information, see the [official documentation](https://cloud.google.com/sql/), or the [JSON API](https://cloud.google.com/sql/docs/mysql/admin-api/v1beta4/sslCerts).
    
    > **Note:** All arguments including the private key will be stored in the raw state as plain-text.
    [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
    """
    def __init__(__self__, __name__, __opts__=None, common_name=None, instance=None):
        """Create a SslCert resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not common_name:
            raise TypeError('Missing required property common_name')
        __props__['common_name'] = common_name

        if not instance:
            raise TypeError('Missing required property instance')
        __props__['instance'] = instance

        __props__['cert'] = None
        __props__['cert_serial_number'] = None
        __props__['create_time'] = None
        __props__['expiration_time'] = None
        __props__['private_key'] = None
        __props__['server_ca_cert'] = None
        __props__['sha1_fingerprint'] = None

        super(SslCert, __self__).__init__(
            'gcp:sql/sslCert:SslCert',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

