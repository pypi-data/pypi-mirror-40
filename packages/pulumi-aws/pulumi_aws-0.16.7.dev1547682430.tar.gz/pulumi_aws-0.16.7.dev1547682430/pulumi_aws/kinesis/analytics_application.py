# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class AnalyticsApplication(pulumi.CustomResource):
    """
    Provides a Kinesis Analytics Application resource. Kinesis Analytics is a managed service that
    allows processing and analyzing streaming data using standard SQL.
    
    For more details, see the [Amazon Kinesis Analytics Documentation][1].
    """
    def __init__(__self__, __name__, __opts__=None, cloudwatch_logging_options=None, code=None, description=None, inputs=None, name=None, outputs=None, reference_data_sources=None):
        """Create a AnalyticsApplication resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['cloudwatch_logging_options'] = cloudwatch_logging_options

        __props__['code'] = code

        __props__['description'] = description

        __props__['inputs'] = inputs

        __props__['name'] = name

        __props__['outputs'] = outputs

        __props__['reference_data_sources'] = reference_data_sources

        __props__['arn'] = None
        __props__['create_timestamp'] = None
        __props__['last_update_timestamp'] = None
        __props__['status'] = None
        __props__['version'] = None

        super(AnalyticsApplication, __self__).__init__(
            'aws:kinesis/analyticsApplication:AnalyticsApplication',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

