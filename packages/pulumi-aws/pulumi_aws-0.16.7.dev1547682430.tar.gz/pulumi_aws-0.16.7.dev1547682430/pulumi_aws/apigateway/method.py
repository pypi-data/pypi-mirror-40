# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class Method(pulumi.CustomResource):
    """
    Provides a HTTP Method for an API Gateway Resource.
    """
    def __init__(__self__, __name__, __opts__=None, api_key_required=None, authorization=None, authorization_scopes=None, authorizer_id=None, http_method=None, request_models=None, request_parameters=None, request_parameters_in_json=None, request_validator_id=None, resource_id=None, rest_api=None):
        """Create a Method resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['api_key_required'] = api_key_required

        if not authorization:
            raise TypeError('Missing required property authorization')
        __props__['authorization'] = authorization

        __props__['authorization_scopes'] = authorization_scopes

        __props__['authorizer_id'] = authorizer_id

        if not http_method:
            raise TypeError('Missing required property http_method')
        __props__['http_method'] = http_method

        __props__['request_models'] = request_models

        __props__['request_parameters'] = request_parameters

        __props__['request_parameters_in_json'] = request_parameters_in_json

        __props__['request_validator_id'] = request_validator_id

        if not resource_id:
            raise TypeError('Missing required property resource_id')
        __props__['resource_id'] = resource_id

        if not rest_api:
            raise TypeError('Missing required property rest_api')
        __props__['rest_api'] = rest_api

        super(Method, __self__).__init__(
            'aws:apigateway/method:Method',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

