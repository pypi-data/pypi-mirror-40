# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class HealthCheck(pulumi.CustomResource):
    """
    Provides a Route53 health check.
    """
    def __init__(__self__, __name__, __opts__=None, child_health_threshold=None, child_healthchecks=None, cloudwatch_alarm_name=None, cloudwatch_alarm_region=None, enable_sni=None, failure_threshold=None, fqdn=None, insufficient_data_health_status=None, invert_healthcheck=None, ip_address=None, measure_latency=None, port=None, reference_name=None, regions=None, request_interval=None, resource_path=None, search_string=None, tags=None, type=None):
        """Create a HealthCheck resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['child_health_threshold'] = child_health_threshold

        __props__['child_healthchecks'] = child_healthchecks

        __props__['cloudwatch_alarm_name'] = cloudwatch_alarm_name

        __props__['cloudwatch_alarm_region'] = cloudwatch_alarm_region

        __props__['enable_sni'] = enable_sni

        __props__['failure_threshold'] = failure_threshold

        __props__['fqdn'] = fqdn

        __props__['insufficient_data_health_status'] = insufficient_data_health_status

        __props__['invert_healthcheck'] = invert_healthcheck

        __props__['ip_address'] = ip_address

        __props__['measure_latency'] = measure_latency

        __props__['port'] = port

        __props__['reference_name'] = reference_name

        __props__['regions'] = regions

        __props__['request_interval'] = request_interval

        __props__['resource_path'] = resource_path

        __props__['search_string'] = search_string

        __props__['tags'] = tags

        if not type:
            raise TypeError('Missing required property type')
        __props__['type'] = type

        super(HealthCheck, __self__).__init__(
            'aws:route53/healthCheck:HealthCheck',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

