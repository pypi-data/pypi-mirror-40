# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class NfsLocation(pulumi.CustomResource):
    """
    Manages an NFS Location within AWS DataSync.
    
    ~> **NOTE:** The DataSync Agents must be available before creating this resource.
    """
    def __init__(__self__, __name__, __opts__=None, on_prem_config=None, server_hostname=None, subdirectory=None, tags=None):
        """Create a NfsLocation resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not on_prem_config:
            raise TypeError('Missing required property on_prem_config')
        __props__['on_prem_config'] = on_prem_config

        if not server_hostname:
            raise TypeError('Missing required property server_hostname')
        __props__['server_hostname'] = server_hostname

        if not subdirectory:
            raise TypeError('Missing required property subdirectory')
        __props__['subdirectory'] = subdirectory

        __props__['tags'] = tags

        __props__['arn'] = None
        __props__['uri'] = None

        super(NfsLocation, __self__).__init__(
            'aws:datasync/nfsLocation:NfsLocation',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

