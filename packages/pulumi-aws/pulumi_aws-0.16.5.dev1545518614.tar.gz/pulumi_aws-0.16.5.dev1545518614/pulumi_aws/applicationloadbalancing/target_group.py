# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class TargetGroup(pulumi.CustomResource):
    """
    Provides a Target Group resource for use with Load Balancer resources.
    
    ~> **Note:** `aws_alb_target_group` is known as `aws_lb_target_group`. The functionality is identical.
    """
    def __init__(__self__, __name__, __opts__=None, deregistration_delay=None, health_check=None, name=None, name_prefix=None, port=None, protocol=None, proxy_protocol_v2=None, slow_start=None, stickiness=None, tags=None, target_type=None, vpc_id=None):
        """Create a TargetGroup resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['deregistration_delay'] = deregistration_delay

        __props__['health_check'] = health_check

        __props__['name'] = name

        __props__['name_prefix'] = name_prefix

        __props__['port'] = port

        __props__['protocol'] = protocol

        __props__['proxy_protocol_v2'] = proxy_protocol_v2

        __props__['slow_start'] = slow_start

        __props__['stickiness'] = stickiness

        __props__['tags'] = tags

        __props__['target_type'] = target_type

        __props__['vpc_id'] = vpc_id

        __props__['arn'] = None
        __props__['arn_suffix'] = None

        super(TargetGroup, __self__).__init__(
            'aws:applicationloadbalancing/targetGroup:TargetGroup',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

