# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class Gateway(pulumi.CustomResource):
    """
    Manages an AWS Storage Gateway file, tape, or volume gateway in the provider region.
    
    ~> NOTE: The Storage Gateway API requires the gateway to be connected to properly return information after activation. If you are receiving `The specified gateway is not connected` errors during resource creation (gateway activation), ensure your gateway instance meets the [Storage Gateway requirements](https://docs.aws.amazon.com/storagegateway/latest/userguide/Requirements.html).
    """
    def __init__(__self__, __name__, __opts__=None, activation_key=None, gateway_ip_address=None, gateway_name=None, gateway_timezone=None, gateway_type=None, medium_changer_type=None, smb_active_directory_settings=None, smb_guest_password=None, tape_drive_type=None):
        """Create a Gateway resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['activation_key'] = activation_key

        __props__['gateway_ip_address'] = gateway_ip_address

        if not gateway_name:
            raise TypeError('Missing required property gateway_name')
        __props__['gateway_name'] = gateway_name

        if not gateway_timezone:
            raise TypeError('Missing required property gateway_timezone')
        __props__['gateway_timezone'] = gateway_timezone

        __props__['gateway_type'] = gateway_type

        __props__['medium_changer_type'] = medium_changer_type

        __props__['smb_active_directory_settings'] = smb_active_directory_settings

        __props__['smb_guest_password'] = smb_guest_password

        __props__['tape_drive_type'] = tape_drive_type

        __props__['arn'] = None
        __props__['gateway_id'] = None

        super(Gateway, __self__).__init__(
            'aws:storagegateway/gateway:Gateway',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

