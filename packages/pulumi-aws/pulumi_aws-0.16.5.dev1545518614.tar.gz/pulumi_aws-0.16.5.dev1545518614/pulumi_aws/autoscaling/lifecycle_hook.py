# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class LifecycleHook(pulumi.CustomResource):
    """
    Provides an AutoScaling Lifecycle Hook resource.
    
    ~> **NOTE:** Terraform has two types of ways you can add lifecycle hooks - via
    the `initial_lifecycle_hook` attribute from the
    [`aws_autoscaling_group`](https://www.terraform.io/docs/providers/aws/r/autoscaling_group.html)
    resource, or via this one. Hooks added via this resource will not be added
    until the autoscaling group has been created, and depending on your
    [capacity](https://www.terraform.io/docs/providers/aws/r/autoscaling_group.html#waiting-for-capacity)
    settings, after the initial instances have been launched, creating unintended
    behavior. If you need hooks to run on all instances, add them with
    `initial_lifecycle_hook` in
    [`aws_autoscaling_group`](https://www.terraform.io/docs/providers/aws/r/autoscaling_group.html),
    but take care to not duplicate those hooks with this resource.
    """
    def __init__(__self__, __name__, __opts__=None, autoscaling_group_name=None, default_result=None, heartbeat_timeout=None, lifecycle_transition=None, name=None, notification_metadata=None, notification_target_arn=None, role_arn=None):
        """Create a LifecycleHook resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not autoscaling_group_name:
            raise TypeError('Missing required property autoscaling_group_name')
        __props__['autoscaling_group_name'] = autoscaling_group_name

        __props__['default_result'] = default_result

        __props__['heartbeat_timeout'] = heartbeat_timeout

        if not lifecycle_transition:
            raise TypeError('Missing required property lifecycle_transition')
        __props__['lifecycle_transition'] = lifecycle_transition

        __props__['name'] = name

        __props__['notification_metadata'] = notification_metadata

        __props__['notification_target_arn'] = notification_target_arn

        __props__['role_arn'] = role_arn

        super(LifecycleHook, __self__).__init__(
            'aws:autoscaling/lifecycleHook:LifecycleHook',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

