# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class Stage(pulumi.CustomResource):
    """
    Provides an API Gateway Stage.
    """
    def __init__(__self__, __name__, __opts__=None, access_log_settings=None, cache_cluster_enabled=None, cache_cluster_size=None, client_certificate_id=None, deployment=None, description=None, documentation_version=None, rest_api=None, stage_name=None, tags=None, variables=None, xray_tracing_enabled=None):
        """Create a Stage resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['access_log_settings'] = access_log_settings

        __props__['cache_cluster_enabled'] = cache_cluster_enabled

        __props__['cache_cluster_size'] = cache_cluster_size

        __props__['client_certificate_id'] = client_certificate_id

        if not deployment:
            raise TypeError('Missing required property deployment')
        __props__['deployment'] = deployment

        __props__['description'] = description

        __props__['documentation_version'] = documentation_version

        if not rest_api:
            raise TypeError('Missing required property rest_api')
        __props__['rest_api'] = rest_api

        if not stage_name:
            raise TypeError('Missing required property stage_name')
        __props__['stage_name'] = stage_name

        __props__['tags'] = tags

        __props__['variables'] = variables

        __props__['xray_tracing_enabled'] = xray_tracing_enabled

        __props__['execution_arn'] = None
        __props__['invoke_url'] = None

        super(Stage, __self__).__init__(
            'aws:apigateway/stage:Stage',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

