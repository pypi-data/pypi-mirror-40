# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class TransitGateway(pulumi.CustomResource):
    """
    Manages an EC2 Transit Gateway.
    """
    def __init__(__self__, __name__, __opts__=None, amazon_side_asn=None, auto_accept_shared_attachments=None, default_route_table_association=None, default_route_table_propagation=None, description=None, dns_support=None, tags=None, vpn_ecmp_support=None):
        """Create a TransitGateway resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['amazon_side_asn'] = amazon_side_asn

        __props__['auto_accept_shared_attachments'] = auto_accept_shared_attachments

        __props__['default_route_table_association'] = default_route_table_association

        __props__['default_route_table_propagation'] = default_route_table_propagation

        __props__['description'] = description

        __props__['dns_support'] = dns_support

        __props__['tags'] = tags

        __props__['vpn_ecmp_support'] = vpn_ecmp_support

        __props__['arn'] = None
        __props__['association_default_route_table_id'] = None
        __props__['owner_id'] = None
        __props__['propagation_default_route_table_id'] = None

        super(TransitGateway, __self__).__init__(
            'aws:ec2transitgateway/transitGateway:TransitGateway',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

