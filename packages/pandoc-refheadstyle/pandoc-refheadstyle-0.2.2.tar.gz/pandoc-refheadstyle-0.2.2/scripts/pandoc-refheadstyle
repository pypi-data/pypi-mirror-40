#!/usr/bin/env python
# encoding=utf-8
# pylint: disable=C0103
#
# Copyright (c) 2018 Odin Kroeger
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
# OR OTHER DEALINGS IN THE SOFTWARE.
"""usage: pandoc -F pandoc-refheadstyle <INOUT >OUTPUT
          pandoc-refheadstyle --help

Pandoc filter that sets a custom style for the reference section header.

optional arguments:
  -h, --help            show this help message and exit
"""

from argparse import ArgumentParser
from panflute import run_filter
from pandoc_refheadstyle import RefHeadStyleSetter

DESCRIPTION = ('Pandoc filter that sets a custom style for the reference '
               'section header. See pandoc-refheadstyle(1) for details.')

DEBUG = False

def main(doc=None):
    r"""Set a custom style for the reference section header.

    :param panflute.Doc doc: The document in which to set the\
        reference section header style.

    See :module:`pandoc_refheadstyle` for details.
    """
    parser = ArgumentParser(description=DESCRIPTION)
    parser.parse_known_args()

    return run_filter(RefHeadStyleSetter(), doc=doc)


if __name__ == '__main__':
    main()
