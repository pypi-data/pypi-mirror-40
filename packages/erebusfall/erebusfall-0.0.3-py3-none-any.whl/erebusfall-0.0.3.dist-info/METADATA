Metadata-Version: 2.1
Name: erebusfall
Version: 0.0.3
Summary: Apply a simple ice-volume correction to marine-isotope proxy records in Python
Home-page: https://github.com/brews/erebusfall
Author: S. Brewster Malevich
Author-email: malevich@email.arizona.edu
License: GPLv3
Keywords: marine isotope paleoclimate proxy deuterium d18o
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Software Development
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown
Requires-Dist: numpy
Requires-Dist: scipy

# erebusfall

[![Travis-CI Build Status](https://travis-ci.org/brews/erebusfall.svg?branch=master)](https://travis-ci.org/brews/erebusfall)

Apply a simple ice-volume correction to marine-isotope 
[δ18O](https://en.wikipedia.org/wiki/%CE%9418O) and [δD](https://en.wikipedia.org/wiki/Deuterium)
 proxy records, in Python.

The correction uses the [LR04](https://doi.org/10.1594/PANGAEA.701576) 
benthic stack from [Lisiecki and Raymo, 2005](https://doi.org/10.1029/2004PA001071). The stack is scaled so that the [LGM](https://en.wikipedia.org/wiki/Last_Glacial_Maximum)-to-present 
change is assumed to be 1.0 ‰ in accordance with the pore-water estimate of 
[Schrag et al. 1996](https://doi.org/10.1126/science.272.5270.1930). The 
package is adapted from the ice-volume correction in [Tierney et al. 2017](https://doi.org/10.1130/G39457.1).


## Example

Start by importing `erebusfall`, `numpy`:

```python
import erebusfall as ef
import numpy as np
```

...and creating a hypothetical proxy time 
series...

```python
age_ka = np.arange(0, 20, 1)
proxy = np.random.normal(loc=-2.0, size=len(age_ka))
```

Now we can plug this into `ef.icevol_correction()` with a few key options:

```python
proxy_adjusted = ef.icevol_correction(age_ka, proxy, 
                                      proxytype='d18o', 
                                      timeunit='ka')
```

We first plug in the proxy age and proxy values. The `proxytype='d18o'` 
indicates that we're dealing with δ18O. We can set `proxytype='dd'` for a δD 
record. The `timeunit` argument indicates that `age_ka` is in thousands of 
years before present. There are also options for for "years BP" and 
"million years BP". The output from the function, `proxy_adjusted`, is the 
corrected isotope proxy as a numpy array.

See `help(ef.icevol_correction)` for more documentation.

## Installation

You can install the package [from PyPI](https://pypi.python.org/pypi/erebusfall) with

```
pip install erebusfall
```

If you want to use `conda`:

```
conda install erebusfall -c sbmalev
```

## Development and Support

Source code is [hosted online](https://github.com/brews/erebusfall) under an Open 
Source license. Please feel free to file any 
[bugs and issues](https://github.com/brews/erebusfall/issues) you find.


