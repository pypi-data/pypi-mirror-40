from math import floor

from роОрогрпНрогро┐роХрпНроХрпИ.роирпАроЯрпНроЯро┐рокрпНрокрпБроХро│рпН import _роЙро░рпИ
from ..роорпВро▓роорпН import роирпАроЯрпНроЯро┐рокрпНрокрпБ_ро╡ро╛ро░рпНрокрпНрокрпБро░рпБ

родроХро╡ро▓рпНроХро│рпН = [
    'ЁЭЛа', 'ЁЭЛб', 'ЁЭЛв', 'ЁЭЛг', 'ЁЭЛд', 'ЁЭЛе', 'ЁЭЛж', 'ЁЭЛз', 'ЁЭЛи', 'ЁЭЛй', 'ЁЭЛк', 'ЁЭЛл', 'ЁЭЛм', 'ЁЭЛн', 'ЁЭЛо', 'ЁЭЛп', 'ЁЭЛ░', 'ЁЭЛ▒', 'ЁЭЛ▓', 'ЁЭЛ│'
]
роЕроХ_родроХро╡ро▓рпНроХро│рпН = {роЕ: роО for роО, роЕ in enumerate(родроХро╡ро▓рпНроХро│рпН)}


class рооро╛ропро╛рокрпН(роирпАроЯрпНроЯро┐рокрпНрокрпБ_ро╡ро╛ро░рпНрокрпНрокрпБро░рпБ):

    def роОрогрпНрогрпБроХрпНроХрпБ(родройрпН, роЙро░рпИ, роорпКро┤ро┐="mayab'"):
        роОрогрпН = 0
        роОродро┐ро░рпН = роЙро░рпИ.startswith('-')
        if роОродро┐ро░рпН:
            роЙро░рпИ = роЙро░рпИ[1:]
        try:
            роорпБро┤рпБ, родроЪроо = роЙро░рпИ.split('.')
        except ValueError:
            роорпБро┤рпБ = роЙро░рпИ
            родроЪроо = None

        if not all(роЕ in роЕроХ_родроХро╡ро▓рпНроХро│рпН for роЕ in роорпБро┤рпБ):
            raise ValueError
        if родроЪроо is not None and not all(роЕ in роЕроХ_родроХро╡ро▓рпНроХро│рпН for роЕ in родроЪроо):
            raise ValueError

        for роЕ in роорпБро┤рпБ:
            роОрогрпН *= 20
            роОрогрпН += роЕроХ_родроХро╡ро▓рпНроХро│рпН[роЕ]

        if родроЪроо is not None:
            род = 20
            for роО, роЕ in enumerate(родроЪроо):
                роО_роЪрпБро▒рпНро▒рпБ = len(_роЙро░рпИ(1 / род))
                роОрогрпН += роЕроХ_родроХро╡ро▓рпНроХро│рпН[роЕ]/род
                роОрогрпН = round(роОрогрпН, роО_роЪрпБро▒рпНро▒рпБ)
                род *= 20
        if роОродро┐ро░рпН:
            роОрогрпН *= -1

        if '.' in роЙро░рпИ:
            return float(роОрогрпН)
        else:
            return int(роОрогрпН)

    def роЙро░рпИроХрпНроХрпБ(родройрпН, роОрогрпН, роорпКро┤ро┐="mayab'", роорпКро┤ро┐_роорпВро▓роорпН=None, родро│роорпН=None):
        import math
        if роОрогрпН == 0:
            return родроХро╡ро▓рпНроХро│рпН[0]
        роОродро┐ро░рпН = роОрогрпН < 0
        роОрогрпН = abs(роОрогрпН)
        try:
            родроЪроо = float('0.' + _роЙро░рпИ(роОрогрпН).split('.')[1])
            роорпБро┤рпБ = floor(роОрогрпН)
        except IndexError:
            родроЪроо = None
            роорпБро┤рпБ = роОрогрпН
        if роорпБро┤рпБ == 0:
            род_роО = 0
        else:
            род_роО = math.floor(math.log(роорпБро┤рпБ, 20)) + 1
        роЙро░рпИ = [родроХро╡ро▓рпНроХро│рпН[0]] * род_роО
        for роО in range(род_роО):
            род = род_роО - роО - 1
            роо = int(роорпБро┤рпБ / (20 ** род))
            роЙро░рпИ[роО] = родроХро╡ро▓рпНроХро│рпН[роо]
            роорпБро┤рпБ -= роо * 20**род
        роЙро░рпИ = ''.join(роЙро░рпИ)

        if родроЪроо is not None:
            роЙро░рпИ += '.'
            while родроЪроо != 0:
                роО_роЪрпБро▒рпНро▒рпБ = len(_роЙро░рпИ(родроЪроо))
                родроЪроо *= 20
                роЙро░рпИ+= родроХро╡ро▓рпНроХро│рпН[int(родроЪроо)]
                родроЪроо -= int(родроЪроо)
                родроЪроо = round(родроЪроо, роО_роЪрпБро▒рпНро▒рпБ)
        if роОродро┐ро░рпН:
            роЙро░рпИ = '-' + роЙро░рпИ
        return роЙро░рпИ

    def роорпКро┤ро┐роХро│рпН(родройрпН):
        return ["mayab'"]

    def ро╡ро┤ро╡рпЖро│ро┐(родройрпН, роорпКро┤ро┐=None):
        роОрогрпНроХро│рпН = ''.join(['\\U%08x' % ord(роЕ) for роЕ in родроХро╡ро▓рпНроХро│рпН])

        ро╡ро┤ро╡рпЖро│ро┐ = f'\-?(([{роОрогрпНроХро│рпН}]+([\.][{роОрогрпНроХро│рпН}]*)?)|([\.][{роОрогрпНроХро│рпН}]+))'

        return ро╡ро┤ро╡рпЖро│ро┐

