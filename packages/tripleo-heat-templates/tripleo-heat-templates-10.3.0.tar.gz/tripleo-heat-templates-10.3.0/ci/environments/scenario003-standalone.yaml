resource_registry:
  OS::TripleO::Services::CinderApi: OS::Heat::None
  OS::TripleO::Services::CinderScheduler: OS::Heat::None
  OS::TripleO::Services::CinderVolume: OS::Heat::None
  OS::TripleO::Services::Horizon: OS::Heat::None
  OS::TripleO::Services::SwiftProxy: OS::Heat::None
  OS::TripleO::Services::SwiftStorage: OS::Heat::None
  OS::TripleO::Services::SwiftRingBuilder: OS::Heat::None
  OS::TripleO::Services::SaharaApi: ../../docker/services/sahara-api.yaml
  OS::TripleO::Services::SaharaEngine: ../../docker/services/sahara-engine.yaml
  OS::TripleO::Services::MistralApi: ../../docker/services/mistral-api.yaml
  OS::TripleO::Services::MistralEngine: ../../docker/services/mistral-engine.yaml
  OS::TripleO::Services::MistralExecutor: ../../docker/services/mistral-executor.yaml
  OS::TripleO::Services::MistralEventEngine: ../../docker/services/mistral-event-engine.yaml
  OS::TripleO::Services::OsloMessagingRpc: ../../docker/services/messaging/rpc-qdrouterd.yaml
  OS::TripleO::Services::OsloMessagingNotify: ../../docker/services/pacemaker/notify-rabbitmq.yaml
  OS::TripleO::Services::HAproxy: ../../docker/services/pacemaker/haproxy.yaml
  OS::TripleO::Services::Pacemaker: ../../puppet/services/pacemaker.yaml
  OS::TripleO::Services::PacemakerRemote: ../../puppet/services/pacemaker_remote.yaml
  OS::TripleO::Services::Clustercheck: ../../docker/services/pacemaker/clustercheck.yaml
  OS::TripleO::Services::MySQL: ../../docker/services/pacemaker/database/mysql.yaml
  OS::TripleO::Services::DesignateApi: ../../docker/services/designate-api.yaml
  OS::TripleO::Services::DesignateCentral: ../../docker/services/designate-central.yaml
  OS::TripleO::Services::DesignateProducer: ../../docker/services/designate-producer.yaml
  OS::TripleO::Services::DesignateWorker: ../../docker/services/designate-worker.yaml
  OS::TripleO::Services::DesignateMDNS: ../../docker/services/designate-mdns.yaml
  # Some infra instances don't pass the ping test but are otherwise working.
  # Since the OVB jobs also test this functionality we can shut it off here.
  OS::TripleO::AllNodes::Validation: ../common/all-nodes-validation-disabled.yaml

parameter_defaults:
  Debug: true
  # we don't deploy Swift so we switch to file backend.
  GlanceBackend: 'file'
  KeystoneTokenProvider: 'fernet'
  SwiftCeilometerPipelineEnabled: false
  NotificationDriver: 'noop'
  NeutronPluginExtensions: qos,port_security,dns
  RpcPort: 31459
  NotifyPort: 5672
  DesignatePools: |
    - name: default
      # The name is immutable. There will be no option to change the name after
      # creation and the only way will to change it will be to delete it
      # (and all zones associated with it) and recreate it.
      description: Default Pool

      attributes: {}

      # List out the NS records for zones hosted within this pool
      # This should be a record that is created outside of designate, that
      # points to the public IP of the controller node.
      ns_records:
        - hostname: ns1-1.example.org.
          priority: 1

      # List out the nameservers for this pool. These are the actual BIND servers.
      # We use these to verify changes have propagated to all nameservers.
      nameservers:
        - host: 192.168.24.251
          port: 53

      # List out the targets for this pool. For BIND there will be one
      # entry for each BIND server, as we have to run rndc command on each server
      targets:
        - type: bind9
          description: BIND9 Server 1

          # List out the designate-mdns servers from which BIND servers should
          # request zone transfers (AXFRs) from.
          # This should be the IP of the controller node.
          # If you have multiple controllers you can add multiple masters
          # by running designate-mdns on them, and adding them here.
          masters:
            - host: 127.0.0.1
              port: 5354

          # BIND Configuration options
          options:
            host: 192.168.24.251
            port: 53
            rndc_host: 192.168.24.251
            rndc_port: 953
            rndc_key_file: /etc/rndc.key
