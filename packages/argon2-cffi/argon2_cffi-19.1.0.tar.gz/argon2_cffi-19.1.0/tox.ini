[tox]
envlist = lint,py27,py34,py35,py36,py37,pypy,pypy3,system-argon2,docs,manifest,pypi-description,coverage-report


[testenv:lint]
description = Run all pre-commit hooks.
basepython = python3.7
skip_install = true
deps = pre-commit
passenv = HOMEPATH  # needed on Windows
commands = pre-commit run --all-files --verbose


[testenv]
description = Run tests and measure coverage.
extras = tests
commands =
    coverage run --parallel -m pytest {posargs}
    coverage run --parallel -m argon2 -n 1 -t 1 -m 8 -p 1


[testenv:system-argon2]
description = Run tests against bindings that use a system installation of Argon2.
basepython = python3.7
setenv = ARGON2_CFFI_USE_SYSTEM=1
extras = tests
install_command = pip install {opts} --no-binary=argon2_cffi {packages}
commands =
    python -m pytest {posargs}
    python -m argon2 -n 1 -t 1 -m 8 -p 1


[testenv:docs]
description = Build docs and run doctests.
# RTD allows only Python 3.5 for now.
basepython = python3.5
extras = docs
commands =
    python -m doctest README.rst
    sphinx-build -W -b html -d {envtmpdir}/doctrees docs docs/_build/html
    sphinx-build -W -b doctest -d {envtmpdir}/doctrees docs docs/_build/html


[testenv:manifest]
description = Ensure MANIFEST.in is up to date.
basepython = python3.7
deps = check-manifest
skip_install = true
commands = check-manifest


[testenv:pypi-description]
description = Ensure README.rst renders on PyPI.
basepython = python3.7
skip_install = true
deps =
    twine
    pip >= 18.0.0
commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*


[testenv:coverage-report]
description = Report coverage over all test runs.
basepython = python3.6
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage report
