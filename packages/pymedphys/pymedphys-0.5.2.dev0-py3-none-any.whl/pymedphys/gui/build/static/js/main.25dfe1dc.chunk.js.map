{"version":3,"sources":["table.tsx","jupyter.tsx","dockpanel.tsx","index.tsx"],"names":["cellRenderer","rowIndex","react_default","a","createElement","cell","concat","toFixed","cellRenderer2","DollarsTable","buttons","icon","intent","text","table","numRows","column","name","Component","document","getElementById","serviceManager","ServiceManager","contextManager","ContextManager","rendermime","RenderMimeRegistry","initialFactories","addFactory","safe","mimeTypes","BOKEHJS_LOAD_MIME_TYPE","createRenderer","options","BokehJSLoad","BOKEHJS_EXEC_MIME_TYPE","BokehJSExec","kernelPromise","Kernel","startNew","CodeButtons","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","outputDiv","React","createRef","runCode","bind","assertThisInitialized","matplotlib","bokeh","inherits","createClass","key","value","code","join","_this2","model","OutputAreaModel","outputArea","OutputArea","then","kernel","node","current","future","requestExecute","Widget","attach","onClick","ref","createConsole","ready","manager","commands","CommandRegistry","addEventListener","event","processKeydownEvent","editorFactory","editorServices","factoryService","newInlineEditor","contentFactory","ConsolePanel","ContentFactory","consolePanel","mimeTypeService","panel","SplitPanel","id","orientation","spacing","setStretch","addWidget","window","update","command","selector","addCommand","label","execute","console","clear","addKeyBinding","keys","insertLinebreak","buildConsole","itemCmp","first","second","rank","SideBarHandler","side","_items","Array","_side","_sideBar","_stackedPanel","_lastCurrent","TabBar","insertBehavior","removeBehavior","allowDeselect","StackedPanel","hide","currentChanged","connect","_onCurrentChanged","tabActivateRequested","_onTabActivateRequested","widgetRemoved","_onWidgetRemoved","previous","length","widget","activate","_findWidgetByID","currentTitle","title","parent","item","index","_findInsertIndex","ArrayExt","insert","insertWidget","insertTab","dataset","_refreshVisibility","upperBound","findFirstIndex","i","find","setHidden","titles","sender","args","oldWidget","previousTitle","_findWidgetByTitle","newWidget","show","body","setAttribute","removeAttribute","owner","removeAt","_findWidgetIndex","removeTab","createMenu","sub1","Menu","mnemonic","addItem","sub2","type","submenu","root","ContentWidget","createNode","setFlag","Flag","DisallowLayout","addClass","toLowerCase","closable","caption","content","input","placeholder","appendChild","msg","isAttached","inputNode","focus","getElementsByTagName","onload","iconClass","log","isEnabled","menu1","menu2","menu3","bar","MenuBar","addMenu","contextMenu","ContextMenu","open","preventDefault","b1","g1","dock","DockPanel","mode","savedLayouts","push","saveLayout","restoreLayout","hsplitPanel","hboxPanel","BoxPanel","direction","rightHandler","sideBar","stackedPanel","test","test2","setRelativeSizes","rootPanel","main","onresize","dockpanel","ReactDOM","render","src_table","jupyter_CodeButtons"],"mappings":"ubAMMA,EAAe,SAACC,GACpB,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAD,SAAAC,QAAuB,GAAXL,GAAeM,QAAQ,MAGtCC,EAAgB,SAACP,GACrB,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAD,SAAAC,QAAuB,IAAXL,GAAgBM,QAAQ,MAGvCE,mLAEF,OACEP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,KAAK,UAAUC,OAAO,SAASC,KAAK,UAC5CX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOC,QAAS,IACdb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQC,KAAK,UAAUjB,aAAcA,IACrCE,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQC,KAAK,WAAWjB,aAAcQ,aAPrBU,aAgBZT,GAFFU,SAASC,eAAe,QAEtBX,2FCiCXY,EAAiB,IAAIC,iBAqBrBC,EAAiB,IAAIC,iBAFX,IAIRC,EAAa,IAAIC,qBAAmB,CAAEC,+CAC5CF,EAAWG,WAAW,CACpBC,MAAM,EACNC,UAAW,CAACC,0BACZC,eAAgB,SAACC,GAAD,OAAa,IAAIC,cAAYD,KAC5C,GAEHR,EAAWG,WAAW,CACpBC,MAAM,EACNC,UAAW,CAACK,0BACZH,eAAgB,SAACC,GAAD,OAAa,IAAIG,cAAYH,EAASV,MACpD,GAEJ,IAAMc,EAAgBC,SAAOC,WAIhBC,EAAb,SAAAC,GAIE,SAAAD,EAAYE,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACtBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAHRQ,eAEwB,EAEtBP,EAAKO,UAAYC,IAAMC,YACvBT,EAAKU,QAAUV,EAAKU,QAAQC,KAAbV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACfA,EAAKa,WAAab,EAAKa,WAAWF,KAAhBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAClBA,EAAKc,MAAQd,EAAKc,MAAMH,KAAXV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KALSA,EAJ1B,OAAAC,OAAAc,EAAA,EAAAd,CAAAJ,EAAAC,GAAAG,OAAAe,EAAA,EAAAf,CAAAJ,EAAA,EAAAoB,IAAA,aAAAC,MAAA,WAiBI,IAAMC,EAAO,CACX,qBACA,kCACA,qBACA,0BACA,WACA,WACA,WACA,kBACAC,KAAK,MACPjB,KAAKO,QAAQS,KA3BjB,CAAAF,IAAA,QAAAC,MAAA,WA+BI,IAAMC,EAAO,CACX,qBACA,2DACA,oBACA,UACA,4BACA,4BACA,6BACA,4BACA,yGACA,mEACA,WACAC,KAAK,MACPjB,KAAKO,QAAQS,KA5CjB,CAAAF,IAAA,UAAAC,MAAA,SA+CUC,GAAc,IAAAE,EAAAlB,KACdmB,EAAQ,IAAIC,kBACZC,EAAa,IAAIC,aAAW,CAAEH,QAAOxC,eAE3CY,EAAcgC,KAAK,SAAAC,GACjB,IAAIC,EAAOP,EAAKd,UAAUsB,QAE1BL,EAAWM,OAASH,EAAOI,eAAe,CAAEZ,SAC5Ca,SAAOC,OAAOT,EAAYI,OAvDhC,CAAAX,IAAA,SAAAC,MAAA,WA6DI,OACE3D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,KAAK,UAAUC,OAAO,UAAUC,KAAK,aAAagE,QAAS/B,KAAKU,aACxEtD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,KAAK,UAAUC,OAAO,UAAUC,KAAK,QAAQgE,QAAS/B,KAAKW,QACnEvD,EAAAC,EAAAC,cAAA,OAAK0E,IAAKhC,KAAKI,iBAjEvBV,EAAA,CAAiCtB,aAsG1B,SAAS6D,IACd,OAAO1D,EAAe2D,MAAMX,KAAK,WAC/B,OAIJ,SAAsBY,GACpB,IAAIC,EAAW,IAAIC,kBAGnBhE,SAASiE,iBAAiB,UAAW,SAAAC,GACnCH,EAASI,oBAAoBD,KAG/B,IAAIE,EAAgBC,iBAAeC,eAAeC,gBAC9CC,EAAiB,IAAIC,eAAaC,eAAe,CAAEN,kBAOnDO,EAAe,IAAIF,eAAa,CAClCnE,aACAwD,UACAU,iBACAI,gBAAiBP,iBAAeO,kBAG9BC,EAAQ,IAAIC,aAChBD,EAAME,GAAK,gBACXF,EAAMG,YAAc,aACpBH,EAAMI,QAAU,EAChBH,aAAWI,WAAWP,EAAc,GACpCE,EAAMM,UAAUR,GAMhBS,OAAOnB,iBAAiB,SAAU,WAChCY,EAAMQ,WAGR,IAEIC,EAFAC,EAAW,mBAwCf,OAnCAD,EAAU,gBACVvB,EAASyB,WAAWF,EAAS,CAC3BG,MAAO,QACPC,QAAS,WACPf,EAAagB,QAAQC,WAIzBN,EAAU,kBACVvB,EAASyB,WAAWF,EAAS,CAC3BG,MAAO,iBACPC,QAAS,WACPf,EAAagB,QAAQD,aAGzB3B,EAAS8B,cAAc,CAAEP,UAASC,WAAUO,KAAM,CAAC,WAEnDR,EAAU,yBACVvB,EAASyB,WAAWF,EAAS,CAC3BG,MAAO,wBACPC,QAAS,WACPf,EAAagB,QAAQD,SAAQ,MAGjC3B,EAAS8B,cAAc,CAAEP,UAASC,WAAUO,KAAM,CAAC,iBAEnDR,EAAU,oBACVvB,EAASyB,WAAWF,EAAS,CAC3BG,MAAO,oBACPC,QAAS,WACPf,EAAagB,QAAQI,qBAGzBhC,EAAS8B,cAAc,CAAEP,UAASC,WAAUO,KAAM,CAAC,gBAE5CjB,EAlFEmB,CAAa9F,KClKjB,SAAS+F,EAAQC,EAAkBC,GACxC,OAAOD,EAAME,KAAOD,EAAOC,SAIvBC,aAIJ,SAAAA,EAAYC,GAAe7E,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,GAAA1E,KA8LnB4E,OAAS,IAAIC,MA9LK7E,KA+LlB8E,WA/LkB,EAAA9E,KAgMlB+E,cAhMkB,EAAA/E,KAiMlBgF,mBAjMkB,EAAAhF,KAkMlBiF,kBAlMkB,EACxBjF,KAAK8E,MAAQH,EACb3E,KAAK+E,SAAW,IAAIG,SAAe,CACjCC,eAAgB,OAChBC,eAAgB,OAChBC,eAAe,IAEjBrF,KAAKgF,cAAgB,IAAIM,eACzBtF,KAAK+E,SAASQ,OACdvF,KAAKgF,cAAcO,OACnBvF,KAAKiF,aAAe,KACpBjF,KAAK+E,SAASS,eAAeC,QAC3BzF,KAAK0F,kBACL1F,MAEFA,KAAK+E,SAASY,qBAAqBF,QACjCzF,KAAK4F,wBACL5F,MAEFA,KAAKgF,cAAca,cAAcJ,QAC/BzF,KAAK8F,iBACL9F,2DA0BF,IAAM+F,EACJ/F,KAAKiF,cAAiBjF,KAAK4E,OAAOoB,OAAS,GAAKhG,KAAK4E,OAAO,GAAGqB,OAC7DF,GACF/F,KAAKkG,SAASH,EAAS3C,qCASlBA,GACP,IAAI6C,EAASjG,KAAKmG,gBAAgB/C,GAC9B6C,IACFjG,KAAK+E,SAASqB,aAAeH,EAAOI,MACpCJ,EAAOC,wCAOP9C,GACF,OAAoC,OAA7BpD,KAAKmG,gBAAgB/C,sCAO5BpD,KAAK+E,SAASqB,aAAe,uCAQrBH,EAAgBxB,GACxBwB,EAAOK,OAAS,KAChBL,EAAOV,OACP,IAAIgB,EAAO,CAAEN,SAAQxB,QACjB+B,EAAQxG,KAAKyG,iBAAiBF,GAClCG,WAASC,OAAO3G,KAAK4E,OAAQ4B,EAAOD,GACpCvG,KAAKgF,cAAc4B,aAAaJ,EAAOP,GACzBjG,KAAK+E,SAAS8B,UAAUL,EAAOP,EAAOI,OAG9CS,QAAU,CAAE1D,GAAI6C,EAAO7C,IAC7BpD,KAAK+G,8DAOkBR,GACvB,OAAOG,WAASM,WAAWhH,KAAK4E,OAAQ2B,EAAMjC,4CAMvB2B,GACvB,OAAOS,WAASO,eAAejH,KAAK4E,OAAQ,SAAAsC,GAAC,OAAIA,EAAEjB,SAAWA,+CAMrCI,GACzB,IAAIE,EAAOY,eAAKnH,KAAK4E,OAAQ,SAAA7D,GAAK,OAAIA,EAAMkF,OAAOI,QAAUA,IAC7D,OAAOE,EAAOA,EAAKN,OAAS,6CAMN7C,GACtB,IAAImD,EAAOY,eAAKnH,KAAK4E,OAAQ,SAAA7D,GAAK,OAAIA,EAAMkF,OAAO7C,KAAOA,IAC1D,OAAOmD,EAAOA,EAAKN,OAAS,kDAO5BjG,KAAK+E,SAASqC,UAA0C,IAAhCpH,KAAK+E,SAASsC,OAAOrB,QAC7ChG,KAAKgF,cAAcoC,UAAyC,OAA/BpH,KAAK+E,SAASqB,wDAO3CkB,EACAC,GAEA,IAAMC,EAAYD,EAAKE,cACnBzH,KAAK0H,mBAAmBH,EAAKE,eAC7B,KACEE,EAAYJ,EAAKnB,aACnBpG,KAAK0H,mBAAmBH,EAAKnB,cAC7B,KAQJ,GAPIoB,GACFA,EAAUjC,OAERoC,GACFA,EAAUC,OAEZ5H,KAAKiF,aAAe0C,GAAaH,EAC7BG,EAAW,CACb,IAAMvE,EAAKuE,EAAUvE,GACrB/E,SAASwJ,KAAKC,aAAd,QAAAtK,OAAmCwC,KAAK8E,MAAxC,mBAAgE1B,QAEhE/E,SAASwJ,KAAKE,gBAAd,QAAAvK,OAAsCwC,KAAK8E,MAA3C,oBAEF9E,KAAK+G,qEAOLO,EACAC,GAEAA,EAAKlB,MAAM2B,MAAM9B,oDAMMoB,EAAsBrB,GACzCA,IAAWjG,KAAKiF,eAClBjF,KAAKiF,aAAe,MAEtByB,WAASuB,SAASjI,KAAK4E,OAAQ5E,KAAKkI,iBAAiBjC,IACrDjG,KAAK+E,SAASoD,UAAUlC,EAAOI,OAC/BrG,KAAK+G,qDA9JL,OAAO/G,KAAK+E,8CAOZ,OAAO/E,KAAKgF,uBAkKV5C,EAAW,IAAIC,kBAErB,SAAS+F,IACP,IAAIC,EAAO,IAAIC,OAAK,CAAElG,aACtBiG,EAAKhC,MAAMvC,MAAQ,UACnBuE,EAAKhC,MAAMkC,SAAW,EACtBF,EAAKG,QAAQ,CAAE7E,QAAS,gBACxB0E,EAAKG,QAAQ,CAAE7E,QAAS,gBACxB0E,EAAKG,QAAQ,CAAE7E,QAAS,kBACxB0E,EAAKG,QAAQ,CAAE7E,QAAS,iBAExB,IAAI8E,EAAO,IAAIH,OAAK,CAAElG,aACtBqG,EAAKpC,MAAMvC,MAAQ,UACnB2E,EAAKpC,MAAMkC,SAAW,EACtBE,EAAKD,QAAQ,CAAE7E,QAAS,gBACxB8E,EAAKD,QAAQ,CAAE7E,QAAS,gBACxB8E,EAAKD,QAAQ,CAAE7E,QAAS,kBACxB8E,EAAKD,QAAQ,CAAE7E,QAAS,iBACxB8E,EAAKD,QAAQ,CAAEE,KAAM,UAAWC,QAASN,IAEzC,IAAIO,EAAO,IAAIN,OAAK,CAAElG,aAetB,OAdAwG,EAAKJ,QAAQ,CAAE7E,QAAS,iBACxBiF,EAAKJ,QAAQ,CAAE7E,QAAS,gBACxBiF,EAAKJ,QAAQ,CAAE7E,QAAS,kBACxBiF,EAAKJ,QAAQ,CAAEE,KAAM,cACrBE,EAAKJ,QAAQ,CAAE7E,QAAS,oBACxBiF,EAAKJ,QAAQ,CAAE7E,QAAS,sBACxBiF,EAAKJ,QAAQ,CAAE7E,QAAS,yBACxBiF,EAAKJ,QAAQ,CAAEE,KAAM,cACrBE,EAAKJ,QAAQ,CAAE7E,QAAS,8BACxBiF,EAAKJ,QAAQ,CAAEE,KAAM,cACrBE,EAAKJ,QAAQ,CAAEE,KAAM,UAAWC,QAASF,IACzCG,EAAKJ,QAAQ,CAAEE,KAAM,cACrBE,EAAKJ,QAAQ,CAAE7E,QAAS,kBAEjBiF,MAGHC,cAYJ,SAAAA,EAAY1K,GAAc,IAAA0B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6I,IACxBhJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+I,GAAA1I,KAAAH,KAAM,CAAEyB,KAAMoH,EAAcC,iBACvBC,QAAQlH,SAAOmH,KAAKC,gBACzBpJ,EAAKqJ,SAAS,WACdrJ,EAAKqJ,SAAS/K,EAAKgL,eACnBtJ,EAAKwG,MAAMvC,MAAQ3F,EACnB0B,EAAKwG,MAAM+C,UAAW,EACtBvJ,EAAKwG,MAAMgD,QAAX,yBAAA7L,OAA8CW,GAPtB0B,iFATxB,IAAI4B,EAAOpD,SAASf,cAAc,OAC9BgM,EAAUjL,SAASf,cAAc,OACjCiM,EAAQlL,SAASf,cAAc,SAInC,OAHAiM,EAAMC,YAAc,iBACpBF,EAAQG,YAAYF,GACpB9H,EAAKgI,YAAYH,GACV7H,6DAiBmBiI,GACtB1J,KAAK2J,YACP3J,KAAK4J,UAAUC,0CALjB,OAAO7J,KAAKyB,KAAKqI,qBAAqB,SAAS,UAvBvBjI,UC3Q5B4B,OAAOsG,OAdP,WACa1L,SAASC,eAAe,QD2T9B,SAAmBsK,GACxBxG,EAASyB,WAAW,cAAe,CACjCC,MAAO,MACPyE,SAAU,EACVyB,UAAW,YACXjG,QAAS,WACPC,QAAQiG,IAAI,UAIhB7H,EAASyB,WAAW,eAAgB,CAClCC,MAAO,YACPyE,SAAU,EACVyB,UAAW,aACXjG,QAAS,WACPC,QAAQiG,IAAI,WAIhB7H,EAASyB,WAAW,gBAAiB,CACnCC,MAAO,QACPyE,SAAU,EACVyB,UAAW,cACXjG,QAAS,WACPC,QAAQiG,IAAI,YAIhB7H,EAASyB,WAAW,kBAAmB,CACrCC,MAAO,UACPyE,SAAU,EACVc,QAAS,iBACTtF,QAAS,WACPC,QAAQiG,IAAI,cAIhB7H,EAASyB,WAAW,oBAAqB,CACvCC,MAAO,YACPyE,SAAU,EACVc,QAAS,wBACTtF,QAAS,WACPC,QAAQiG,IAAI,gBAIhB7H,EAASyB,WAAW,uBAAwB,CAC1CC,MAAO,eACPyE,SAAU,EACVc,QAAS,+BACTtF,QAAS,WACPC,QAAQiG,IAAI,mBAIhB7H,EAASyB,WAAW,4BAA6B,CAC/CC,MAAO,eACPyE,SAAU,EACV2B,UAAW,kBAAM,GACjBnG,QAAS,eAGX3B,EAASyB,WAAW,gBAAiB,CACnCC,MAAO,QACPyE,SAAU,EACVyB,UAAW,cACXjG,QAAS,WACPC,QAAQiG,IAAI,YAIhB7H,EAASyB,WAAW,cAAe,CACjCC,MAAO,MACPC,QAAS,WACPC,QAAQiG,IAAI,UAIhB7H,EAASyB,WAAW,cAAe,CACjCC,MAAO,MACPC,QAAS,WACPC,QAAQiG,IAAI,UAIhB7H,EAASyB,WAAW,gBAAiB,CACnCC,MAAO,QACPC,QAAS,WACPC,QAAQiG,IAAI,YAIhB7H,EAASyB,WAAW,eAAgB,CAClCC,MAAO,OACPC,QAAS,WACPC,QAAQiG,IAAI,WAIhB7H,EAASyB,WAAW,gBAAiB,CACnCC,MAAO,QACPC,QAAS,WACPC,QAAQiG,IAAI,YAIhB7H,EAASyB,WAAW,qBAAsB,CACxCC,MAAO,aACPC,QAAS,WACPC,QAAQiG,IAAI,iBAIhB7H,EAASyB,WAAW,oBAAqB,CACvCC,MAAO,cACPC,QAAS,WACPC,QAAQiG,IAAI,kBAIhB7H,EAASyB,WAAW,mBAAoB,CACtCC,MAAO,WACPC,QAAS,WACPC,QAAQiG,IAAI,eAIhB7H,EAASyB,WAAW,oBAAqB,CACvCC,MAAO,YACPC,QAAS,WACPC,QAAQiG,IAAI,gBAIhB7H,EAASyB,WAAW,eAAgB,CAClCC,MAAO,eACPC,QAAS,WACPC,QAAQiG,IAAI,mBAIhB7H,EAAS8B,cAAc,CACrBC,KAAM,CAAC,WACPP,SAAU,OACVD,QAAS,gBAGXvB,EAAS8B,cAAc,CACrBC,KAAM,CAAC,WACPP,SAAU,OACVD,QAAS,iBAGXvB,EAAS8B,cAAc,CACrBC,KAAM,CAAC,WACPP,SAAU,OACVD,QAAS,kBAGXvB,EAAS8B,cAAc,CACrBC,KAAM,CAAC,UAAW,WAClBP,SAAU,OACVD,QAAS,oBAGXvB,EAAS8B,cAAc,CACrBC,KAAM,CAAC,WACPP,SAAU,OACVD,QAAS,8BAGX,IAAIwG,EAAQ/B,IACZ+B,EAAM9D,MAAMvC,MAAQ,OACpBqG,EAAM9D,MAAMkC,SAAW,EAEvB,IAAI6B,EAAQhC,IACZgC,EAAM/D,MAAMvC,MAAQ,OACpBsG,EAAM/D,MAAMkC,SAAW,EAEvB,IAAI8B,EAAQjC,IACZiC,EAAMhE,MAAMvC,MAAQ,OACpBuG,EAAMhE,MAAMkC,SAAW,EAEvB,IAAI+B,EAAM,IAAIC,UACdD,EAAIE,QAAQL,GACZG,EAAIE,QAAQJ,GACZE,EAAIE,QAAQH,GACZC,EAAIlH,GAAK,UAET,IAAIqH,EAAc,IAAIC,cAAY,CAAEtI,aAEpC/D,SAASiE,iBAAiB,cAAe,SAACC,GACpCkI,EAAYE,KAAKpI,IACnBA,EAAMqI,mBAIVH,EAAYjC,QAAQ,CAAE7E,QAAS,cAAeC,SAAU,aACxD6G,EAAYjC,QAAQ,CAAE7E,QAAS,eAAgBC,SAAU,aACzD6G,EAAYjC,QAAQ,CAAE7E,QAAS,gBAAiBC,SAAU,aAE1D6G,EAAYjC,QAAQ,CAAE7E,QAAS,cAAeC,SAAU,sBACxD6G,EAAYjC,QAAQ,CAAE7E,QAAS,cAAeC,SAAU,sBACxD6G,EAAYjC,QAAQ,CAAE7E,QAAS,gBAAiBC,SAAU,sBAC1D6G,EAAYjC,QAAQ,CAAE7E,QAAS,eAAgBC,SAAU,sBACzD6G,EAAYjC,QAAQ,CAAE7E,QAAS,gBAAiBC,SAAU,sBAE1D6G,EAAYjC,QAAQ,CAAE7E,QAAS,eAAgBC,SAAU,4BACzD6G,EAAYjC,QAAQ,CAAE7E,QAAS,uBAAwBC,SAAU,4BACjE6G,EAAYjC,QAAQ,CAAE7E,QAAS,4BAA6BC,SAAU,4BACtE6G,EAAYjC,QAAQ,CAAEE,KAAM,YAAa9E,SAAU,4BAEnDvF,SAASiE,iBAAiB,UAAW,SAACC,GACpCH,EAASI,oBAAoBD,KAGtB,IAAIsG,EAAc,WACxBzF,GAAK,UACR,IAAIyH,EAAK,IAAIhC,EAAc,UAC3BgC,EAAGzH,GAAK,SACR,IAAI0H,EAAK,IAAIjC,EAAc,SAC3BiC,EAAG1H,GAAK,QAER,IAAI2H,EAAO,IAAIC,YACfD,EAAKvH,UAAUqH,GAEfE,EAAKvH,UAAUsH,EAAI,CAAEG,KAAM,cAAejJ,IAAK6I,IAG/C5I,IAAgBV,KAAK,SAAAyB,GACnBA,EAAakG,SAAS,WACtBlG,EAAaqD,MAAMvC,MAAQ,UAC3Bd,EAAaqD,MAAM+C,UAAW,EAC9B2B,EAAKvH,UAAUR,EAAc,CAAEiI,KAAM,YAAajJ,IAAK8I,MAKzDC,EAAK3H,GAAK,OAEV,IAAI8H,EAA0C,GAE9C9I,EAASyB,WAAW,mBAAoB,CACtCC,MAAO,cACPuF,QAAS,+BACTtF,QAAS,WACPmH,EAAaC,KAAKJ,EAAKK,iBAI3BhJ,EAASyB,WAAW,sBAAuB,CACzCC,MAAO,SAAAyD,GACL,wBAAA/J,OAAyB+J,EAAKf,QAEhCzC,QAAS,SAAAwD,GACPwD,EAAKM,cAAcH,EAAa3D,EAAKf,WAIzC,IAAI8E,EAAc,IAAInI,aAAW,CAAEE,YAAa,aAAcC,QAAS,IACnEiI,EAAY,IAAIC,WAAS,CAAEC,UAAW,gBAAiBnI,QAAS,IAEhEoI,EAAe,IAAIhH,EAAe,SACtCgH,EAAaC,QAAQzC,SAAS,cAC9BwC,EAAaC,QAAQzC,SAAS,gBAC9BwC,EAAaE,aAAaxI,GAAK,iBAE/B,IAAIyI,EAAO,IAAIhK,SACf6J,EAAalI,UAAUqI,EAAM,GAE7B,IAAIC,EAAQ,IAAIjK,SAChB6J,EAAalI,UAAUsI,EAAO,GAE9B3I,aAAWI,WAAWwH,EAAM,GAC5B5H,aAAWI,WAAWmI,EAAaE,aAAc,GAEjDJ,WAASjI,WAAWwH,EAAM,GAC1BS,WAASjI,WAAWmI,EAAaC,QAAS,GAE1CL,EAAY9H,UAAUuH,GACtBO,EAAY9H,UAAUkI,EAAaE,cAEnCL,EAAU/H,UAAUuH,GACpBQ,EAAU/H,UAAUkI,EAAaC,SAEjCL,EAAYS,iBAAiB,CAAC,IAAK,IAEnC,IAAIC,EAAY,IAAIR,WAAS,CAAEC,UAAW,gBAAiBnI,QAAS,IAIhE2I,EAAO,IAAIT,WAAS,CAAEC,UAAW,gBAAiBnI,QAAS,IAC/D2I,EAAK/C,SAAS,aACd+C,EAAKzI,UAAU+H,GAGfS,EAAUxI,UAAUyI,GAEpBD,EAAU9C,SAAS,aACnBzF,OAAOyI,SAAW,WAAQF,EAAUtI,UAEpC7B,SAAOC,OAAOwI,EAAKjM,SAASC,eAAe,SAC3CuD,SAAOC,OAAOkK,EAAW3N,SAASC,eAAe,SCxmBjD6N,GACAC,IAASC,OAAOjP,EAAAC,EAAAC,cAACgP,EAAD,MAAkBjO,SAASC,eAAe,UAE1D8N,IAASC,OAAOjP,EAAAC,EAAAC,cAACiP,EAAD,MAAiBlO,SAASC,eAAe","file":"static/js/main.25dfe1dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n\nimport { Button } from \"@blueprintjs/core\";\nimport { Cell, Column, Table } from \"@blueprintjs/table\";\n\nconst cellRenderer = (rowIndex: number) => {\n  return <Cell>{`$${(rowIndex * 10).toFixed(2)}`}</Cell>\n};\n\nconst cellRenderer2 = (rowIndex: number) => {\n  return <Cell>{`$${(rowIndex * 100).toFixed(2)}`}</Cell>\n};\n\nclass DollarsTable extends Component {\n  render() {\n    return (\n      <div>\n        <Button icon=\"refresh\" intent=\"danger\" text=\"Reset\" />\n        <Table numRows={10}>\n          <Column name=\"Dollars\" cellRenderer={cellRenderer} />\n          <Column name=\"Dollars2\" cellRenderer={cellRenderer2} />\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst root = document.getElementById('root') as HTMLDivElement\n\nexport default DollarsTable;\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n\nimport { Button } from \"@blueprintjs/core\";\n\nimport {\n  OutputArea,\n  OutputAreaModel\n} from '@jupyterlab/outputarea';\n\nimport { ClientSession, IClientSession } from '@jupyterlab/apputils';\n\n\nimport {\n  RenderMimeRegistry,\n  standardRendererFactories as initialFactories\n} from '@jupyterlab/rendermime';\n\nimport { Kernel } from '@jupyterlab/services';\n\nimport { DocumentRegistry, Context } from '@jupyterlab/docregistry'\n\nimport { DocumentManager } from '@jupyterlab/docmanager';\n\nimport { CommandRegistry } from '@phosphor/commands';\n\nimport { DockPanel, Menu, CommandPalette, SplitPanel, Widget, Panel } from '@phosphor/widgets';\n\nimport { ServiceManager } from '@jupyterlab/services';\n\nimport { editorServices } from '@jupyterlab/codemirror';\n\nimport { ConsolePanel, CodeConsole } from '@jupyterlab/console';\n\nimport { BokehJSLoad, BokehJSExec, BOKEHJS_LOAD_MIME_TYPE, BOKEHJS_EXEC_MIME_TYPE } from 'jupyterlab_bokeh/lib/renderer';\nimport { ContextManager } from 'jupyterlab_bokeh/lib/manager';\n// import { NBWidgetExtension } from 'jupyterlab_bokeh/lib/plugin';\n\n\n\n// let dock = new DockPanel();\n\n// let widgets: Widget[] = [];\n// let activeWidget: Widget;\n\n// let opener = {\n//   open: (widget: Widget) => {\n//     if (widgets.indexOf(widget) === -1) {\n//       dock.addWidget(widget, { mode: 'tab-after' });\n//       widgets.push(widget);\n//     }\n//     dock.activateWidget(widget);\n//     activeWidget = widget;\n//     widget.disposed.connect((w: Widget) => {\n//       let index = widgets.indexOf(w);\n//       widgets.splice(index, 1);\n//     });\n//   }\n// };\n\nlet serviceManager = new ServiceManager();\n// let docRegistry = new DocumentRegistry();\n// let docManager = new DocumentManager({\n//   registry: docRegistry,\n//   manager: serviceManager,\n//   opener\n// });\n\n// let context = new Context({\n//   manager: serviceManager\n// })\n\n// let widget = new Widget()\n\n// docManager\n\n// docRegistry.addWidgetExtension('Notebook', new NBWidgetExtension())\n// docRegistry\n\nlet context = {} as DocumentRegistry.IContext<DocumentRegistry.IModel>\n\nlet contextManager = new ContextManager(context);\n\nconst rendermime = new RenderMimeRegistry({ initialFactories });\nrendermime.addFactory({\n  safe: true,  // false\n  mimeTypes: [BOKEHJS_LOAD_MIME_TYPE],\n  createRenderer: (options) => new BokehJSLoad(options)\n}, 0);\n\nrendermime.addFactory({\n  safe: true,  // false\n  mimeTypes: [BOKEHJS_EXEC_MIME_TYPE],\n  createRenderer: (options) => new BokehJSExec(options, contextManager)\n}, -1);\n\nconst kernelPromise = Kernel.startNew()\n\n\n\nexport class CodeButtons extends Component {\n\n  outputDiv: React.RefObject<HTMLDivElement>\n\n  constructor(props: any) {\n    super(props);\n    this.outputDiv = React.createRef<HTMLDivElement>();\n    this.runCode = this.runCode.bind(this);\n    this.matplotlib = this.matplotlib.bind(this);\n    this.bokeh = this.bokeh.bind(this);\n  }\n\n  // componentDidMount() {\n  //   this.node = ReactDOM.findDOMNode(this) as HTMLElement\n  // }\n\n  matplotlib() {\n    const code = [\n      'import numpy as np',\n      'import matplotlib.pyplot as plt',\n      '%matplotlib inline',\n      'x = np.linspace(-10,10)',\n      'y = x**2',\n      'print(x)',\n      'print(y)',\n      'plt.plot(x, y)'\n    ].join('\\n');\n    this.runCode(code)\n  }\n\n  bokeh() {\n    const code = [\n      'import numpy as np',\n      'from bokeh.plotting import figure, show, output_notebook',\n      'output_notebook()',\n      'N = 500',\n      'x = np.linspace(0, 10, N)',\n      'y = np.linspace(0, 10, N)',\n      'xx, yy = np.meshgrid(x, y)',\n      'd = np.sin(xx)*np.cos(yy)',\n      'p = figure(x_range=(0, 10), y_range=(0, 10), tooltips=[(\"x\", \"$x\"), (\"y\", \"$y\"), (\"value\", \"@image\")])',\n      'p.image(image=[d], x=0, y=0, dw=10, dh=10, palette=\"Spectral11\")',\n      'show(p)'\n    ].join('\\n');\n    this.runCode(code)\n  }\n\n  runCode(code: string) {\n    const model = new OutputAreaModel();\n    const outputArea = new OutputArea({ model, rendermime });\n\n    kernelPromise.then(kernel => {\n      let node = this.outputDiv.current as HTMLDivElement\n\n      outputArea.future = kernel.requestExecute({ code });\n      Widget.attach(outputArea, node)\n    });\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Button icon=\"refresh\" intent=\"primary\" text=\"Matplotlib\" onClick={this.matplotlib} />\n        <Button icon=\"refresh\" intent=\"primary\" text=\"Bokeh\" onClick={this.bokeh} />\n        <div ref={this.outputDiv}></div>\n      </div>\n    )\n  }\n}\n\n\n// export function matplotlib(app: HTMLDivElement) {\n//   const code = [\n//     'import numpy as np',\n//     'import matplotlib.pyplot as plt',\n//     '%matplotlib inline',\n//     'x = np.linspace(-10,10)',\n//     'y = x**2',\n//     'print(x)',\n//     'print(y)',\n//     'plt.plot(x, y)'\n//   ].join('\\n');\n//   const model = new OutputAreaModel();\n//   const outputArea = new OutputArea({ model, rendermime });\n\n//   kernelPromise.then(kernel => {\n//     outputArea.future = kernel.requestExecute({ code });\n//     Widget.attach(outputArea, app)\n//   });\n\n//   return { model, code }\n// }\n\n\n\n\n\n\n\n\n\nexport function createConsole(): Promise<SplitPanel> {\n  return serviceManager.ready.then(() => {\n    return buildConsole(serviceManager)\n  })\n}\n\nfunction buildConsole(manager: ServiceManager.IManager) {\n  let commands = new CommandRegistry();\n\n  // Setup the keydown listener for the document.\n  document.addEventListener('keydown', event => {\n    commands.processKeydownEvent(event);\n  });\n\n  let editorFactory = editorServices.factoryService.newInlineEditor;\n  let contentFactory = new ConsolePanel.ContentFactory({ editorFactory });\n  // let consoleWidget = new CodeConsole({\n  //   contentFactory,\n  //   rendermime,\n  //   mimeTypeService: editorServices.mimeTypeService,\n  //   session:\n  // })\n  let consolePanel = new ConsolePanel({\n    rendermime,\n    manager,\n    contentFactory,\n    mimeTypeService: editorServices.mimeTypeService\n  });\n\n  let panel = new SplitPanel();\n  panel.id = 'console-panel';\n  panel.orientation = 'horizontal';\n  panel.spacing = 0;\n  SplitPanel.setStretch(consolePanel, 1);\n  panel.addWidget(consolePanel);\n\n  // Attach the panel to the DOM.\n  // Widget.attach(panel, app);\n\n  // Handle resize events.\n  window.addEventListener('resize', () => {\n    panel.update();\n  });\n\n  let selector = '.jp-ConsolePanel';\n  let category = 'Console';\n  let command: string;\n\n  // Add the commands.\n  command = 'console:clear';\n  commands.addCommand(command, {\n    label: 'Clear',\n    execute: () => {\n      consolePanel.console.clear();\n    }\n  });\n\n  command = 'console:execute';\n  commands.addCommand(command, {\n    label: 'Execute Prompt',\n    execute: () => {\n      consolePanel.console.execute();\n    }\n  });\n  commands.addKeyBinding({ command, selector, keys: ['Enter'] });\n\n  command = 'console:execute-forced';\n  commands.addCommand(command, {\n    label: 'Execute Cell (forced)',\n    execute: () => {\n      consolePanel.console.execute(true);\n    }\n  });\n  commands.addKeyBinding({ command, selector, keys: ['Shift Enter'] });\n\n  command = 'console:linebreak';\n  commands.addCommand(command, {\n    label: 'Insert Line Break',\n    execute: () => {\n      consolePanel.console.insertLinebreak();\n    }\n  });\n  commands.addKeyBinding({ command, selector, keys: ['Ctrl Enter'] });\n\n  return panel\n}","/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n\nimport {\n  CommandRegistry\n} from '@phosphor/commands';\n\nimport {\n  Message\n} from '@phosphor/messaging';\n\nimport { ArrayExt, find, IIterator, iter, toArray } from '@phosphor/algorithm';\n\nimport {\n  BoxPanel, ContextMenu, DockPanel, Menu, MenuBar, Widget, TabBar, StackedPanel,\n  Title, SplitPanel, BoxLayout\n} from '@phosphor/widgets';\n\nimport {\n  createConsole\n} from './jupyter';\n\n\nexport interface IRankItem {\n  /**\n   * The widget for the item.\n   */\n  widget: Widget;\n\n  /**\n   * The sort rank of the widget.\n   */\n  rank: number;\n}\n\n\n/**\n * A less-than comparison function for side bar rank items.\n */\nexport function itemCmp(first: IRankItem, second: IRankItem): number {\n  return first.rank - second.rank;\n}\n\n\nclass SideBarHandler {\n  /**\n   * Construct a new side bar handler.\n   */\n  constructor(side: string) {\n    this._side = side;\n    this._sideBar = new TabBar<Widget>({\n      insertBehavior: 'none',\n      removeBehavior: 'none',\n      allowDeselect: true\n    });\n    this._stackedPanel = new StackedPanel();\n    this._sideBar.hide();\n    this._stackedPanel.hide();\n    this._lastCurrent = null;\n    this._sideBar.currentChanged.connect(\n      this._onCurrentChanged,\n      this\n    );\n    this._sideBar.tabActivateRequested.connect(\n      this._onTabActivateRequested,\n      this\n    );\n    this._stackedPanel.widgetRemoved.connect(\n      this._onWidgetRemoved,\n      this\n    );\n  }\n\n  /**\n   * Get the tab bar managed by the handler.\n   */\n  get sideBar(): TabBar<Widget> {\n    return this._sideBar;\n  }\n\n  /**\n   * Get the stacked panel managed by the handler\n   */\n  get stackedPanel(): StackedPanel {\n    return this._stackedPanel;\n  }\n\n  /**\n   * Expand the sidebar.\n   *\n   * #### Notes\n   * This will open the most recently used tab, or the first tab\n   * if there is no most recently used.\n   */\n  expand(): void {\n    const previous =\n      this._lastCurrent || (this._items.length > 0 && this._items[0].widget);\n    if (previous) {\n      this.activate(previous.id);\n    }\n  }\n\n  /**\n   * Activate a widget residing in the side bar by ID.\n   *\n   * @param id - The widget's unique ID.\n   */\n  activate(id: string): void {\n    let widget = this._findWidgetByID(id);\n    if (widget) {\n      this._sideBar.currentTitle = widget.title;\n      widget.activate();\n    }\n  }\n\n  /**\n   * Test whether the sidebar has the given widget by id.\n   */\n  has(id: string): boolean {\n    return this._findWidgetByID(id) !== null;\n  }\n\n  /**\n   * Collapse the sidebar so no items are expanded.\n   */\n  collapse(): void {\n    this._sideBar.currentTitle = null;\n  }\n\n  /**\n   * Add a widget and its title to the stacked panel and side bar.\n   *\n   * If the widget is already added, it will be moved.\n   */\n  addWidget(widget: Widget, rank: number): void {\n    widget.parent = null;\n    widget.hide();\n    let item = { widget, rank };\n    let index = this._findInsertIndex(item);\n    ArrayExt.insert(this._items, index, item);\n    this._stackedPanel.insertWidget(index, widget);\n    const title = this._sideBar.insertTab(index, widget.title);\n    // Store the parent id in the title dataset\n    // in order to dispatch click events to the right widget.\n    title.dataset = { id: widget.id };\n    this._refreshVisibility();\n  }\n\n\n  /**\n   * Find the insertion index for a rank item.\n   */\n  private _findInsertIndex(item: IRankItem): number {\n    return ArrayExt.upperBound(this._items, item, itemCmp);\n  }\n\n  /**\n   * Find the index of the item with the given widget, or `-1`.\n   */\n  private _findWidgetIndex(widget: Widget): number {\n    return ArrayExt.findFirstIndex(this._items, i => i.widget === widget);\n  }\n\n  /**\n   * Find the widget which owns the given title, or `null`.\n   */\n  private _findWidgetByTitle(title: Title<Widget>): Widget | null {\n    let item = find(this._items, value => value.widget.title === title);\n    return item ? item.widget : null;\n  }\n\n  /**\n   * Find the widget with the given id, or `null`.\n   */\n  private _findWidgetByID(id: string): Widget | null {\n    let item = find(this._items, value => value.widget.id === id);\n    return item ? item.widget : null;\n  }\n\n  /**\n   * Refresh the visibility of the side bar and stacked panel.\n   */\n  private _refreshVisibility(): void {\n    this._sideBar.setHidden(this._sideBar.titles.length === 0);\n    this._stackedPanel.setHidden(this._sideBar.currentTitle === null);\n  }\n\n  /**\n   * Handle the `currentChanged` signal from the sidebar.\n   */\n  private _onCurrentChanged(\n    sender: TabBar<Widget>,\n    args: TabBar.ICurrentChangedArgs<Widget>\n  ): void {\n    const oldWidget = args.previousTitle\n      ? this._findWidgetByTitle(args.previousTitle)\n      : null;\n    const newWidget = args.currentTitle\n      ? this._findWidgetByTitle(args.currentTitle)\n      : null;\n    if (oldWidget) {\n      oldWidget.hide();\n    }\n    if (newWidget) {\n      newWidget.show();\n    }\n    this._lastCurrent = newWidget || oldWidget;\n    if (newWidget) {\n      const id = newWidget.id;\n      document.body.setAttribute(`data-${this._side}-sidebar-widget`, id);\n    } else {\n      document.body.removeAttribute(`data-${this._side}-sidebar-widget`);\n    }\n    this._refreshVisibility();\n  }\n\n  /**\n   * Handle a `tabActivateRequest` signal from the sidebar.\n   */\n  private _onTabActivateRequested(\n    sender: TabBar<Widget>,\n    args: TabBar.ITabActivateRequestedArgs<Widget>\n  ): void {\n    args.title.owner.activate();\n  }\n\n  /*\n   * Handle the `widgetRemoved` signal from the stacked panel.\n   */\n  private _onWidgetRemoved(sender: StackedPanel, widget: Widget): void {\n    if (widget === this._lastCurrent) {\n      this._lastCurrent = null;\n    }\n    ArrayExt.removeAt(this._items, this._findWidgetIndex(widget));\n    this._sideBar.removeTab(widget.title);\n    this._refreshVisibility();\n  }\n\n  private _items = new Array<IRankItem>();\n  private _side: string;\n  private _sideBar: TabBar<Widget>;\n  private _stackedPanel: StackedPanel;\n  private _lastCurrent: Widget | null;\n}\n\n\nconst commands = new CommandRegistry();\n\nfunction createMenu(): Menu {\n  let sub1 = new Menu({ commands });\n  sub1.title.label = 'More...';\n  sub1.title.mnemonic = 0;\n  sub1.addItem({ command: 'example:one' });\n  sub1.addItem({ command: 'example:two' });\n  sub1.addItem({ command: 'example:three' });\n  sub1.addItem({ command: 'example:four' });\n\n  let sub2 = new Menu({ commands });\n  sub2.title.label = 'More...';\n  sub2.title.mnemonic = 0;\n  sub2.addItem({ command: 'example:one' });\n  sub2.addItem({ command: 'example:two' });\n  sub2.addItem({ command: 'example:three' });\n  sub2.addItem({ command: 'example:four' });\n  sub2.addItem({ type: 'submenu', submenu: sub1 });\n\n  let root = new Menu({ commands });\n  root.addItem({ command: 'example:copy' });\n  root.addItem({ command: 'example:cut' });\n  root.addItem({ command: 'example:paste' });\n  root.addItem({ type: 'separator' });\n  root.addItem({ command: 'example:new-tab' });\n  root.addItem({ command: 'example:close-tab' });\n  root.addItem({ command: 'example:save-on-exit' });\n  root.addItem({ type: 'separator' });\n  root.addItem({ command: 'example:open-task-manager' });\n  root.addItem({ type: 'separator' });\n  root.addItem({ type: 'submenu', submenu: sub2 });\n  root.addItem({ type: 'separator' });\n  root.addItem({ command: 'example:close' });\n\n  return root;\n}\n\nclass ContentWidget extends Widget {\n\n  static createNode(): HTMLElement {\n    let node = document.createElement('div');\n    let content = document.createElement('div');\n    let input = document.createElement('input');\n    input.placeholder = 'Placeholder...';\n    content.appendChild(input);\n    node.appendChild(content);\n    return node;\n  }\n\n  constructor(name: string) {\n    super({ node: ContentWidget.createNode() });\n    this.setFlag(Widget.Flag.DisallowLayout);\n    this.addClass('content');\n    this.addClass(name.toLowerCase());\n    this.title.label = name;\n    this.title.closable = false;\n    this.title.caption = `Long description for: ${name}`;\n  }\n\n  get inputNode(): HTMLInputElement {\n    return this.node.getElementsByTagName('input')[0] as HTMLInputElement;\n  }\n\n  protected onActivateRequest(msg: Message): void {\n    if (this.isAttached) {\n      this.inputNode.focus();\n    }\n  }\n}\n\n\n\nexport function dockpanel(root: HTMLDivElement): void {\n  commands.addCommand('example:cut', {\n    label: 'Cut',\n    mnemonic: 1,\n    iconClass: 'fa fa-cut',\n    execute: () => {\n      console.log('Cut');\n    }\n  });\n\n  commands.addCommand('example:copy', {\n    label: 'Copy File',\n    mnemonic: 0,\n    iconClass: 'fa fa-copy',\n    execute: () => {\n      console.log('Copy');\n    }\n  });\n\n  commands.addCommand('example:paste', {\n    label: 'Paste',\n    mnemonic: 0,\n    iconClass: 'fa fa-paste',\n    execute: () => {\n      console.log('Paste');\n    }\n  });\n\n  commands.addCommand('example:new-tab', {\n    label: 'New Tab',\n    mnemonic: 0,\n    caption: 'Open a new tab',\n    execute: () => {\n      console.log('New Tab');\n    }\n  });\n\n  commands.addCommand('example:close-tab', {\n    label: 'Close Tab',\n    mnemonic: 2,\n    caption: 'Close the current tab',\n    execute: () => {\n      console.log('Close Tab');\n    }\n  });\n\n  commands.addCommand('example:save-on-exit', {\n    label: 'Save on Exit',\n    mnemonic: 0,\n    caption: 'Toggle the save on exit flag',\n    execute: () => {\n      console.log('Save on Exit');\n    }\n  });\n\n  commands.addCommand('example:open-task-manager', {\n    label: 'Task Manager',\n    mnemonic: 5,\n    isEnabled: () => false,\n    execute: () => { }\n  });\n\n  commands.addCommand('example:close', {\n    label: 'Close',\n    mnemonic: 0,\n    iconClass: 'fa fa-close',\n    execute: () => {\n      console.log('Close');\n    }\n  });\n\n  commands.addCommand('example:one', {\n    label: 'One',\n    execute: () => {\n      console.log('One');\n    }\n  });\n\n  commands.addCommand('example:two', {\n    label: 'Two',\n    execute: () => {\n      console.log('Two');\n    }\n  });\n\n  commands.addCommand('example:three', {\n    label: 'Three',\n    execute: () => {\n      console.log('Three');\n    }\n  });\n\n  commands.addCommand('example:four', {\n    label: 'Four',\n    execute: () => {\n      console.log('Four');\n    }\n  });\n\n  commands.addCommand('example:black', {\n    label: 'Black',\n    execute: () => {\n      console.log('Black');\n    }\n  });\n\n  commands.addCommand('example:clear-cell', {\n    label: 'Clear Cell',\n    execute: () => {\n      console.log('Clear Cell');\n    }\n  });\n\n  commands.addCommand('example:cut-cells', {\n    label: 'Cut Cell(s)',\n    execute: () => {\n      console.log('Cut Cell(s)');\n    }\n  });\n\n  commands.addCommand('example:run-cell', {\n    label: 'Run Cell',\n    execute: () => {\n      console.log('Run Cell');\n    }\n  });\n\n  commands.addCommand('example:cell-test', {\n    label: 'Cell Test',\n    execute: () => {\n      console.log('Cell Test');\n    }\n  });\n\n  commands.addCommand('notebook:new', {\n    label: 'New Notebook',\n    execute: () => {\n      console.log('New Notebook');\n    }\n  });\n\n  commands.addKeyBinding({\n    keys: ['Accel X'],\n    selector: 'body',\n    command: 'example:cut'\n  });\n\n  commands.addKeyBinding({\n    keys: ['Accel C'],\n    selector: 'body',\n    command: 'example:copy'\n  });\n\n  commands.addKeyBinding({\n    keys: ['Accel V'],\n    selector: 'body',\n    command: 'example:paste'\n  });\n\n  commands.addKeyBinding({\n    keys: ['Accel J', 'Accel J'],\n    selector: 'body',\n    command: 'example:new-tab'\n  });\n\n  commands.addKeyBinding({\n    keys: ['Accel M'],\n    selector: 'body',\n    command: 'example:open-task-manager'\n  });\n\n  let menu1 = createMenu();\n  menu1.title.label = 'File';\n  menu1.title.mnemonic = 0;\n\n  let menu2 = createMenu();\n  menu2.title.label = 'Edit';\n  menu2.title.mnemonic = 0;\n\n  let menu3 = createMenu();\n  menu3.title.label = 'View';\n  menu3.title.mnemonic = 0;\n\n  let bar = new MenuBar();\n  bar.addMenu(menu1);\n  bar.addMenu(menu2);\n  bar.addMenu(menu3);\n  bar.id = 'menuBar';\n\n  let contextMenu = new ContextMenu({ commands });\n\n  document.addEventListener('contextmenu', (event: MouseEvent) => {\n    if (contextMenu.open(event)) {\n      event.preventDefault();\n    }\n  });\n\n  contextMenu.addItem({ command: 'example:cut', selector: '.content' });\n  contextMenu.addItem({ command: 'example:copy', selector: '.content' });\n  contextMenu.addItem({ command: 'example:paste', selector: '.content' });\n\n  contextMenu.addItem({ command: 'example:one', selector: '.p-CommandPalette' });\n  contextMenu.addItem({ command: 'example:two', selector: '.p-CommandPalette' });\n  contextMenu.addItem({ command: 'example:three', selector: '.p-CommandPalette' });\n  contextMenu.addItem({ command: 'example:four', selector: '.p-CommandPalette' });\n  contextMenu.addItem({ command: 'example:black', selector: '.p-CommandPalette' });\n\n  contextMenu.addItem({ command: 'notebook:new', selector: '.p-CommandPalette-input' });\n  contextMenu.addItem({ command: 'example:save-on-exit', selector: '.p-CommandPalette-input' });\n  contextMenu.addItem({ command: 'example:open-task-manager', selector: '.p-CommandPalette-input' });\n  contextMenu.addItem({ type: 'separator', selector: '.p-CommandPalette-input' });\n\n  document.addEventListener('keydown', (event: KeyboardEvent) => {\n    commands.processKeydownEvent(event);\n  });\n\n  let r1 = new ContentWidget('Console');\n  r1.id = 'console';\n  let b1 = new ContentWidget('Output');\n  b1.id = 'output';\n  let g1 = new ContentWidget('Table');\n  g1.id = 'table';\n\n  let dock = new DockPanel();\n  dock.addWidget(b1);\n\n  dock.addWidget(g1, { mode: 'split-right', ref: b1 });\n\n\n  createConsole().then(consolePanel => {\n    consolePanel.addClass('console')\n    consolePanel.title.label = 'Console';\n    consolePanel.title.closable = false;\n    dock.addWidget(consolePanel, { mode: 'tab-after', ref: g1 });\n    // rightHandler.addWidget(consolePanel, 1)\n  })\n\n\n  dock.id = 'dock';\n\n  let savedLayouts: DockPanel.ILayoutConfig[] = [];\n\n  commands.addCommand('save-dock-layout', {\n    label: 'Save Layout',\n    caption: 'Save the current dock layout',\n    execute: () => {\n      savedLayouts.push(dock.saveLayout());\n    }\n  });\n\n  commands.addCommand('restore-dock-layout', {\n    label: args => {\n      return `Restore Layout ${args.index as number}`;\n    },\n    execute: args => {\n      dock.restoreLayout(savedLayouts[args.index as number]);\n    }\n  });\n\n  let hsplitPanel = new SplitPanel({ orientation: 'horizontal', spacing: 0 });\n  let hboxPanel = new BoxPanel({ direction: 'left-to-right', spacing: 0 });\n\n  let rightHandler = new SideBarHandler('right');\n  rightHandler.sideBar.addClass('jp-SideBar');\n  rightHandler.sideBar.addClass('jp-mod-right');\n  rightHandler.stackedPanel.id = 'jp-right-stack';\n\n  let test = new Widget();\n  rightHandler.addWidget(test, 0)\n\n  let test2 = new Widget();\n  rightHandler.addWidget(test2, 2)\n\n  SplitPanel.setStretch(dock, 1);\n  SplitPanel.setStretch(rightHandler.stackedPanel, 0)\n\n  BoxPanel.setStretch(dock, 1);\n  BoxPanel.setStretch(rightHandler.sideBar, 0);\n\n  hsplitPanel.addWidget(dock);\n  hsplitPanel.addWidget(rightHandler.stackedPanel);\n\n  hboxPanel.addWidget(dock);\n  hboxPanel.addWidget(rightHandler.sideBar);\n\n  hsplitPanel.setRelativeSizes([2.5, 1]);\n\n  let rootPanel = new BoxPanel({ direction: 'top-to-bottom', spacing: 0 });\n\n  // rootPanel.addWidget(bar)\n\n  let main = new BoxPanel({ direction: 'left-to-right', spacing: 0 });\n  main.addClass('full-flex');\n  main.addWidget(hboxPanel);\n\n\n  rootPanel.addWidget(main)\n\n  rootPanel.addClass('full-flex')\n  window.onresize = () => { rootPanel.update(); };\n\n  Widget.attach(bar, document.getElementById('root') as HTMLDivElement);\n  Widget.attach(rootPanel, document.getElementById('root') as HTMLDivElement);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style.css';\nimport DollarsTable from './table';\n\nimport { dockpanel } from './dockpanel';\nimport { CodeButtons, createConsole } from './jupyter';\n\nfunction main() {\n  let root = document.getElementById('root') as HTMLDivElement\n  dockpanel(root)\n  ReactDOM.render(<DollarsTable />, document.getElementById('table'));\n\n  ReactDOM.render(<CodeButtons />, document.getElementById('output'));\n\n  // let outputDiv = document.getElementById('output') as HTMLDivElement\n  // matplotlib(outputDiv);\n\n  // let consoleDiv = document.getElementById('console') as HTMLDivElement\n  // createConsole(consoleDiv);\n}\n\nwindow.onload = main;\n"],"sourceRoot":""}