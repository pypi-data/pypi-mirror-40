Metadata-Version: 2.1
Name: synology-srm
Version: 0.0.3
Summary: Synology SRM API
Home-page: https://github.com/aerialls/synology-srm
Author: Julien Brochet
Author-email: julien@aerialls.io
License: MIT
Description: 
        # Synology SRM API
        
        [![Build Status](https://travis-ci.org/aerialls/synology-srm.svg?branch=master)](https://travis-ci.org/aerialls/synology-srm)
        [![PyPi Version](https://img.shields.io/pypi/v/synology-srm.svg)](https://pypi.org/project/synology-srm/)
        
        Python 3 library to use the Synology SRM (Synology Router Manager) API. This is **NOT** the same thing as Synology DSM (DiskStation Manager).
        
        This library should work with the following devices.
        
        * RT1900ac
        * RT2600ac
        
        > It's not possible to create another account in SRM with admin permissions. You'll need to use your `admin` account (or the one you renamed at creation).
        
        ## Usage
        
        ```python
        import synology_srm
        
        client = synology_srm.Client(
            host='192.168.1.254',
            port=8001,
            https=True
            username='admin',
            password='FZan7xw7eh3z9Zzj',
        )
        ```
        
        You can now access all different namespaces from the API. The only namespace available currently is `mesh` with the following method.
        
        ```python
        devices = client.mesh.network_wifidevice()
        
        for device in devices:
            print("Found device {} with MAC address {}".format(
                device['hostname'],
                device['mac']
            ))
        ```
        
        ## HTTPS auto-signed certificate
        
        You can disable the HTTPS certificate verification if you are using a self-signed certificate.
        
        ```python
        client.http.disable_https_verify()
        ```
        
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.5.3
Description-Content-Type: text/markdown
Provides-Extra: testing
