# coding: utf-8

from dohq_teamcity.custom.base_model import TeamCityObject


# from dohq_teamcity.models.file import file  # noqa: F401,E501
# from dohq_teamcity.models.files import Files  # noqa: F401,E501
# from dohq_teamcity.models.href import Href  # noqa: F401,E501


class File(TeamCityObject):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'children': 'Files',
        'content': 'Href',
        'full_name': 'str',
        'href': 'str',
        'modification_time': 'str',
        'name': 'str',
        'parent': 'file',
        'size': 'int'
    }

    attribute_map = {
        'children': 'children',
        'content': 'content',
        'full_name': 'fullName',
        'href': 'href',
        'modification_time': 'modificationTime',
        'name': 'name',
        'parent': 'parent',
        'size': 'size'
    }

    def __init__(self, children=None, content=None, full_name=None, href=None, modification_time=None, name=None, parent=None, size=None, teamcity=None):  # noqa: E501
        """File - a model defined in Swagger"""  # noqa: E501

        self._children = None
        self._content = None
        self._full_name = None
        self._href = None
        self._modification_time = None
        self._name = None
        self._parent = None
        self._size = None
        self.discriminator = None

        if children is not None:
            self.children = children
        if content is not None:
            self.content = content
        if full_name is not None:
            self.full_name = full_name
        if href is not None:
            self.href = href
        if modification_time is not None:
            self.modification_time = modification_time
        if name is not None:
            self.name = name
        if parent is not None:
            self.parent = parent
        if size is not None:
            self.size = size
        super(File, self).__init__(teamcity=teamcity)

    @property
    def children(self):
        """Gets the children of this File.  # noqa: E501


        :return: The children of this File.  # noqa: E501
        :rtype: Files
        """
        return self._children

    @children.setter
    def children(self, children):
        """Sets the children of this File.


        :param children: The children of this File.  # noqa: E501
        :type: Files
        """

        self._children = children

    @property
    def content(self):
        """Gets the content of this File.  # noqa: E501


        :return: The content of this File.  # noqa: E501
        :rtype: Href
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this File.


        :param content: The content of this File.  # noqa: E501
        :type: Href
        """

        self._content = content

    @property
    def full_name(self):
        """Gets the full_name of this File.  # noqa: E501


        :return: The full_name of this File.  # noqa: E501
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this File.


        :param full_name: The full_name of this File.  # noqa: E501
        :type: str
        """

        self._full_name = full_name

    @property
    def href(self):
        """Gets the href of this File.  # noqa: E501


        :return: The href of this File.  # noqa: E501
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this File.


        :param href: The href of this File.  # noqa: E501
        :type: str
        """

        self._href = href

    @property
    def modification_time(self):
        """Gets the modification_time of this File.  # noqa: E501


        :return: The modification_time of this File.  # noqa: E501
        :rtype: str
        """
        return self._modification_time

    @modification_time.setter
    def modification_time(self, modification_time):
        """Sets the modification_time of this File.


        :param modification_time: The modification_time of this File.  # noqa: E501
        :type: str
        """

        self._modification_time = modification_time

    @property
    def name(self):
        """Gets the name of this File.  # noqa: E501


        :return: The name of this File.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this File.


        :param name: The name of this File.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def parent(self):
        """Gets the parent of this File.  # noqa: E501


        :return: The parent of this File.  # noqa: E501
        :rtype: file
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this File.


        :param parent: The parent of this File.  # noqa: E501
        :type: file
        """

        self._parent = parent

    @property
    def size(self):
        """Gets the size of this File.  # noqa: E501


        :return: The size of this File.  # noqa: E501
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this File.


        :param size: The size of this File.  # noqa: E501
        :type: int
        """

        self._size = size


file = File
