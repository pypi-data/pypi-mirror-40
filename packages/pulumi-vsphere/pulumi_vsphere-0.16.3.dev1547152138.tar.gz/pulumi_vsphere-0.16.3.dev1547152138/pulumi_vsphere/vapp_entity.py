# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from . import utilities, tables

class VappEntity(pulumi.CustomResource):
    """
    The `vsphere_vapp_entity` resource can be used to describe the behavior of an
    entity (virtual machine or sub-vApp container) in a vApp container.
    
    For more information on vSphere vApps, see [this
    page][ref-vsphere-vapp].
    
    [ref-vsphere-vapp]: https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vm_admin.doc/GUID-2A95EBB8-1779-40FA-B4FB-4D0845750879.html
    """
    def __init__(__self__, __name__, __opts__=None, container_id=None, custom_attributes=None, start_action=None, start_delay=None, start_order=None, stop_action=None, stop_delay=None, tags=None, target_id=None, wait_for_guest=None):
        """Create a VappEntity resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not container_id:
            raise TypeError('Missing required property container_id')
        __props__['container_id'] = container_id

        __props__['custom_attributes'] = custom_attributes

        __props__['start_action'] = start_action

        __props__['start_delay'] = start_delay

        __props__['start_order'] = start_order

        __props__['stop_action'] = stop_action

        __props__['stop_delay'] = stop_delay

        __props__['tags'] = tags

        if not target_id:
            raise TypeError('Missing required property target_id')
        __props__['target_id'] = target_id

        __props__['wait_for_guest'] = wait_for_guest

        super(VappEntity, __self__).__init__(
            'vsphere:index/vappEntity:VappEntity',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

