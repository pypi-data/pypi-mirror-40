Metadata-Version: 1.1
Name: levit-report
Version: 0.9.18
Summary: Package description
Home-page: http://levit.be
Author: LevIT scs
Author-email: foss@levit.be
License: MIT License
Description-Content-Type: UNKNOWN
Description: Levit-report
        ============
        
        This library makes it easy to manage and render a set of relatorio-based
        reports in a Django application
        
        Installation
        ------------
        
        ``pip install levit-report``
        
        Configuration
        -------------
        
        Add ``levit_report`` to your ``INSTALLED_APPS``:
        
        ::
        
            ## settings.py
        
            INSTALLED_APPS = (
                ...
                'levit_report',
            )
        
        Import the built-in urls into your ``urls.py``
        
        ::
        
            ## urls.py
        
            ...
            from levit_report import urls as report_urls
        
            ...
            urlpattern = [
                ...
                url(r'^reports/', include(report_urls)),
            ]
        
        Usage
        -----
        
        Before being able to use this package you will first have to create a
        `Relatorio <http://relatorio.readthedocs.io/en/latest/index.html>`__
        template. The "object" of the report will be available inside the report
        as ``o`` (as in object).
        
        Once you have created your templte, go to the admin and add a new
        ``Document`` (in the ``Levit_Report`` section).
        
        .. figure:: ./docs/document-admin.png
           :alt: admin screenshot
        
           admin screenshot
        
        You'll then be able to upload your relatorio template and associate it
        with a ContentType.
        
        In order to use the "convert to" feature, you'll need you have
        LibreOffice headless installed.
        
        :warning: LibreOffice headless fails silently when a regular LibreOffice
        window is open on the same machine.
        
        In order to use the "Merge with tos" feature (only available for pdf's),
        you'll need:
        
        -  to have pdfunite installed
        -  have given the full path to a pdf ``TOS_FILE`` in your
           ``settings.py`` like this
        
        ::
        
            ## settings.py
        
            TOS_FILE = os.path.join(BASE_DIR, 'documents', 'tos.pdf')
        
        Once this is done, you'll be able to download a rendered version of your
        report at
        http://localhost:8000/reports/<document\_slug>/<target\_object\_id>/
        
        You'll also be able to download a ip containing several rendered reports
        by pointing your browser at
        http://localhost:8000/reports/<document\_slug>/?ids[]=<target\_object\_id>&ids[]=<target\_object\_2\_id>...
        
        This project is licensed under the `MIT
        License <http://opensource.org/licenses/MIT>`__
        
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.8
Classifier: Framework :: Django :: 1.9
Classifier: Framework :: Django :: 1.10
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
