/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.13
 *
 *     Copyright: (c) 2018 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_core.h"

#include "arrayholder.h"



/* Call the instance's destructor. */
extern "C" {static void release_wxIntCArrayHolder(void *, int);}
static void release_wxIntCArrayHolder(void *sipCppV, int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast< ::wxIntCArrayHolder *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_wxIntCArrayHolder(sipSimpleWrapper *);}
static void dealloc_wxIntCArrayHolder(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxIntCArrayHolder(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_wxIntCArrayHolder(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_wxIntCArrayHolder(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::wxIntCArrayHolder *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp = new  ::wxIntCArrayHolder();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
            {
                delete sipCpp;
                return NULL;
            }

            return sipCpp;
        }
    }

    return NULL;
}

PyDoc_STRVAR(doc_wxIntCArrayHolder, "\1IntCArrayHolder()");


sipClassTypeDef sipTypeDef__core_wxIntCArrayHolder = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_wxIntCArrayHolder,
        {0},
        0
    },
    {
        sipNameNr_IntCArrayHolder,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_wxIntCArrayHolder,
    -1,
    -1,
    0,
    0,
    init_type_wxIntCArrayHolder,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_wxIntCArrayHolder,
    0,
    0,
    0,
    release_wxIntCArrayHolder,
    0,
    0,
    0,
    0,
    0,
    0,
    0
};
