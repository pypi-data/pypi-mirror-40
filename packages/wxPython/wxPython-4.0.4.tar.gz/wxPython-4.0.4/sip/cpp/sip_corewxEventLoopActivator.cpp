/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.13
 *
 *     Copyright: (c) 2018 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_core.h"

        #include <wx/evtloop.h>

        #include <wx/evtloop.h>


/* Call the instance's destructor. */
extern "C" {static void release_wxEventLoopActivator(void *, int);}
static void release_wxEventLoopActivator(void *sipCppV, int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast< ::wxEventLoopActivator *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_wxEventLoopActivator(sipSimpleWrapper *);}
static void dealloc_wxEventLoopActivator(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxEventLoopActivator(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_wxEventLoopActivator(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_wxEventLoopActivator(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::wxEventLoopActivator *sipCpp = 0;

    {
         ::wxEventLoopBase* loop;

        static const char *sipKwdList[] = {
            sipName_loop,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J8", sipType_wxEventLoopBase, &loop))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp = new  ::wxEventLoopActivator(loop);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
            {
                delete sipCpp;
                return NULL;
            }

            return sipCpp;
        }
    }

    return NULL;
}

PyDoc_STRVAR(doc_wxEventLoopActivator, "EventLoopActivator(loop)\n"
"\n"
"Makes an event loop temporarily active.");


sipClassTypeDef sipTypeDef__core_wxEventLoopActivator = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_wxEventLoopActivator,
        {0},
        0
    },
    {
        sipNameNr_EventLoopActivator,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_wxEventLoopActivator,
    -1,
    -1,
    0,
    0,
    init_type_wxEventLoopActivator,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_wxEventLoopActivator,
    0,
    0,
    0,
    release_wxEventLoopActivator,
    0,
    0,
    0,
    0,
    0,
    0,
    0
};
