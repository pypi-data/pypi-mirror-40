/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.13
 *
 *     Copyright: (c) 2018 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_core.h"

        #include <wx/log.h>



/* Call the instance's destructor. */
extern "C" {static void release_wxLogNull(void *, int);}
static void release_wxLogNull(void *sipCppV, int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast< ::wxLogNull *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void assign_wxLogNull(void *, SIP_SSIZE_T, void *);}
static void assign_wxLogNull(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::wxLogNull *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::wxLogNull *>(sipSrc);
}


extern "C" {static void *array_wxLogNull(SIP_SSIZE_T);}
static void *array_wxLogNull(SIP_SSIZE_T sipNrElem)
{
    return new  ::wxLogNull[sipNrElem];
}


extern "C" {static void *copy_wxLogNull(const void *, SIP_SSIZE_T);}
static void *copy_wxLogNull(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::wxLogNull(reinterpret_cast<const  ::wxLogNull *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_wxLogNull(sipSimpleWrapper *);}
static void dealloc_wxLogNull(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxLogNull(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_wxLogNull(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_wxLogNull(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::wxLogNull *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp = new  ::wxLogNull();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
            {
                delete sipCpp;
                return NULL;
            }

            return sipCpp;
        }
    }

    {
        const  ::wxLogNull* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_wxLogNull, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new  ::wxLogNull(*a0);
            Py_END_ALLOW_THREADS

            return sipCpp;
        }
    }

    return NULL;
}

PyDoc_STRVAR(doc_wxLogNull, "LogNull()\n"
"\n"
"This class allows you to temporarily suspend logging.");


sipClassTypeDef sipTypeDef__core_wxLogNull = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_wxLogNull,
        {0},
        0
    },
    {
        sipNameNr_LogNull,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_wxLogNull,
    -1,
    -1,
    0,
    0,
    init_type_wxLogNull,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_wxLogNull,
    assign_wxLogNull,
    array_wxLogNull,
    copy_wxLogNull,
    release_wxLogNull,
    0,
    0,
    0,
    0,
    0,
    0,
    0
};
