/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.13
 *
 *     Copyright: (c) 2018 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_grid.h"

        #include <wx/grid.h>

        #include <wx/grid.h>
        #include <wx/dc.h>
        #include <wx/gdicmn.h>


class sipwxGridCornerHeaderRendererDefault : public  ::wxGridCornerHeaderRendererDefault
{
public:
    sipwxGridCornerHeaderRendererDefault();
    sipwxGridCornerHeaderRendererDefault(const  ::wxGridCornerHeaderRendererDefault&);
    virtual ~sipwxGridCornerHeaderRendererDefault();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void DrawBorder(const  ::wxGrid&, ::wxDC&, ::wxRect&) const;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipwxGridCornerHeaderRendererDefault(const sipwxGridCornerHeaderRendererDefault &);
    sipwxGridCornerHeaderRendererDefault &operator = (const sipwxGridCornerHeaderRendererDefault &);

    char sipPyMethods[1];
};

sipwxGridCornerHeaderRendererDefault::sipwxGridCornerHeaderRendererDefault():  ::wxGridCornerHeaderRendererDefault(), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxGridCornerHeaderRendererDefault::sipwxGridCornerHeaderRendererDefault(const  ::wxGridCornerHeaderRendererDefault& a0):  ::wxGridCornerHeaderRendererDefault(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxGridCornerHeaderRendererDefault::~sipwxGridCornerHeaderRendererDefault()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

void sipwxGridCornerHeaderRendererDefault::DrawBorder(const  ::wxGrid& grid, ::wxDC& dc, ::wxRect& rect) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[0]),sipPySelf,NULL,sipName_DrawBorder);

    if (!sipMeth)
    {
         ::wxGridCornerHeaderRendererDefault::DrawBorder(grid,dc,rect);
        return;
    }

    extern void sipVH__grid_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::wxGrid&, ::wxDC&, ::wxRect&);

    sipVH__grid_15(sipGILState, 0, sipPySelf, sipMeth, grid, dc, rect);
}


PyDoc_STRVAR(doc_wxGridCornerHeaderRendererDefault_DrawBorder, "DrawBorder(grid, dc, rect)\n"
"\n"
"Implement border drawing for the corner window.");

extern "C" {static PyObject *meth_wxGridCornerHeaderRendererDefault_DrawBorder(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxGridCornerHeaderRendererDefault_DrawBorder(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxGrid* grid;
         ::wxDC* dc;
         ::wxRect* rect;
        int rectState = 0;
        const  ::wxGridCornerHeaderRendererDefault *sipCpp;

        static const char *sipKwdList[] = {
            sipName_grid,
            sipName_dc,
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9J9J1", &sipSelf, sipType_wxGridCornerHeaderRendererDefault, &sipCpp, sipType_wxGrid, &grid, sipType_wxDC, &dc, sipType_wxRect, &rect, &rectState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxGridCornerHeaderRendererDefault::DrawBorder(*grid,*dc,*rect) : sipCpp->DrawBorder(*grid,*dc,*rect));
            Py_END_ALLOW_THREADS
            sipReleaseType(rect,sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_GridCornerHeaderRendererDefault, sipName_DrawBorder, NULL);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_wxGridCornerHeaderRendererDefault(void *, const sipTypeDef *);}
static void *cast_wxGridCornerHeaderRendererDefault(void *sipCppV, const sipTypeDef *targetType)
{
     ::wxGridCornerHeaderRendererDefault *sipCpp = reinterpret_cast< ::wxGridCornerHeaderRendererDefault *>(sipCppV);

    if (targetType == sipType_wxGridCornerHeaderRenderer)
        return static_cast< ::wxGridCornerHeaderRenderer *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_wxGridCornerHeaderRendererDefault(void *, int);}
static void release_wxGridCornerHeaderRendererDefault(void *sipCppV, int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipwxGridCornerHeaderRendererDefault *>(sipCppV);
    else
        delete reinterpret_cast< ::wxGridCornerHeaderRendererDefault *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void assign_wxGridCornerHeaderRendererDefault(void *, SIP_SSIZE_T, void *);}
static void assign_wxGridCornerHeaderRendererDefault(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::wxGridCornerHeaderRendererDefault *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::wxGridCornerHeaderRendererDefault *>(sipSrc);
}


extern "C" {static void *array_wxGridCornerHeaderRendererDefault(SIP_SSIZE_T);}
static void *array_wxGridCornerHeaderRendererDefault(SIP_SSIZE_T sipNrElem)
{
    return new  ::wxGridCornerHeaderRendererDefault[sipNrElem];
}


extern "C" {static void *copy_wxGridCornerHeaderRendererDefault(const void *, SIP_SSIZE_T);}
static void *copy_wxGridCornerHeaderRendererDefault(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::wxGridCornerHeaderRendererDefault(reinterpret_cast<const  ::wxGridCornerHeaderRendererDefault *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_wxGridCornerHeaderRendererDefault(sipSimpleWrapper *);}
static void dealloc_wxGridCornerHeaderRendererDefault(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipwxGridCornerHeaderRendererDefault *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxGridCornerHeaderRendererDefault(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_wxGridCornerHeaderRendererDefault(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_wxGridCornerHeaderRendererDefault(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipwxGridCornerHeaderRendererDefault *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipwxGridCornerHeaderRendererDefault();
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const  ::wxGridCornerHeaderRendererDefault* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_wxGridCornerHeaderRendererDefault, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipwxGridCornerHeaderRendererDefault(*a0);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_wxGridCornerHeaderRendererDefault[] = {{28, 255, 1}};


static PyMethodDef methods_wxGridCornerHeaderRendererDefault[] = {
    {SIP_MLNAME_CAST(sipName_DrawBorder), (PyCFunction)meth_wxGridCornerHeaderRendererDefault_DrawBorder, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxGridCornerHeaderRendererDefault_DrawBorder)}
};

PyDoc_STRVAR(doc_wxGridCornerHeaderRendererDefault, "Default corner window renderer.");


sipClassTypeDef sipTypeDef__grid_wxGridCornerHeaderRendererDefault = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_wxGridCornerHeaderRendererDefault,
        {0},
        0
    },
    {
        sipNameNr_GridCornerHeaderRendererDefault,
        {0, 0, 1},
        1, methods_wxGridCornerHeaderRendererDefault,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_wxGridCornerHeaderRendererDefault,
    -1,
    -1,
    supers_wxGridCornerHeaderRendererDefault,
    0,
    init_type_wxGridCornerHeaderRendererDefault,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_wxGridCornerHeaderRendererDefault,
    assign_wxGridCornerHeaderRendererDefault,
    array_wxGridCornerHeaderRendererDefault,
    copy_wxGridCornerHeaderRendererDefault,
    release_wxGridCornerHeaderRendererDefault,
    cast_wxGridCornerHeaderRendererDefault,
    0,
    0,
    0,
    0,
    0,
    0
};
