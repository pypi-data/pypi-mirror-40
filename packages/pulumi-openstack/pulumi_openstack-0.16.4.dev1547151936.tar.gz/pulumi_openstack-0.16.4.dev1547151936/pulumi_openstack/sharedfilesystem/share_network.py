# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class ShareNetwork(pulumi.CustomResource):
    """
    Use this resource to configure a share network.
    
    A share network stores network information that share servers can use when
    shares are created.
    """
    def __init__(__self__, __name__, __opts__=None, description=None, name=None, neutron_net_id=None, neutron_subnet_id=None, region=None, security_service_ids=None):
        """Create a ShareNetwork resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['description'] = description

        __props__['name'] = name

        if not neutron_net_id:
            raise TypeError('Missing required property neutron_net_id')
        __props__['neutron_net_id'] = neutron_net_id

        if not neutron_subnet_id:
            raise TypeError('Missing required property neutron_subnet_id')
        __props__['neutron_subnet_id'] = neutron_subnet_id

        __props__['region'] = region

        __props__['security_service_ids'] = security_service_ids

        __props__['cidr'] = None
        __props__['ip_version'] = None
        __props__['network_type'] = None
        __props__['project_id'] = None
        __props__['segmentation_id'] = None

        super(ShareNetwork, __self__).__init__(
            'openstack:sharedfilesystem/shareNetwork:ShareNetwork',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

