
# zxbasmtab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftRSHIFTLSHIFTBANDBORBXORleftPLUSMINUSleftMULDIVMODrightPOWrightUMINUSA ADC ADD ADDR AF ALIGN AND APO B BAND BC BIT BOR BXOR C CALL CCF CO COMMA CP CPD CPDR CPI CPIR CPL D DAA DE DEC DEFB DEFS DEFW DI DIV DJNZ E EI END ENDP EQU EX EXX H HALT HL I ID IM IN INC INCBIN IND INDR INI INIR INTEGER IX IXH IXL IY IYH IYL JP JR L LABEL LD LDD LDDR LDI LDIR LOCAL LP LPP LSHIFT M MINUS MOD MUL NAMESPACE NC NEG NEWLINE NOP NZ OR ORG OTDR OTIR OUT OUTD OUTI P PE PLUS PO POP POW PROC PUSH R RES RET RETI RETN RL RLA RLC RLCA RLD RP RPP RR RRA RRC RRCA RRD RSHIFT RST SBC SCF SET SLA SLL SP SRA SRL STRING SUB UMINUS XOR Z _INIT _LINE start : program\n              | program endline\n     endline : END NEWLINE\n     endline : END expr NEWLINE\n                | END pexpr NEWLINE\n     program : line\n     program : program line\n     line : ID EQU expr NEWLINE\n             | ID EQU pexpr NEWLINE\n     line : LABEL asms NEWLINE\n     line : asms NEWLINE\n     asms :\n     asms : asm\n     asms : asms CO asm\n     asm : LD reg8 COMMA reg8_hl\n            | LD reg8_hl COMMA reg8\n            | LD reg8 COMMA reg8\n            | LD SP COMMA HL\n            | LD SP COMMA reg16i\n            | LD A COMMA reg8\n            | LD reg8 COMMA A\n            | LD reg8_hl COMMA A\n            | LD A COMMA reg8_hl\n            | LD A COMMA A\n            | LD A COMMA I\n            | LD I COMMA A\n            | LD A COMMA R\n            | LD R COMMA A\n            | LD A COMMA reg8i\n            | LD reg8i COMMA A\n            | LD reg8 COMMA reg8i\n            | LD reg8i COMMA regBCDE\n            | LD reg8i COMMA reg8i\n     asm : LD A COMMA LP BC RP\n            | LD A COMMA LP DE RP\n            | LD LP BC RP COMMA A\n            | LD LP DE RP COMMA A\n     asm : PROC\n     asm : ENDP\n     asm : LOCAL id_list\n     id_list : ID\n     id_list : id_list COMMA ID\n     asm : DEFB number_list\n            | DEFB STRING\n     asm : DEFS number_list\n     asm : DEFW number_list\n     number_list : expr\n                    | pexpr\n     number_list : number_list COMMA expr\n                    | number_list COMMA pexpr\n     asm : LD reg8_I COMMA reg8\n            | LD reg8_I COMMA A\n     asm : LD reg8 COMMA reg8_I\n            | LD A COMMA reg8_I\n     reg8_hl : LP HL RP\n        reg8_I : LP IX PLUS expr RP\n               | LP IX MINUS expr RP\n               | LP IY PLUS expr RP\n               | LP IY MINUS expr RP\n               | LP IX PLUS pexpr RP\n               | LP IX MINUS pexpr RP\n               | LP IY PLUS pexpr RP\n               | LP IY MINUS pexpr RP\n     asm : EX AF COMMA AF APO\n     asm : EX DE COMMA HL\n     asm : ORG expr\n            | ORG pexpr\n     asm : NAMESPACE ID\n     asm : ALIGN expr\n            | ALIGN pexpr\n     asm : INCBIN STRING\n     asm : EX LP SP RP COMMA reg16i\n            | EX LP SP RP COMMA HL\n     asm : INC inc_reg\n            | DEC inc_reg\n     asm : INC reg8_I\n            | DEC reg8_I\n     asm : LD reg8 COMMA expr\n            | LD reg8 COMMA pexpr\n            | LD reg16 COMMA expr\n            | LD reg8_hl COMMA expr\n            | LD A COMMA expr\n            | LD SP COMMA expr\n            | LD reg8i COMMA expr\n     asm : LD reg8_I COMMA expr\n     asm : JP reg8_hl\n            | JP LP reg16i RP\n     asm : SBC A COMMA reg8\n            | SBC A COMMA reg8i\n            | SBC A COMMA A\n            | SBC A COMMA reg8_hl\n            | SBC HL COMMA SP\n            | SBC HL COMMA BC\n            | SBC HL COMMA DE\n            | SBC HL COMMA HL\n            | ADD A COMMA reg8\n            | ADD A COMMA reg8i\n            | ADD A COMMA A\n            | ADD A COMMA reg8_hl\n            | ADC A COMMA reg8\n            | ADC A COMMA reg8i\n            | ADC A COMMA A\n            | ADC A COMMA reg8_hl\n            | ADD HL COMMA BC\n            | ADD HL COMMA DE\n            | ADD HL COMMA HL\n            | ADD HL COMMA SP\n            | ADC HL COMMA BC\n            | ADC HL COMMA DE\n            | ADC HL COMMA HL\n            | ADC HL COMMA SP\n            | ADD reg16i COMMA BC\n            | ADD reg16i COMMA DE\n            | ADD reg16i COMMA HL\n            | ADD reg16i COMMA SP\n            | ADD reg16i COMMA reg16i\n     asm : SBC A COMMA expr\n            | SBC A COMMA pexpr\n            | ADD A COMMA expr\n            | ADD A COMMA pexpr\n            | ADC A COMMA expr\n            | ADC A COMMA pexpr\n     asm : SBC A COMMA reg8_I\n            | ADD A COMMA reg8_I\n            | ADC A COMMA reg8_I\n     asm : bitwiseop reg8\n            | bitwiseop reg8i\n            | bitwiseop A\n            | bitwiseop reg8_hl\n     asm : bitwiseop reg8_I\n     asm : bitwiseop expr\n            | bitwiseop pexpr\n     bitwiseop : OR\n              | AND\n              | XOR\n              | SUB\n              | CP\n     asm : PUSH AF\n            | PUSH reg16\n            | POP AF\n            | POP reg16\n     asm : LD pexpr COMMA A\n            | LD pexpr COMMA reg16\n            | LD pexpr COMMA SP\n     asm : LD A COMMA pexpr\n            | LD reg16 COMMA pexpr\n            | LD SP COMMA pexpr\n     asm : rotation reg8\n            | rotation reg8_hl\n            | rotation A\n     asm : rotation reg8_I\n     asm : bitop expr COMMA A\n            | bitop pexpr COMMA A\n            | bitop expr COMMA reg8\n            | bitop pexpr COMMA reg8\n            | bitop expr COMMA reg8_hl\n            | bitop pexpr COMMA reg8_hl\n     asm : bitop expr COMMA reg8_I\n            | bitop pexpr COMMA reg8_I\n     bitop : BIT\n              | RES\n              | SET\n     rotation : RR\n                 | RL\n                 | RRC\n                 | RLC\n                 | SLA\n                 | SLL\n                 | SRA\n                 | SRL\n     inc_reg : SP\n                | reg8\n                | reg16\n                | reg8_hl\n                | A\n                | reg8i\n     reg8 : H\n             | L\n             | regBCDE\n     regBCDE : B\n                | C\n                | D\n                | E\n     reg8i : IXH\n              | IXL\n              | IYH\n              | IYL\n     reg16 : BC\n             | DE\n             | HL\n             | reg16i\n     reg16i : IX\n               | IY\n     asm : JP jp_flags COMMA expr\n            | JP jp_flags COMMA pexpr\n            | CALL jp_flags COMMA expr\n            | CALL jp_flags COMMA pexpr\n     asm : RET jp_flags\n     jp_flags : P\n                 | M\n                 | PO\n                 | PE\n                 | jr_flags\n     asm : JR jr_flags COMMA expr\n            | JR jr_flags COMMA pexpr\n     jr_flags : Z\n                 | C\n                 | NZ\n                 | NC\n     asm : JP expr\n            | JR expr\n            | CALL expr\n            | DJNZ expr\n            | JP pexpr\n            | JR pexpr\n            | CALL pexpr\n            | DJNZ pexpr\n     asm : RST expr\n     asm : IM expr\n        asm : IN A COMMA LP C RP\n            | IN reg8 COMMA LP C RP\n        asm : OUT LP C RP COMMA A\n            | OUT LP C RP COMMA reg8\n     asm : IN A COMMA pexpr\n     asm : OUT pexpr COMMA A\n     asm : NOP\n            | EXX\n            | CCF\n            | SCF\n            | LDIR\n            | LDI\n            | LDDR\n            | LDD\n            | CPIR\n            | CPI\n            | CPDR\n            | CPD\n            | DAA\n            | NEG\n            | CPL\n            | HALT\n            | EI\n            | DI\n            | OUTD\n            | OUTI\n            | OTDR\n            | OTIR\n            | IND\n            | INI\n            | INDR\n            | INIR\n            | RET\n            | RETI\n            | RETN\n            | RLA\n            | RLCA\n            | RRA\n            | RRCA\n            | RLD\n            | RRD\n     expr : expr BAND expr\n             | expr BOR expr\n             | expr BXOR expr\n             | expr PLUS expr\n             | expr MINUS expr\n             | expr MUL expr\n             | expr DIV expr\n             | expr MOD expr\n             | expr POW expr\n             | expr LSHIFT expr\n             | expr RSHIFT expr\n             | pexpr BAND expr\n             | pexpr BOR expr\n             | pexpr BXOR expr\n             | pexpr PLUS expr\n             | pexpr MINUS expr\n             | pexpr MUL expr\n             | pexpr DIV expr\n             | pexpr MOD expr\n             | pexpr POW expr\n             | pexpr LSHIFT expr\n             | pexpr RSHIFT expr\n             | expr BAND pexpr\n             | expr BOR pexpr\n             | expr BXOR pexpr\n             | expr PLUS pexpr\n             | expr MINUS pexpr\n             | expr MUL pexpr\n             | expr DIV pexpr\n             | expr MOD pexpr\n             | expr POW pexpr\n             | expr LSHIFT pexpr\n             | expr RSHIFT pexpr\n             | pexpr BAND pexpr\n             | pexpr BOR pexpr\n             | pexpr BXOR pexpr\n             | pexpr PLUS pexpr\n             | pexpr MINUS pexpr\n             | pexpr MUL pexpr\n             | pexpr DIV pexpr\n             | pexpr MOD pexpr\n             | pexpr POW pexpr\n             | pexpr LSHIFT pexpr\n             | pexpr RSHIFT pexpr\n     pexpr : LP expr RP\n     expr : MINUS expr %prec UMINUS\n     expr : INTEGER\n     expr : ID\n     expr : LPP expr RPP\n     expr : ADDR\n     line : preproc_line\n     preproc_line : _LINE INTEGER\n     preproc_line : _LINE INTEGER STRING\n     preproc_line : _INIT ID\n    '
    
_lr_action_items = {'ID':([0,2,3,7,10,14,15,16,17,19,20,21,25,29,33,34,36,37,38,39,76,77,78,79,80,89,90,91,93,94,95,97,99,100,111,135,138,140,164,191,217,224,226,227,228,229,230,233,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,273,274,276,279,283,284,291,292,313,326,327,329,330,400,444,],[4,4,-6,-311,100,130,137,137,137,137,148,137,137,137,137,137,137,137,137,137,-133,-134,-135,-136,-137,-160,-161,-162,-7,137,137,-11,-312,-314,137,137,137,137,137,137,137,-10,-313,137,137,137,137,137,137,137,339,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-8,-9,137,137,137,137,137,137,137,]),'LABEL':([0,2,3,7,93,97,99,100,224,226,291,292,],[5,5,-6,-311,-7,-11,-312,-314,-10,-313,-8,-9,]),'NEWLINE':([0,2,3,5,6,7,8,12,13,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,93,94,96,97,99,100,104,105,110,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,139,141,142,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,166,167,168,169,170,171,172,173,174,175,176,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,204,205,206,208,209,210,211,212,214,220,221,222,223,224,225,226,267,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,325,328,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,390,391,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,445,448,461,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,],[-12,-12,-6,-12,97,-311,-13,-38,-39,-252,-226,-227,-228,-229,-230,-231,-232,-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,-246,-247,-248,-249,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-7,219,224,-11,-312,-314,-190,-191,-179,-188,-189,-177,-178,-184,-185,-186,-187,-192,-193,-180,-181,-182,-183,-40,-41,-43,-44,-47,-48,-307,-308,-310,-45,-46,-66,-67,-68,-69,-70,-71,-74,-76,-171,-172,-173,-174,-175,-176,-75,-77,-86,-210,-214,-199,-200,-201,-202,-203,-206,-207,-208,-209,-126,-127,-128,-129,-130,-131,-132,-138,-139,-140,-141,-148,-149,-150,-151,-212,-216,-198,-211,-215,-213,-217,-218,-219,289,290,291,292,-10,-14,-313,-306,-8,-9,-17,-15,-21,-31,-53,-78,-79,-16,-22,-81,-18,-19,-83,-147,-24,-20,-23,-25,-27,-29,-54,-82,-145,-26,-28,-33,-30,-32,-84,-55,-305,-51,-52,-85,-142,-143,-144,-80,-146,-42,-49,-50,-261,-283,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-294,-272,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-309,-65,-87,-194,-195,-90,-88,-89,-91,-117,-118,-123,-95,-92,-93,-94,-98,-96,-97,-99,-119,-120,-124,-106,-104,-105,-107,-116,-112,-113,-114,-115,-102,-100,-101,-103,-121,-122,-125,-110,-108,-109,-111,-152,-154,-156,-158,-153,-155,-157,-159,-196,-197,-204,-205,-224,-225,-64,-34,-35,-36,-37,-56,-60,-57,-61,-58,-62,-59,-63,-72,-73,-220,-221,-222,-223,]),'CO':([0,2,3,5,6,7,8,12,13,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,93,96,97,99,100,104,105,110,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,139,141,142,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,166,167,168,169,170,171,172,173,174,175,176,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,204,205,206,208,209,210,211,212,214,224,225,226,267,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,325,328,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,390,391,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,445,448,461,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,],[-12,-12,-6,-12,98,-311,-13,-38,-39,-252,-226,-227,-228,-229,-230,-231,-232,-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,-246,-247,-248,-249,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-7,98,-11,-312,-314,-190,-191,-179,-188,-189,-177,-178,-184,-185,-186,-187,-192,-193,-180,-181,-182,-183,-40,-41,-43,-44,-47,-48,-307,-308,-310,-45,-46,-66,-67,-68,-69,-70,-71,-74,-76,-171,-172,-173,-174,-175,-176,-75,-77,-86,-210,-214,-199,-200,-201,-202,-203,-206,-207,-208,-209,-126,-127,-128,-129,-130,-131,-132,-138,-139,-140,-141,-148,-149,-150,-151,-212,-216,-198,-211,-215,-213,-217,-218,-219,-10,-14,-313,-306,-8,-9,-17,-15,-21,-31,-53,-78,-79,-16,-22,-81,-18,-19,-83,-147,-24,-20,-23,-25,-27,-29,-54,-82,-145,-26,-28,-33,-30,-32,-84,-55,-305,-51,-52,-85,-142,-143,-144,-80,-146,-42,-49,-50,-261,-283,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-294,-272,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-309,-65,-87,-194,-195,-90,-88,-89,-91,-117,-118,-123,-95,-92,-93,-94,-98,-96,-97,-99,-119,-120,-124,-106,-104,-105,-107,-116,-112,-113,-114,-115,-102,-100,-101,-103,-121,-122,-125,-110,-108,-109,-111,-152,-154,-156,-158,-153,-155,-157,-159,-196,-197,-204,-205,-224,-225,-64,-34,-35,-36,-37,-56,-60,-57,-61,-58,-62,-59,-63,-72,-73,-220,-221,-222,-223,]),'_LINE':([0,2,3,7,93,97,99,100,224,226,291,292,],[9,9,-6,-311,-7,-11,-312,-314,-10,-313,-8,-9,]),'_INIT':([0,2,3,7,93,97,99,100,224,226,291,292,],[10,10,-6,-311,-7,-11,-312,-314,-10,-313,-8,-9,]),'LD':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[11,11,-6,11,-311,-7,-11,11,-312,-314,-10,-313,-8,-9,]),'PROC':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[12,12,-6,12,-311,-7,-11,12,-312,-314,-10,-313,-8,-9,]),'ENDP':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[13,13,-6,13,-311,-7,-11,13,-312,-314,-10,-313,-8,-9,]),'LOCAL':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[14,14,-6,14,-311,-7,-11,14,-312,-314,-10,-313,-8,-9,]),'DEFB':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[15,15,-6,15,-311,-7,-11,15,-312,-314,-10,-313,-8,-9,]),'DEFS':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[16,16,-6,16,-311,-7,-11,16,-312,-314,-10,-313,-8,-9,]),'DEFW':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[17,17,-6,17,-311,-7,-11,17,-312,-314,-10,-313,-8,-9,]),'EX':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[18,18,-6,18,-311,-7,-11,18,-312,-314,-10,-313,-8,-9,]),'ORG':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[19,19,-6,19,-311,-7,-11,19,-312,-314,-10,-313,-8,-9,]),'NAMESPACE':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[20,20,-6,20,-311,-7,-11,20,-312,-314,-10,-313,-8,-9,]),'ALIGN':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[21,21,-6,21,-311,-7,-11,21,-312,-314,-10,-313,-8,-9,]),'INCBIN':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[22,22,-6,22,-311,-7,-11,22,-312,-314,-10,-313,-8,-9,]),'INC':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[23,23,-6,23,-311,-7,-11,23,-312,-314,-10,-313,-8,-9,]),'DEC':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[24,24,-6,24,-311,-7,-11,24,-312,-314,-10,-313,-8,-9,]),'JP':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[25,25,-6,25,-311,-7,-11,25,-312,-314,-10,-313,-8,-9,]),'SBC':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[26,26,-6,26,-311,-7,-11,26,-312,-314,-10,-313,-8,-9,]),'ADD':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[27,27,-6,27,-311,-7,-11,27,-312,-314,-10,-313,-8,-9,]),'ADC':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[28,28,-6,28,-311,-7,-11,28,-312,-314,-10,-313,-8,-9,]),'PUSH':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[30,30,-6,30,-311,-7,-11,30,-312,-314,-10,-313,-8,-9,]),'POP':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[31,31,-6,31,-311,-7,-11,31,-312,-314,-10,-313,-8,-9,]),'CALL':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[34,34,-6,34,-311,-7,-11,34,-312,-314,-10,-313,-8,-9,]),'RET':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[35,35,-6,35,-311,-7,-11,35,-312,-314,-10,-313,-8,-9,]),'JR':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[36,36,-6,36,-311,-7,-11,36,-312,-314,-10,-313,-8,-9,]),'DJNZ':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[37,37,-6,37,-311,-7,-11,37,-312,-314,-10,-313,-8,-9,]),'RST':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[38,38,-6,38,-311,-7,-11,38,-312,-314,-10,-313,-8,-9,]),'IM':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[39,39,-6,39,-311,-7,-11,39,-312,-314,-10,-313,-8,-9,]),'IN':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[40,40,-6,40,-311,-7,-11,40,-312,-314,-10,-313,-8,-9,]),'OUT':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[41,41,-6,41,-311,-7,-11,41,-312,-314,-10,-313,-8,-9,]),'NOP':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[42,42,-6,42,-311,-7,-11,42,-312,-314,-10,-313,-8,-9,]),'EXX':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[43,43,-6,43,-311,-7,-11,43,-312,-314,-10,-313,-8,-9,]),'CCF':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[44,44,-6,44,-311,-7,-11,44,-312,-314,-10,-313,-8,-9,]),'SCF':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[45,45,-6,45,-311,-7,-11,45,-312,-314,-10,-313,-8,-9,]),'LDIR':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[46,46,-6,46,-311,-7,-11,46,-312,-314,-10,-313,-8,-9,]),'LDI':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[47,47,-6,47,-311,-7,-11,47,-312,-314,-10,-313,-8,-9,]),'LDDR':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[48,48,-6,48,-311,-7,-11,48,-312,-314,-10,-313,-8,-9,]),'LDD':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[49,49,-6,49,-311,-7,-11,49,-312,-314,-10,-313,-8,-9,]),'CPIR':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[50,50,-6,50,-311,-7,-11,50,-312,-314,-10,-313,-8,-9,]),'CPI':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[51,51,-6,51,-311,-7,-11,51,-312,-314,-10,-313,-8,-9,]),'CPDR':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[52,52,-6,52,-311,-7,-11,52,-312,-314,-10,-313,-8,-9,]),'CPD':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[53,53,-6,53,-311,-7,-11,53,-312,-314,-10,-313,-8,-9,]),'DAA':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[54,54,-6,54,-311,-7,-11,54,-312,-314,-10,-313,-8,-9,]),'NEG':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[55,55,-6,55,-311,-7,-11,55,-312,-314,-10,-313,-8,-9,]),'CPL':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[56,56,-6,56,-311,-7,-11,56,-312,-314,-10,-313,-8,-9,]),'HALT':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[57,57,-6,57,-311,-7,-11,57,-312,-314,-10,-313,-8,-9,]),'EI':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[58,58,-6,58,-311,-7,-11,58,-312,-314,-10,-313,-8,-9,]),'DI':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[59,59,-6,59,-311,-7,-11,59,-312,-314,-10,-313,-8,-9,]),'OUTD':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[60,60,-6,60,-311,-7,-11,60,-312,-314,-10,-313,-8,-9,]),'OUTI':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[61,61,-6,61,-311,-7,-11,61,-312,-314,-10,-313,-8,-9,]),'OTDR':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[62,62,-6,62,-311,-7,-11,62,-312,-314,-10,-313,-8,-9,]),'OTIR':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[63,63,-6,63,-311,-7,-11,63,-312,-314,-10,-313,-8,-9,]),'IND':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[64,64,-6,64,-311,-7,-11,64,-312,-314,-10,-313,-8,-9,]),'INI':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[65,65,-6,65,-311,-7,-11,65,-312,-314,-10,-313,-8,-9,]),'INDR':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[66,66,-6,66,-311,-7,-11,66,-312,-314,-10,-313,-8,-9,]),'INIR':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[67,67,-6,67,-311,-7,-11,67,-312,-314,-10,-313,-8,-9,]),'RETI':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[68,68,-6,68,-311,-7,-11,68,-312,-314,-10,-313,-8,-9,]),'RETN':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[69,69,-6,69,-311,-7,-11,69,-312,-314,-10,-313,-8,-9,]),'RLA':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[70,70,-6,70,-311,-7,-11,70,-312,-314,-10,-313,-8,-9,]),'RLCA':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[71,71,-6,71,-311,-7,-11,71,-312,-314,-10,-313,-8,-9,]),'RRA':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[72,72,-6,72,-311,-7,-11,72,-312,-314,-10,-313,-8,-9,]),'RRCA':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[73,73,-6,73,-311,-7,-11,73,-312,-314,-10,-313,-8,-9,]),'RLD':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[74,74,-6,74,-311,-7,-11,74,-312,-314,-10,-313,-8,-9,]),'RRD':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[75,75,-6,75,-311,-7,-11,75,-312,-314,-10,-313,-8,-9,]),'OR':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[76,76,-6,76,-311,-7,-11,76,-312,-314,-10,-313,-8,-9,]),'AND':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[77,77,-6,77,-311,-7,-11,77,-312,-314,-10,-313,-8,-9,]),'XOR':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[78,78,-6,78,-311,-7,-11,78,-312,-314,-10,-313,-8,-9,]),'SUB':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[79,79,-6,79,-311,-7,-11,79,-312,-314,-10,-313,-8,-9,]),'CP':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[80,80,-6,80,-311,-7,-11,80,-312,-314,-10,-313,-8,-9,]),'RR':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[81,81,-6,81,-311,-7,-11,81,-312,-314,-10,-313,-8,-9,]),'RL':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[82,82,-6,82,-311,-7,-11,82,-312,-314,-10,-313,-8,-9,]),'RRC':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[83,83,-6,83,-311,-7,-11,83,-312,-314,-10,-313,-8,-9,]),'RLC':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[84,84,-6,84,-311,-7,-11,84,-312,-314,-10,-313,-8,-9,]),'SLA':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[85,85,-6,85,-311,-7,-11,85,-312,-314,-10,-313,-8,-9,]),'SLL':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[86,86,-6,86,-311,-7,-11,86,-312,-314,-10,-313,-8,-9,]),'SRA':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[87,87,-6,87,-311,-7,-11,87,-312,-314,-10,-313,-8,-9,]),'SRL':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[88,88,-6,88,-311,-7,-11,88,-312,-314,-10,-313,-8,-9,]),'BIT':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[89,89,-6,89,-311,-7,-11,89,-312,-314,-10,-313,-8,-9,]),'RES':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[90,90,-6,90,-311,-7,-11,90,-312,-314,-10,-313,-8,-9,]),'SET':([0,2,3,5,7,93,97,98,99,100,224,226,291,292,],[91,91,-6,91,-311,-7,-11,91,-312,-314,-10,-313,-8,-9,]),'$end':([1,2,3,7,92,93,97,99,100,219,224,226,289,290,291,292,],[0,-1,-6,-311,-2,-7,-11,-312,-314,-3,-10,-313,-4,-5,-8,-9,]),'END':([2,3,7,93,97,99,100,224,226,291,292,],[94,-6,-311,-7,-11,-312,-314,-10,-313,-8,-9,]),'EQU':([4,],[95,]),'INTEGER':([9,15,16,17,19,21,25,29,33,34,36,37,38,39,76,77,78,79,80,89,90,91,94,95,111,135,138,140,164,191,217,227,228,229,230,233,240,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,273,274,276,279,283,284,313,326,327,329,330,400,444,],[99,136,136,136,136,136,136,136,136,136,136,136,136,136,-133,-134,-135,-136,-137,-160,-161,-162,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'SP':([11,23,24,145,241,275,277,278,280,],[103,154,154,271,336,402,415,420,431,]),'A':([11,23,24,26,27,28,29,32,40,76,77,78,79,80,81,82,83,84,85,86,87,88,227,228,230,231,232,233,240,241,274,276,279,281,282,288,451,452,465,],[106,158,158,177,179,182,186,198,215,-133,-134,-135,-136,-137,-163,-164,-165,-166,-167,-168,-169,-170,295,301,307,317,318,320,332,334,393,405,421,432,436,448,468,469,482,]),'I':([11,230,],[107,310,]),'R':([11,230,],[108,311,]),'LP':([11,15,16,17,18,19,21,23,24,25,29,32,33,34,36,37,38,39,41,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,111,135,138,140,164,191,217,227,228,229,230,233,240,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,273,274,276,279,281,282,283,284,285,286,313,326,327,329,330,400,444,],[111,140,140,140,145,140,140,160,160,164,191,200,140,140,140,140,140,140,217,-133,-134,-135,-136,-137,-163,-164,-165,-166,-167,-168,-169,-170,-160,-161,-162,140,140,140,140,140,140,140,140,140,191,140,140,313,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,400,400,400,200,200,140,140,444,446,140,140,140,140,140,140,140,]),'H':([11,23,24,29,32,40,76,77,78,79,80,81,82,83,84,85,86,87,88,227,228,230,240,274,276,279,281,282,465,],[117,117,117,117,117,117,-133,-134,-135,-136,-137,-163,-164,-165,-166,-167,-168,-169,-170,117,117,117,117,117,117,117,117,117,117,]),'L':([11,23,24,29,32,40,76,77,78,79,80,81,82,83,84,85,86,87,88,227,228,230,240,274,276,279,281,282,465,],[118,118,118,118,118,118,-133,-134,-135,-136,-137,-163,-164,-165,-166,-167,-168,-169,-170,118,118,118,118,118,118,118,118,118,118,]),'IXH':([11,23,24,29,76,77,78,79,80,227,230,233,274,276,279,],[119,119,119,119,-133,-134,-135,-136,-137,119,119,119,119,119,119,]),'IXL':([11,23,24,29,76,77,78,79,80,227,230,233,274,276,279,],[120,120,120,120,-133,-134,-135,-136,-137,120,120,120,120,120,120,]),'IYH':([11,23,24,29,76,77,78,79,80,227,230,233,274,276,279,],[121,121,121,121,-133,-134,-135,-136,-137,121,121,121,121,121,121,]),'IYL':([11,23,24,29,76,77,78,79,80,227,230,233,274,276,279,],[122,122,122,122,-133,-134,-135,-136,-137,122,122,122,122,122,122,]),'BC':([11,23,24,30,31,111,241,275,277,278,280,313,],[112,112,112,112,112,234,112,403,413,417,429,449,]),'DE':([11,18,23,24,30,31,111,241,275,277,278,280,313,],[113,144,113,113,113,113,235,113,404,414,418,430,450,]),'HL':([11,23,24,26,27,28,30,31,111,160,164,191,200,229,241,270,275,277,278,280,313,400,462,],[104,104,104,178,180,183,104,104,236,236,236,236,236,303,104,388,401,412,419,428,236,236,479,]),'B':([11,23,24,29,32,40,76,77,78,79,80,81,82,83,84,85,86,87,88,227,228,230,233,240,274,276,279,281,282,465,],[125,125,125,125,125,125,-133,-134,-135,-136,-137,-163,-164,-165,-166,-167,-168,-169,-170,125,125,125,125,125,125,125,125,125,125,125,]),'C':([11,23,24,25,29,32,34,35,36,40,76,77,78,79,80,81,82,83,84,85,86,87,88,217,227,228,230,233,240,274,276,279,281,282,444,446,465,],[126,126,126,174,126,126,174,174,174,126,-133,-134,-135,-136,-137,-163,-164,-165,-166,-167,-168,-169,-170,287,126,126,126,126,126,126,126,126,126,126,463,464,126,]),'D':([11,23,24,29,32,40,76,77,78,79,80,81,82,83,84,85,86,87,88,227,228,230,233,240,274,276,279,281,282,465,],[127,127,127,127,127,127,-133,-134,-135,-136,-137,-163,-164,-165,-166,-167,-168,-169,-170,127,127,127,127,127,127,127,127,127,127,127,]),'E':([11,23,24,29,32,40,76,77,78,79,80,81,82,83,84,85,86,87,88,227,228,230,233,240,274,276,279,281,282,465,],[128,128,128,128,128,128,-133,-134,-135,-136,-137,-163,-164,-165,-166,-167,-168,-169,-170,128,128,128,128,128,128,128,128,128,128,128,]),'IX':([11,23,24,27,30,31,111,160,164,191,200,229,241,278,313,400,462,],[123,123,123,123,123,123,237,237,123,237,237,123,123,123,237,237,123,]),'IY':([11,23,24,27,30,31,111,160,164,191,200,229,241,278,313,400,462,],[124,124,124,124,124,124,239,239,124,239,239,124,124,124,239,239,124,]),'STRING':([15,22,99,],[132,151,226,]),'MINUS':([15,16,17,19,21,25,29,33,34,36,37,38,39,76,77,78,79,80,89,90,91,94,95,111,133,134,135,136,137,138,139,140,146,147,149,150,164,166,167,189,190,191,201,202,204,205,208,209,210,211,212,213,214,217,220,221,222,223,227,228,229,230,233,237,238,239,240,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,273,274,276,279,283,284,298,299,302,305,306,313,315,316,322,326,327,328,329,330,333,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,391,392,397,398,400,409,410,425,426,440,441,442,443,444,453,454,455,456,457,458,459,460,],[135,135,135,135,135,135,135,135,135,135,135,135,135,-133,-134,-135,-136,-137,-160,-161,-162,135,135,135,249,260,135,-307,-308,135,-310,135,249,260,249,260,135,249,260,249,260,135,249,260,249,260,249,260,249,260,249,260,249,135,249,260,249,260,135,135,135,135,135,327,249,330,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-306,249,135,135,135,135,135,135,249,260,249,249,260,135,249,260,249,135,135,-305,135,135,249,249,260,249,260,249,260,249,260,249,260,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,249,260,249,260,260,249,260,249,260,249,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,260,249,260,249,-309,249,260,249,260,135,249,260,249,260,249,260,249,260,135,249,260,249,260,249,260,249,260,]),'LPP':([15,16,17,19,21,25,29,33,34,36,37,38,39,76,77,78,79,80,89,90,91,94,95,111,135,138,140,164,191,217,227,228,229,230,233,240,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,273,274,276,279,283,284,313,326,327,329,330,400,444,],[138,138,138,138,138,138,138,138,138,138,138,138,138,-133,-134,-135,-136,-137,-160,-161,-162,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'ADDR':([15,16,17,19,21,25,29,33,34,36,37,38,39,76,77,78,79,80,89,90,91,94,95,111,135,138,140,164,191,217,227,228,229,230,233,240,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,273,274,276,279,283,284,313,326,327,329,330,400,444,],[139,139,139,139,139,139,139,139,139,139,139,139,139,-133,-134,-135,-136,-137,-160,-161,-162,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'AF':([18,30,31,269,],[143,192,194,387,]),'P':([25,34,35,],[168,168,168,]),'M':([25,34,35,],[169,169,169,]),'PO':([25,34,35,],[170,170,170,]),'PE':([25,34,35,],[171,171,171,]),'Z':([25,34,35,36,],[173,173,173,173,]),'NZ':([25,34,35,36,],[175,175,175,175,]),'NC':([25,34,35,36,],[176,176,176,176,]),'COMMA':([101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,136,137,139,141,142,143,144,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,201,202,203,207,215,216,218,267,323,324,325,328,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,389,447,470,471,472,473,474,475,476,477,],[227,228,229,-190,-191,230,231,232,233,-179,-188,-189,240,241,242,-177,-178,-184,-185,-186,-187,-192,-193,-180,-181,-182,-183,243,-41,244,-47,-48,-307,-308,-310,244,244,269,270,273,-199,-200,-201,-202,-203,-206,-207,-208,-209,274,275,276,277,278,279,280,281,282,283,284,285,286,288,-306,451,452,-55,-305,-42,-49,-50,-261,-283,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-294,-272,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-309,462,465,-56,-60,-57,-61,-58,-62,-59,-63,]),'RP':([123,124,136,137,139,234,235,236,238,267,271,272,287,328,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,449,450,453,454,455,456,457,458,459,460,463,464,],[-192,-193,-307,-308,-310,323,324,325,328,-306,389,390,447,-305,-261,-283,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-294,-272,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-309,466,467,470,471,472,473,474,475,476,477,480,481,]),'BAND':([133,134,136,137,139,146,147,149,150,166,167,189,190,201,202,204,205,208,209,210,211,212,213,214,220,221,222,223,238,267,268,298,299,302,305,306,315,316,322,328,333,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,391,392,397,398,409,410,425,426,440,441,442,443,453,454,455,456,457,458,459,460,],[245,256,-307,-308,-310,245,256,245,256,245,256,245,256,245,256,245,256,245,256,245,256,245,256,245,245,256,245,256,245,-306,245,245,256,245,245,256,245,256,245,-305,245,245,256,245,256,-261,-283,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-294,-272,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-309,245,256,245,256,245,256,245,256,245,256,245,256,245,256,245,256,245,256,245,256,]),'BOR':([133,134,136,137,139,146,147,149,150,166,167,189,190,201,202,204,205,208,209,210,211,212,213,214,220,221,222,223,238,267,268,298,299,302,305,306,315,316,322,328,333,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,391,392,397,398,409,410,425,426,440,441,442,443,453,454,455,456,457,458,459,460,],[246,257,-307,-308,-310,246,257,246,257,246,257,246,257,246,257,246,257,246,257,246,257,246,257,246,246,257,246,257,246,-306,246,246,257,246,246,257,246,257,246,-305,246,246,257,246,257,-261,-283,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-294,-272,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-309,246,257,246,257,246,257,246,257,246,257,246,257,246,257,246,257,246,257,246,257,]),'BXOR':([133,134,136,137,139,146,147,149,150,166,167,189,190,201,202,204,205,208,209,210,211,212,213,214,220,221,222,223,238,267,268,298,299,302,305,306,315,316,322,328,333,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,391,392,397,398,409,410,425,426,440,441,442,443,453,454,455,456,457,458,459,460,],[247,258,-307,-308,-310,247,258,247,258,247,258,247,258,247,258,247,258,247,258,247,258,247,258,247,247,258,247,258,247,-306,247,247,258,247,247,258,247,258,247,-305,247,247,258,247,258,-261,-283,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-294,-272,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-309,247,258,247,258,247,258,247,258,247,258,247,258,247,258,247,258,247,258,247,258,]),'PLUS':([133,134,136,137,139,146,147,149,150,166,167,189,190,201,202,204,205,208,209,210,211,212,213,214,220,221,222,223,237,238,239,267,268,298,299,302,305,306,315,316,322,328,333,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,391,392,397,398,409,410,425,426,440,441,442,443,453,454,455,456,457,458,459,460,],[248,259,-307,-308,-310,248,259,248,259,248,259,248,259,248,259,248,259,248,259,248,259,248,259,248,248,259,248,259,326,248,329,-306,248,248,259,248,248,259,248,259,248,-305,248,248,259,248,259,248,259,248,259,248,259,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,248,259,248,259,259,248,259,248,259,248,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,259,248,259,248,-309,248,259,248,259,248,259,248,259,248,259,248,259,248,259,248,259,248,259,248,259,]),'MUL':([133,134,136,137,139,146,147,149,150,166,167,189,190,201,202,204,205,208,209,210,211,212,213,214,220,221,222,223,238,267,268,298,299,302,305,306,315,316,322,328,333,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,391,392,397,398,409,410,425,426,440,441,442,443,453,454,455,456,457,458,459,460,],[250,261,-307,-308,-310,250,261,250,261,250,261,250,261,250,261,250,261,250,261,250,261,250,261,250,250,261,250,261,250,-306,250,250,261,250,250,261,250,261,250,-305,250,250,261,250,261,250,261,250,261,250,261,250,261,250,261,-266,-288,-267,-289,-268,-290,-269,-291,250,261,250,261,261,250,261,250,261,250,261,250,261,250,-299,-277,-300,-278,-301,-279,-302,-280,261,250,261,250,-309,250,261,250,261,250,261,250,261,250,261,250,261,250,261,250,261,250,261,250,261,]),'DIV':([133,134,136,137,139,146,147,149,150,166,167,189,190,201,202,204,205,208,209,210,211,212,213,214,220,221,222,223,238,267,268,298,299,302,305,306,315,316,322,328,333,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,391,392,397,398,409,410,425,426,440,441,442,443,453,454,455,456,457,458,459,460,],[251,262,-307,-308,-310,251,262,251,262,251,262,251,262,251,262,251,262,251,262,251,262,251,262,251,251,262,251,262,251,-306,251,251,262,251,251,262,251,262,251,-305,251,251,262,251,262,251,262,251,262,251,262,251,262,251,262,-266,-288,-267,-289,-268,-290,-269,-291,251,262,251,262,262,251,262,251,262,251,262,251,262,251,-299,-277,-300,-278,-301,-279,-302,-280,262,251,262,251,-309,251,262,251,262,251,262,251,262,251,262,251,262,251,262,251,262,251,262,251,262,]),'MOD':([133,134,136,137,139,146,147,149,150,166,167,189,190,201,202,204,205,208,209,210,211,212,213,214,220,221,222,223,238,267,268,298,299,302,305,306,315,316,322,328,333,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,391,392,397,398,409,410,425,426,440,441,442,443,453,454,455,456,457,458,459,460,],[252,263,-307,-308,-310,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,252,263,252,263,252,-306,252,252,263,252,252,263,252,263,252,-305,252,252,263,252,263,252,263,252,263,252,263,252,263,252,263,-266,-288,-267,-289,-268,-290,-269,-291,252,263,252,263,263,252,263,252,263,252,263,252,263,252,-299,-277,-300,-278,-301,-279,-302,-280,263,252,263,252,-309,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,252,263,]),'POW':([133,134,136,137,139,146,147,149,150,166,167,189,190,201,202,204,205,208,209,210,211,212,213,214,220,221,222,223,238,267,268,298,299,302,305,306,315,316,322,328,333,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,391,392,397,398,409,410,425,426,440,441,442,443,453,454,455,456,457,458,459,460,],[253,264,-307,-308,-310,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,253,264,253,264,253,-306,253,253,264,253,253,264,253,264,253,-305,253,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,-309,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,253,264,]),'LSHIFT':([133,134,136,137,139,146,147,149,150,166,167,189,190,201,202,204,205,208,209,210,211,212,213,214,220,221,222,223,238,267,268,298,299,302,305,306,315,316,322,328,333,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,391,392,397,398,409,410,425,426,440,441,442,443,453,454,455,456,457,458,459,460,],[254,265,-307,-308,-310,254,265,254,265,254,265,254,265,254,265,254,265,254,265,254,265,254,265,254,254,265,254,265,254,-306,254,254,265,254,254,265,254,265,254,-305,254,254,265,254,265,-261,-283,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-294,-272,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-309,254,265,254,265,254,265,254,265,254,265,254,265,254,265,254,265,254,265,254,265,]),'RSHIFT':([133,134,136,137,139,146,147,149,150,166,167,189,190,201,202,204,205,208,209,210,211,212,213,214,220,221,222,223,238,267,268,298,299,302,305,306,315,316,322,328,333,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,391,392,397,398,409,410,425,426,440,441,442,443,453,454,455,456,457,458,459,460,],[255,266,-307,-308,-310,255,266,255,266,255,266,255,266,255,266,255,266,255,266,255,266,255,266,255,255,266,255,266,255,-306,255,255,266,255,255,266,255,266,255,-305,255,255,266,255,266,-261,-283,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-294,-272,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-309,255,266,255,266,255,266,255,266,255,266,255,266,255,266,255,266,255,266,255,266,]),'RPP':([136,137,139,267,268,328,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,],[-307,-308,-310,-306,386,-305,-261,-283,-262,-284,-263,-285,-264,-286,-265,-287,-266,-288,-267,-289,-268,-290,-269,-291,-270,-292,-271,-293,-294,-272,-295,-273,-296,-274,-297,-275,-298,-276,-299,-277,-300,-278,-301,-279,-302,-280,-303,-281,-304,-282,-309,]),'APO':([387,],[461,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'program':([0,],[2,]),'line':([0,2,],[3,93,]),'asms':([0,2,5,],[6,6,96,]),'preproc_line':([0,2,],[7,7,]),'asm':([0,2,5,98,],[8,8,8,225,]),'bitwiseop':([0,2,5,98,],[29,29,29,29,]),'rotation':([0,2,5,98,],[32,32,32,32,]),'bitop':([0,2,5,98,],[33,33,33,33,]),'endline':([2,],[92,]),'reg8':([11,23,24,29,32,40,227,228,230,240,274,276,279,281,282,465,],[101,155,155,184,196,216,293,300,308,331,394,406,422,433,437,483,]),'reg8_hl':([11,23,24,25,29,32,227,230,274,276,279,281,282,],[102,157,157,163,187,197,294,309,396,408,424,434,438,]),'reg16i':([11,23,24,27,30,31,164,229,241,278,462,],[105,105,105,181,105,105,272,304,105,416,478,]),'reg8i':([11,23,24,29,227,230,233,274,276,279,],[109,159,159,185,296,312,319,395,407,423,]),'regBCDE':([11,23,24,29,32,40,227,228,230,233,240,274,276,279,281,282,465,],[110,110,110,110,110,110,110,110,110,321,110,110,110,110,110,110,110,]),'reg8_I':([11,23,24,29,32,227,230,274,276,279,281,282,],[114,153,162,188,199,297,314,399,411,427,435,439,]),'pexpr':([11,15,16,17,19,21,25,29,33,34,36,37,38,39,41,94,95,111,135,138,140,164,191,217,227,228,229,230,233,240,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,273,274,276,279,283,284,285,313,326,327,329,330,400,444,],[115,134,134,134,147,150,167,190,202,205,209,211,213,213,218,221,223,213,213,213,213,213,213,213,299,213,306,316,213,213,338,341,343,345,347,349,351,353,355,357,359,361,363,364,366,368,370,372,374,376,378,380,382,384,392,398,410,426,441,443,445,213,454,456,458,460,213,213,]),'reg16':([11,23,24,30,31,241,],[116,156,156,193,195,335,]),'id_list':([14,],[129,]),'number_list':([15,16,17,],[131,141,142,]),'expr':([15,16,17,19,21,25,29,33,34,36,37,38,39,94,95,111,135,138,140,164,191,217,227,228,229,230,233,240,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,273,274,276,279,283,284,313,326,327,329,330,400,444,],[133,133,133,146,149,166,189,201,204,208,210,212,214,220,222,238,267,268,238,238,238,238,298,302,305,315,322,333,337,340,342,344,346,348,350,352,354,356,358,360,362,365,367,369,371,373,375,377,379,381,383,385,391,397,409,425,440,442,238,453,455,457,459,238,238,]),'inc_reg':([23,24,],[152,161,]),'jp_flags':([25,34,35,],[165,203,206,]),'jr_flags':([25,34,35,36,],[172,172,172,207,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> program','start',1,'p_start','asmparse.py',583),
  ('start -> program endline','start',2,'p_start','asmparse.py',584),
  ('endline -> END NEWLINE','endline',2,'p_program_endline','asmparse.py',589),
  ('endline -> END expr NEWLINE','endline',3,'p_program_endline2','asmparse.py',594),
  ('endline -> END pexpr NEWLINE','endline',3,'p_program_endline2','asmparse.py',595),
  ('program -> line','program',1,'p_program','asmparse.py',602),
  ('program -> program line','program',2,'p_program_line','asmparse.py',609),
  ('line -> ID EQU expr NEWLINE','line',4,'p_def_label','asmparse.py',616),
  ('line -> ID EQU pexpr NEWLINE','line',4,'p_def_label','asmparse.py',617),
  ('line -> LABEL asms NEWLINE','line',3,'p_line_label_asm','asmparse.py',625),
  ('line -> asms NEWLINE','line',2,'p_line_asm','asmparse.py',633),
  ('asms -> <empty>','asms',0,'p_asms_empty','asmparse.py',639),
  ('asms -> asm','asms',1,'p_asms_asm','asmparse.py',645),
  ('asms -> asms CO asm','asms',3,'p_asms_asms_asm','asmparse.py',651),
  ('asm -> LD reg8 COMMA reg8_hl','asm',4,'p_asm_ld8','asmparse.py',658),
  ('asm -> LD reg8_hl COMMA reg8','asm',4,'p_asm_ld8','asmparse.py',659),
  ('asm -> LD reg8 COMMA reg8','asm',4,'p_asm_ld8','asmparse.py',660),
  ('asm -> LD SP COMMA HL','asm',4,'p_asm_ld8','asmparse.py',661),
  ('asm -> LD SP COMMA reg16i','asm',4,'p_asm_ld8','asmparse.py',662),
  ('asm -> LD A COMMA reg8','asm',4,'p_asm_ld8','asmparse.py',663),
  ('asm -> LD reg8 COMMA A','asm',4,'p_asm_ld8','asmparse.py',664),
  ('asm -> LD reg8_hl COMMA A','asm',4,'p_asm_ld8','asmparse.py',665),
  ('asm -> LD A COMMA reg8_hl','asm',4,'p_asm_ld8','asmparse.py',666),
  ('asm -> LD A COMMA A','asm',4,'p_asm_ld8','asmparse.py',667),
  ('asm -> LD A COMMA I','asm',4,'p_asm_ld8','asmparse.py',668),
  ('asm -> LD I COMMA A','asm',4,'p_asm_ld8','asmparse.py',669),
  ('asm -> LD A COMMA R','asm',4,'p_asm_ld8','asmparse.py',670),
  ('asm -> LD R COMMA A','asm',4,'p_asm_ld8','asmparse.py',671),
  ('asm -> LD A COMMA reg8i','asm',4,'p_asm_ld8','asmparse.py',672),
  ('asm -> LD reg8i COMMA A','asm',4,'p_asm_ld8','asmparse.py',673),
  ('asm -> LD reg8 COMMA reg8i','asm',4,'p_asm_ld8','asmparse.py',674),
  ('asm -> LD reg8i COMMA regBCDE','asm',4,'p_asm_ld8','asmparse.py',675),
  ('asm -> LD reg8i COMMA reg8i','asm',4,'p_asm_ld8','asmparse.py',676),
  ('asm -> LD A COMMA LP BC RP','asm',6,'p_LDa','asmparse.py',686),
  ('asm -> LD A COMMA LP DE RP','asm',6,'p_LDa','asmparse.py',687),
  ('asm -> LD LP BC RP COMMA A','asm',6,'p_LDa','asmparse.py',688),
  ('asm -> LD LP DE RP COMMA A','asm',6,'p_LDa','asmparse.py',689),
  ('asm -> PROC','asm',1,'p_PROC','asmparse.py',695),
  ('asm -> ENDP','asm',1,'p_ENDP','asmparse.py',702),
  ('asm -> LOCAL id_list','asm',2,'p_LOCAL','asmparse.py',709),
  ('id_list -> ID','id_list',1,'p_idlist','asmparse.py',719),
  ('id_list -> id_list COMMA ID','id_list',3,'p_idlist_id','asmparse.py',725),
  ('asm -> DEFB number_list','asm',2,'p_DEFB','asmparse.py',731),
  ('asm -> DEFB STRING','asm',2,'p_DEFB','asmparse.py',732),
  ('asm -> DEFS number_list','asm',2,'p_DEFS','asmparse.py',738),
  ('asm -> DEFW number_list','asm',2,'p_DEFW','asmparse.py',751),
  ('number_list -> expr','number_list',1,'p_number_list','asmparse.py',757),
  ('number_list -> pexpr','number_list',1,'p_number_list','asmparse.py',758),
  ('number_list -> number_list COMMA expr','number_list',3,'p_number_list_number','asmparse.py',764),
  ('number_list -> number_list COMMA pexpr','number_list',3,'p_number_list_number','asmparse.py',765),
  ('asm -> LD reg8_I COMMA reg8','asm',4,'p_asm_ldind_r8','asmparse.py',771),
  ('asm -> LD reg8_I COMMA A','asm',4,'p_asm_ldind_r8','asmparse.py',772),
  ('asm -> LD reg8 COMMA reg8_I','asm',4,'p_asm_ldr8_ind','asmparse.py',778),
  ('asm -> LD A COMMA reg8_I','asm',4,'p_asm_ldr8_ind','asmparse.py',779),
  ('reg8_hl -> LP HL RP','reg8_hl',3,'p_reg8_hl','asmparse.py',785),
  ('reg8_I -> LP IX PLUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',791),
  ('reg8_I -> LP IX MINUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',792),
  ('reg8_I -> LP IY PLUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',793),
  ('reg8_I -> LP IY MINUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',794),
  ('reg8_I -> LP IX PLUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',795),
  ('reg8_I -> LP IX MINUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',796),
  ('reg8_I -> LP IY PLUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',797),
  ('reg8_I -> LP IY MINUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',798),
  ('asm -> EX AF COMMA AF APO','asm',5,'p_ex_af_af','asmparse.py',808),
  ('asm -> EX DE COMMA HL','asm',4,'p_ex_de_hl','asmparse.py',814),
  ('asm -> ORG expr','asm',2,'p_org','asmparse.py',820),
  ('asm -> ORG pexpr','asm',2,'p_org','asmparse.py',821),
  ('asm -> NAMESPACE ID','asm',2,'p_namespace','asmparse.py',827),
  ('asm -> ALIGN expr','asm',2,'p_align','asmparse.py',836),
  ('asm -> ALIGN pexpr','asm',2,'p_align','asmparse.py',837),
  ('asm -> INCBIN STRING','asm',2,'p_incbin','asmparse.py',848),
  ('asm -> EX LP SP RP COMMA reg16i','asm',6,'p_ex_sp_reg8','asmparse.py',866),
  ('asm -> EX LP SP RP COMMA HL','asm',6,'p_ex_sp_reg8','asmparse.py',867),
  ('asm -> INC inc_reg','asm',2,'p_incdec','asmparse.py',873),
  ('asm -> DEC inc_reg','asm',2,'p_incdec','asmparse.py',874),
  ('asm -> INC reg8_I','asm',2,'p_incdeci','asmparse.py',880),
  ('asm -> DEC reg8_I','asm',2,'p_incdeci','asmparse.py',881),
  ('asm -> LD reg8 COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',887),
  ('asm -> LD reg8 COMMA pexpr','asm',4,'p_LD_reg_val','asmparse.py',888),
  ('asm -> LD reg16 COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',889),
  ('asm -> LD reg8_hl COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',890),
  ('asm -> LD A COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',891),
  ('asm -> LD SP COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',892),
  ('asm -> LD reg8i COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',893),
  ('asm -> LD reg8_I COMMA expr','asm',4,'p_LD_regI_val','asmparse.py',903),
  ('asm -> JP reg8_hl','asm',2,'p_JP_hl','asmparse.py',909),
  ('asm -> JP LP reg16i RP','asm',4,'p_JP_hl','asmparse.py',910),
  ('asm -> SBC A COMMA reg8','asm',4,'p_SBCADD','asmparse.py',922),
  ('asm -> SBC A COMMA reg8i','asm',4,'p_SBCADD','asmparse.py',923),
  ('asm -> SBC A COMMA A','asm',4,'p_SBCADD','asmparse.py',924),
  ('asm -> SBC A COMMA reg8_hl','asm',4,'p_SBCADD','asmparse.py',925),
  ('asm -> SBC HL COMMA SP','asm',4,'p_SBCADD','asmparse.py',926),
  ('asm -> SBC HL COMMA BC','asm',4,'p_SBCADD','asmparse.py',927),
  ('asm -> SBC HL COMMA DE','asm',4,'p_SBCADD','asmparse.py',928),
  ('asm -> SBC HL COMMA HL','asm',4,'p_SBCADD','asmparse.py',929),
  ('asm -> ADD A COMMA reg8','asm',4,'p_SBCADD','asmparse.py',930),
  ('asm -> ADD A COMMA reg8i','asm',4,'p_SBCADD','asmparse.py',931),
  ('asm -> ADD A COMMA A','asm',4,'p_SBCADD','asmparse.py',932),
  ('asm -> ADD A COMMA reg8_hl','asm',4,'p_SBCADD','asmparse.py',933),
  ('asm -> ADC A COMMA reg8','asm',4,'p_SBCADD','asmparse.py',934),
  ('asm -> ADC A COMMA reg8i','asm',4,'p_SBCADD','asmparse.py',935),
  ('asm -> ADC A COMMA A','asm',4,'p_SBCADD','asmparse.py',936),
  ('asm -> ADC A COMMA reg8_hl','asm',4,'p_SBCADD','asmparse.py',937),
  ('asm -> ADD HL COMMA BC','asm',4,'p_SBCADD','asmparse.py',938),
  ('asm -> ADD HL COMMA DE','asm',4,'p_SBCADD','asmparse.py',939),
  ('asm -> ADD HL COMMA HL','asm',4,'p_SBCADD','asmparse.py',940),
  ('asm -> ADD HL COMMA SP','asm',4,'p_SBCADD','asmparse.py',941),
  ('asm -> ADC HL COMMA BC','asm',4,'p_SBCADD','asmparse.py',942),
  ('asm -> ADC HL COMMA DE','asm',4,'p_SBCADD','asmparse.py',943),
  ('asm -> ADC HL COMMA HL','asm',4,'p_SBCADD','asmparse.py',944),
  ('asm -> ADC HL COMMA SP','asm',4,'p_SBCADD','asmparse.py',945),
  ('asm -> ADD reg16i COMMA BC','asm',4,'p_SBCADD','asmparse.py',946),
  ('asm -> ADD reg16i COMMA DE','asm',4,'p_SBCADD','asmparse.py',947),
  ('asm -> ADD reg16i COMMA HL','asm',4,'p_SBCADD','asmparse.py',948),
  ('asm -> ADD reg16i COMMA SP','asm',4,'p_SBCADD','asmparse.py',949),
  ('asm -> ADD reg16i COMMA reg16i','asm',4,'p_SBCADD','asmparse.py',950),
  ('asm -> SBC A COMMA expr','asm',4,'p_arith_A_expr','asmparse.py',956),
  ('asm -> SBC A COMMA pexpr','asm',4,'p_arith_A_expr','asmparse.py',957),
  ('asm -> ADD A COMMA expr','asm',4,'p_arith_A_expr','asmparse.py',958),
  ('asm -> ADD A COMMA pexpr','asm',4,'p_arith_A_expr','asmparse.py',959),
  ('asm -> ADC A COMMA expr','asm',4,'p_arith_A_expr','asmparse.py',960),
  ('asm -> ADC A COMMA pexpr','asm',4,'p_arith_A_expr','asmparse.py',961),
  ('asm -> SBC A COMMA reg8_I','asm',4,'p_arith_A_regI','asmparse.py',967),
  ('asm -> ADD A COMMA reg8_I','asm',4,'p_arith_A_regI','asmparse.py',968),
  ('asm -> ADC A COMMA reg8_I','asm',4,'p_arith_A_regI','asmparse.py',969),
  ('asm -> bitwiseop reg8','asm',2,'p_bitwiseop_reg','asmparse.py',975),
  ('asm -> bitwiseop reg8i','asm',2,'p_bitwiseop_reg','asmparse.py',976),
  ('asm -> bitwiseop A','asm',2,'p_bitwiseop_reg','asmparse.py',977),
  ('asm -> bitwiseop reg8_hl','asm',2,'p_bitwiseop_reg','asmparse.py',978),
  ('asm -> bitwiseop reg8_I','asm',2,'p_bitwiseop_regI','asmparse.py',984),
  ('asm -> bitwiseop expr','asm',2,'p_bitwise_expr','asmparse.py',990),
  ('asm -> bitwiseop pexpr','asm',2,'p_bitwise_expr','asmparse.py',991),
  ('bitwiseop -> OR','bitwiseop',1,'p_bitwise','asmparse.py',997),
  ('bitwiseop -> AND','bitwiseop',1,'p_bitwise','asmparse.py',998),
  ('bitwiseop -> XOR','bitwiseop',1,'p_bitwise','asmparse.py',999),
  ('bitwiseop -> SUB','bitwiseop',1,'p_bitwise','asmparse.py',1000),
  ('bitwiseop -> CP','bitwiseop',1,'p_bitwise','asmparse.py',1001),
  ('asm -> PUSH AF','asm',2,'p_PUSH_POP','asmparse.py',1007),
  ('asm -> PUSH reg16','asm',2,'p_PUSH_POP','asmparse.py',1008),
  ('asm -> POP AF','asm',2,'p_PUSH_POP','asmparse.py',1009),
  ('asm -> POP reg16','asm',2,'p_PUSH_POP','asmparse.py',1010),
  ('asm -> LD pexpr COMMA A','asm',4,'p_LD_addr_reg','asmparse.py',1016),
  ('asm -> LD pexpr COMMA reg16','asm',4,'p_LD_addr_reg','asmparse.py',1017),
  ('asm -> LD pexpr COMMA SP','asm',4,'p_LD_addr_reg','asmparse.py',1018),
  ('asm -> LD A COMMA pexpr','asm',4,'p_LD_reg_addr','asmparse.py',1024),
  ('asm -> LD reg16 COMMA pexpr','asm',4,'p_LD_reg_addr','asmparse.py',1025),
  ('asm -> LD SP COMMA pexpr','asm',4,'p_LD_reg_addr','asmparse.py',1026),
  ('asm -> rotation reg8','asm',2,'p_ROTATE','asmparse.py',1032),
  ('asm -> rotation reg8_hl','asm',2,'p_ROTATE','asmparse.py',1033),
  ('asm -> rotation A','asm',2,'p_ROTATE','asmparse.py',1034),
  ('asm -> rotation reg8_I','asm',2,'p_ROTATE_ix','asmparse.py',1040),
  ('asm -> bitop expr COMMA A','asm',4,'p_BIT','asmparse.py',1046),
  ('asm -> bitop pexpr COMMA A','asm',4,'p_BIT','asmparse.py',1047),
  ('asm -> bitop expr COMMA reg8','asm',4,'p_BIT','asmparse.py',1048),
  ('asm -> bitop pexpr COMMA reg8','asm',4,'p_BIT','asmparse.py',1049),
  ('asm -> bitop expr COMMA reg8_hl','asm',4,'p_BIT','asmparse.py',1050),
  ('asm -> bitop pexpr COMMA reg8_hl','asm',4,'p_BIT','asmparse.py',1051),
  ('asm -> bitop expr COMMA reg8_I','asm',4,'p_BIT_ix','asmparse.py',1063),
  ('asm -> bitop pexpr COMMA reg8_I','asm',4,'p_BIT_ix','asmparse.py',1064),
  ('bitop -> BIT','bitop',1,'p_bitop','asmparse.py',1076),
  ('bitop -> RES','bitop',1,'p_bitop','asmparse.py',1077),
  ('bitop -> SET','bitop',1,'p_bitop','asmparse.py',1078),
  ('rotation -> RR','rotation',1,'p_rotation','asmparse.py',1084),
  ('rotation -> RL','rotation',1,'p_rotation','asmparse.py',1085),
  ('rotation -> RRC','rotation',1,'p_rotation','asmparse.py',1086),
  ('rotation -> RLC','rotation',1,'p_rotation','asmparse.py',1087),
  ('rotation -> SLA','rotation',1,'p_rotation','asmparse.py',1088),
  ('rotation -> SLL','rotation',1,'p_rotation','asmparse.py',1089),
  ('rotation -> SRA','rotation',1,'p_rotation','asmparse.py',1090),
  ('rotation -> SRL','rotation',1,'p_rotation','asmparse.py',1091),
  ('inc_reg -> SP','inc_reg',1,'p_reg_inc','asmparse.py',1097),
  ('inc_reg -> reg8','inc_reg',1,'p_reg_inc','asmparse.py',1098),
  ('inc_reg -> reg16','inc_reg',1,'p_reg_inc','asmparse.py',1099),
  ('inc_reg -> reg8_hl','inc_reg',1,'p_reg_inc','asmparse.py',1100),
  ('inc_reg -> A','inc_reg',1,'p_reg_inc','asmparse.py',1101),
  ('inc_reg -> reg8i','inc_reg',1,'p_reg_inc','asmparse.py',1102),
  ('reg8 -> H','reg8',1,'p_reg8','asmparse.py',1108),
  ('reg8 -> L','reg8',1,'p_reg8','asmparse.py',1109),
  ('reg8 -> regBCDE','reg8',1,'p_reg8','asmparse.py',1110),
  ('regBCDE -> B','regBCDE',1,'p_regBCDE','asmparse.py',1116),
  ('regBCDE -> C','regBCDE',1,'p_regBCDE','asmparse.py',1117),
  ('regBCDE -> D','regBCDE',1,'p_regBCDE','asmparse.py',1118),
  ('regBCDE -> E','regBCDE',1,'p_regBCDE','asmparse.py',1119),
  ('reg8i -> IXH','reg8i',1,'p_reg8i','asmparse.py',1125),
  ('reg8i -> IXL','reg8i',1,'p_reg8i','asmparse.py',1126),
  ('reg8i -> IYH','reg8i',1,'p_reg8i','asmparse.py',1127),
  ('reg8i -> IYL','reg8i',1,'p_reg8i','asmparse.py',1128),
  ('reg16 -> BC','reg16',1,'p_reg16','asmparse.py',1134),
  ('reg16 -> DE','reg16',1,'p_reg16','asmparse.py',1135),
  ('reg16 -> HL','reg16',1,'p_reg16','asmparse.py',1136),
  ('reg16 -> reg16i','reg16',1,'p_reg16','asmparse.py',1137),
  ('reg16i -> IX','reg16i',1,'p_reg16i','asmparse.py',1143),
  ('reg16i -> IY','reg16i',1,'p_reg16i','asmparse.py',1144),
  ('asm -> JP jp_flags COMMA expr','asm',4,'p_jp','asmparse.py',1150),
  ('asm -> JP jp_flags COMMA pexpr','asm',4,'p_jp','asmparse.py',1151),
  ('asm -> CALL jp_flags COMMA expr','asm',4,'p_jp','asmparse.py',1152),
  ('asm -> CALL jp_flags COMMA pexpr','asm',4,'p_jp','asmparse.py',1153),
  ('asm -> RET jp_flags','asm',2,'p_ret','asmparse.py',1159),
  ('jp_flags -> P','jp_flags',1,'p_jpflags_other','asmparse.py',1165),
  ('jp_flags -> M','jp_flags',1,'p_jpflags_other','asmparse.py',1166),
  ('jp_flags -> PO','jp_flags',1,'p_jpflags_other','asmparse.py',1167),
  ('jp_flags -> PE','jp_flags',1,'p_jpflags_other','asmparse.py',1168),
  ('jp_flags -> jr_flags','jp_flags',1,'p_jpflags_other','asmparse.py',1169),
  ('asm -> JR jr_flags COMMA expr','asm',4,'p_jr','asmparse.py',1175),
  ('asm -> JR jr_flags COMMA pexpr','asm',4,'p_jr','asmparse.py',1176),
  ('jr_flags -> Z','jr_flags',1,'p_jr_flags','asmparse.py',1183),
  ('jr_flags -> C','jr_flags',1,'p_jr_flags','asmparse.py',1184),
  ('jr_flags -> NZ','jr_flags',1,'p_jr_flags','asmparse.py',1185),
  ('jr_flags -> NC','jr_flags',1,'p_jr_flags','asmparse.py',1186),
  ('asm -> JP expr','asm',2,'p_jrjp','asmparse.py',1192),
  ('asm -> JR expr','asm',2,'p_jrjp','asmparse.py',1193),
  ('asm -> CALL expr','asm',2,'p_jrjp','asmparse.py',1194),
  ('asm -> DJNZ expr','asm',2,'p_jrjp','asmparse.py',1195),
  ('asm -> JP pexpr','asm',2,'p_jrjp','asmparse.py',1196),
  ('asm -> JR pexpr','asm',2,'p_jrjp','asmparse.py',1197),
  ('asm -> CALL pexpr','asm',2,'p_jrjp','asmparse.py',1198),
  ('asm -> DJNZ pexpr','asm',2,'p_jrjp','asmparse.py',1199),
  ('asm -> RST expr','asm',2,'p_rst','asmparse.py',1211),
  ('asm -> IM expr','asm',2,'p_im','asmparse.py',1224),
  ('asm -> IN A COMMA LP C RP','asm',6,'p_in','asmparse.py',1236),
  ('asm -> IN reg8 COMMA LP C RP','asm',6,'p_in','asmparse.py',1237),
  ('asm -> OUT LP C RP COMMA A','asm',6,'p_out','asmparse.py',1243),
  ('asm -> OUT LP C RP COMMA reg8','asm',6,'p_out','asmparse.py',1244),
  ('asm -> IN A COMMA pexpr','asm',4,'p_in_expr','asmparse.py',1250),
  ('asm -> OUT pexpr COMMA A','asm',4,'p_out_expr','asmparse.py',1256),
  ('asm -> NOP','asm',1,'p_single','asmparse.py',1262),
  ('asm -> EXX','asm',1,'p_single','asmparse.py',1263),
  ('asm -> CCF','asm',1,'p_single','asmparse.py',1264),
  ('asm -> SCF','asm',1,'p_single','asmparse.py',1265),
  ('asm -> LDIR','asm',1,'p_single','asmparse.py',1266),
  ('asm -> LDI','asm',1,'p_single','asmparse.py',1267),
  ('asm -> LDDR','asm',1,'p_single','asmparse.py',1268),
  ('asm -> LDD','asm',1,'p_single','asmparse.py',1269),
  ('asm -> CPIR','asm',1,'p_single','asmparse.py',1270),
  ('asm -> CPI','asm',1,'p_single','asmparse.py',1271),
  ('asm -> CPDR','asm',1,'p_single','asmparse.py',1272),
  ('asm -> CPD','asm',1,'p_single','asmparse.py',1273),
  ('asm -> DAA','asm',1,'p_single','asmparse.py',1274),
  ('asm -> NEG','asm',1,'p_single','asmparse.py',1275),
  ('asm -> CPL','asm',1,'p_single','asmparse.py',1276),
  ('asm -> HALT','asm',1,'p_single','asmparse.py',1277),
  ('asm -> EI','asm',1,'p_single','asmparse.py',1278),
  ('asm -> DI','asm',1,'p_single','asmparse.py',1279),
  ('asm -> OUTD','asm',1,'p_single','asmparse.py',1280),
  ('asm -> OUTI','asm',1,'p_single','asmparse.py',1281),
  ('asm -> OTDR','asm',1,'p_single','asmparse.py',1282),
  ('asm -> OTIR','asm',1,'p_single','asmparse.py',1283),
  ('asm -> IND','asm',1,'p_single','asmparse.py',1284),
  ('asm -> INI','asm',1,'p_single','asmparse.py',1285),
  ('asm -> INDR','asm',1,'p_single','asmparse.py',1286),
  ('asm -> INIR','asm',1,'p_single','asmparse.py',1287),
  ('asm -> RET','asm',1,'p_single','asmparse.py',1288),
  ('asm -> RETI','asm',1,'p_single','asmparse.py',1289),
  ('asm -> RETN','asm',1,'p_single','asmparse.py',1290),
  ('asm -> RLA','asm',1,'p_single','asmparse.py',1291),
  ('asm -> RLCA','asm',1,'p_single','asmparse.py',1292),
  ('asm -> RRA','asm',1,'p_single','asmparse.py',1293),
  ('asm -> RRCA','asm',1,'p_single','asmparse.py',1294),
  ('asm -> RLD','asm',1,'p_single','asmparse.py',1295),
  ('asm -> RRD','asm',1,'p_single','asmparse.py',1296),
  ('expr -> expr BAND expr','expr',3,'p_expr_div_expr','asmparse.py',1302),
  ('expr -> expr BOR expr','expr',3,'p_expr_div_expr','asmparse.py',1303),
  ('expr -> expr BXOR expr','expr',3,'p_expr_div_expr','asmparse.py',1304),
  ('expr -> expr PLUS expr','expr',3,'p_expr_div_expr','asmparse.py',1305),
  ('expr -> expr MINUS expr','expr',3,'p_expr_div_expr','asmparse.py',1306),
  ('expr -> expr MUL expr','expr',3,'p_expr_div_expr','asmparse.py',1307),
  ('expr -> expr DIV expr','expr',3,'p_expr_div_expr','asmparse.py',1308),
  ('expr -> expr MOD expr','expr',3,'p_expr_div_expr','asmparse.py',1309),
  ('expr -> expr POW expr','expr',3,'p_expr_div_expr','asmparse.py',1310),
  ('expr -> expr LSHIFT expr','expr',3,'p_expr_div_expr','asmparse.py',1311),
  ('expr -> expr RSHIFT expr','expr',3,'p_expr_div_expr','asmparse.py',1312),
  ('expr -> pexpr BAND expr','expr',3,'p_expr_div_expr','asmparse.py',1313),
  ('expr -> pexpr BOR expr','expr',3,'p_expr_div_expr','asmparse.py',1314),
  ('expr -> pexpr BXOR expr','expr',3,'p_expr_div_expr','asmparse.py',1315),
  ('expr -> pexpr PLUS expr','expr',3,'p_expr_div_expr','asmparse.py',1316),
  ('expr -> pexpr MINUS expr','expr',3,'p_expr_div_expr','asmparse.py',1317),
  ('expr -> pexpr MUL expr','expr',3,'p_expr_div_expr','asmparse.py',1318),
  ('expr -> pexpr DIV expr','expr',3,'p_expr_div_expr','asmparse.py',1319),
  ('expr -> pexpr MOD expr','expr',3,'p_expr_div_expr','asmparse.py',1320),
  ('expr -> pexpr POW expr','expr',3,'p_expr_div_expr','asmparse.py',1321),
  ('expr -> pexpr LSHIFT expr','expr',3,'p_expr_div_expr','asmparse.py',1322),
  ('expr -> pexpr RSHIFT expr','expr',3,'p_expr_div_expr','asmparse.py',1323),
  ('expr -> expr BAND pexpr','expr',3,'p_expr_div_expr','asmparse.py',1324),
  ('expr -> expr BOR pexpr','expr',3,'p_expr_div_expr','asmparse.py',1325),
  ('expr -> expr BXOR pexpr','expr',3,'p_expr_div_expr','asmparse.py',1326),
  ('expr -> expr PLUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1327),
  ('expr -> expr MINUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1328),
  ('expr -> expr MUL pexpr','expr',3,'p_expr_div_expr','asmparse.py',1329),
  ('expr -> expr DIV pexpr','expr',3,'p_expr_div_expr','asmparse.py',1330),
  ('expr -> expr MOD pexpr','expr',3,'p_expr_div_expr','asmparse.py',1331),
  ('expr -> expr POW pexpr','expr',3,'p_expr_div_expr','asmparse.py',1332),
  ('expr -> expr LSHIFT pexpr','expr',3,'p_expr_div_expr','asmparse.py',1333),
  ('expr -> expr RSHIFT pexpr','expr',3,'p_expr_div_expr','asmparse.py',1334),
  ('expr -> pexpr BAND pexpr','expr',3,'p_expr_div_expr','asmparse.py',1335),
  ('expr -> pexpr BOR pexpr','expr',3,'p_expr_div_expr','asmparse.py',1336),
  ('expr -> pexpr BXOR pexpr','expr',3,'p_expr_div_expr','asmparse.py',1337),
  ('expr -> pexpr PLUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1338),
  ('expr -> pexpr MINUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1339),
  ('expr -> pexpr MUL pexpr','expr',3,'p_expr_div_expr','asmparse.py',1340),
  ('expr -> pexpr DIV pexpr','expr',3,'p_expr_div_expr','asmparse.py',1341),
  ('expr -> pexpr MOD pexpr','expr',3,'p_expr_div_expr','asmparse.py',1342),
  ('expr -> pexpr POW pexpr','expr',3,'p_expr_div_expr','asmparse.py',1343),
  ('expr -> pexpr LSHIFT pexpr','expr',3,'p_expr_div_expr','asmparse.py',1344),
  ('expr -> pexpr RSHIFT pexpr','expr',3,'p_expr_div_expr','asmparse.py',1345),
  ('pexpr -> LP expr RP','pexpr',3,'p_expr_lprp','asmparse.py',1351),
  ('expr -> MINUS expr','expr',2,'p_expr_uminus','asmparse.py',1357),
  ('expr -> INTEGER','expr',1,'p_expr_int','asmparse.py',1363),
  ('expr -> ID','expr',1,'p_expr_label','asmparse.py',1369),
  ('expr -> LPP expr RPP','expr',3,'p_expr_paren','asmparse.py',1375),
  ('expr -> ADDR','expr',1,'p_expr_addr','asmparse.py',1381),
  ('line -> preproc_line','line',1,'p_preprocessor_line','asmparse.py',1389),
  ('preproc_line -> _LINE INTEGER','preproc_line',2,'p_preprocessor_line_line','asmparse.py',1395),
  ('preproc_line -> _LINE INTEGER STRING','preproc_line',3,'p_preprocessor_line_line_file','asmparse.py',1401),
  ('preproc_line -> _INIT ID','preproc_line',2,'p_preproc_line_init','asmparse.py',1408),
]
