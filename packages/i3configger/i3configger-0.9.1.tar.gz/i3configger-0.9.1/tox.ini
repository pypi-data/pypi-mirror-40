[tox]
envlist = lint,test

[flake8]
max_line_length = 89
exclude = .eggs,.tox,.cache,inotify_simple.py,__scratchpad.py

[pytest]
addopts = -lvv
xfail_strict = True

[testenv]
basepython = python3.7
usedevelop = True
extras =
    lint: lint
    test: test
    docs: docs

[testenv:i3configger]
description = run i3configger - e.g. `tox -e i3configger -- --daemon`
commands = i3configger {posargs}

[testenv:lint]
description = run pre-commit fixes and checks
commands =
    pre-commit run --all-files
    python -c 'print("hint: run {envdir}/bin/pre-commit install to add pre-commit hook")'

[testenv:test]
description = run tests with pytest
commands = pytest tests

[testenv:release]
description = release to PyPI
extras = release
commands = python {toxinidir}/release.py {posargs}

[testenv:docs-auto]
envdir = {toxworkdir}/docs
description = start a reloading server for the docs
commands =
    mkdocs build --clean
    python -c 'print("### Start local server. Press Control+C to stop ###")'
    mkdocs serve -a localhost:8080

[testenv:docs-clean]
envdir = {toxworkdir}/docs
description = remove documentation build folder
skip_install = True
whitelist_externals = rm
commands = rm -rf {envdir}/build

[testenv:docs-deploy]
envdir = {toxworkdir}/docs
description = push the docs online
commands = mkdocs gh-deploy --clean

[testenv:docs-deploy-force]
envdir = {toxworkdir}/docs
description = push the docs online (with extra ooomph!)
whitelist_externals = git
commands =
    - git branch -D gh-pages
    - git push origin --delete gh-pages
    mkdocs gh-deploy --clean

[testenv:dev]
description = dev env at {envpython}
extras =
    lint
    test
    docs
    release
