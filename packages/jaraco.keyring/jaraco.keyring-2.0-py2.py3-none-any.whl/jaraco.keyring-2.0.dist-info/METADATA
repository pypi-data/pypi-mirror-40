Metadata-Version: 2.1
Name: jaraco.keyring
Version: 2.0
Summary: Remote keyring over SSH
Home-page: https://github.com/jaraco/jaraco.keyring
Author: Jason R. Coombs
Author-email: jaraco@jaraco.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.6
Requires-Dist: requests-unixsocket
Requires-Dist: cherrypy
Requires-Dist: keyring
Provides-Extra: docs
Requires-Dist: sphinx ; extra == 'docs'
Requires-Dist: jaraco.packaging (>=3.2) ; extra == 'docs'
Requires-Dist: rst.linker (>=1.9) ; extra == 'docs'
Provides-Extra: testing
Requires-Dist: pytest (!=3.7.3,>=3.5) ; extra == 'testing'
Requires-Dist: pytest-checkdocs ; extra == 'testing'
Requires-Dist: pytest-flake8 ; extra == 'testing'

.. image:: https://img.shields.io/pypi/v/skeleton.svg
   :target: https://pypi.org/project/skeleton

.. image:: https://img.shields.io/pypi/pyversions/skeleton.svg

.. image:: https://img.shields.io/travis/jaraco/skeleton/master.svg
   :target: https://travis-ci.org/jaraco/skeleton

.. .. image:: https://img.shields.io/appveyor/ci/jaraco/skeleton/master.svg
..    :target: https://ci.appveyor.com/project/jaraco/skeleton/branch/master

.. .. image:: https://readthedocs.org/projects/skeleton/badge/?version=latest
..    :target: https://skeleton.readthedocs.io/en/latest/?badge=latest

Remote Agent Keyring
--------------------

Implements a remote agent keyring for use over SSH connections.

Requires OpenSSH 6.7.

To use, on the host machine, install jaraco.keyring and invoke
the server::

    python -m jaraco.keyring.server

That starts a server listening only on localhost:4273.

Then, connect to the remote host and forward the traffic back to
the keyring server::

    ssh -R /tmp/keyring.sock:localhost:4273 remote_host

This command creates a unix domain socket at /tmp/keyring.sock
which only that user can access.

Then, on that host, configure keyring to use the remote agent
backend. For example,

    keyring -b jaraco.keyring.RemoteAgent get SERVICE USERNAME

The remote agent backend will request the password over the
tunnel, where the server will request the password using the
default configuration.


