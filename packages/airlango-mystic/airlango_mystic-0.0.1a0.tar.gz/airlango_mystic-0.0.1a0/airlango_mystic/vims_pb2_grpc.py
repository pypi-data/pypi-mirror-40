# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import vims_pb2 as vims__pb2


class ControlServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetVehicleName = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetVehicleName',
        request_serializer=vims__pb2.SetVehicleNameRequest.SerializeToString,
        response_deserializer=vims__pb2.SetVehicleNameResponse.FromString,
        )
    self.TakeOff = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/TakeOff',
        request_serializer=vims__pb2.TakeOffRequest.SerializeToString,
        response_deserializer=vims__pb2.TakeOffResponse.FromString,
        )
    self.Land = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/Land',
        request_serializer=vims__pb2.LandRequest.SerializeToString,
        response_deserializer=vims__pb2.LandResponse.FromString,
        )
    self.StartPreview = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/StartPreview',
        request_serializer=vims__pb2.StartPreviewRequest.SerializeToString,
        response_deserializer=vims__pb2.StartPreviewResponse.FromString,
        )
    self.StopPreview = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/StopPreview',
        request_serializer=vims__pb2.StopPreviewRequest.SerializeToString,
        response_deserializer=vims__pb2.StopPreviewResponse.FromString,
        )
    self.StartRecording = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/StartRecording',
        request_serializer=vims__pb2.StartRecordingRequest.SerializeToString,
        response_deserializer=vims__pb2.StartRecordingResponse.FromString,
        )
    self.StopRecording = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/StopRecording',
        request_serializer=vims__pb2.StopRecordingRequest.SerializeToString,
        response_deserializer=vims__pb2.StopRecordingResponse.FromString,
        )
    self.TakePicture = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/TakePicture',
        request_serializer=vims__pb2.TakePictureRequest.SerializeToString,
        response_deserializer=vims__pb2.TakePictureResponse.FromString,
        )
    self.SetSnapshotModeSingle = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetSnapshotModeSingle',
        request_serializer=vims__pb2.SetSnapshotModeSingleRequest.SerializeToString,
        response_deserializer=vims__pb2.SetSnapshotModeSingleResponse.FromString,
        )
    self.SetSnapshotModeBurst = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetSnapshotModeBurst',
        request_serializer=vims__pb2.SetSnapshotModeBurstRequest.SerializeToString,
        response_deserializer=vims__pb2.SetSnapshotModeBurstResponse.FromString,
        )
    self.SetSnapshotModeTimed = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetSnapshotModeTimed',
        request_serializer=vims__pb2.SetSnapshotModeTimedRequest.SerializeToString,
        response_deserializer=vims__pb2.SetSnapshotModeTimedResponse.FromString,
        )
    self.SetSnapshotModeHdr = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetSnapshotModeHdr',
        request_serializer=vims__pb2.SetSnapshotModeHdrRequest.SerializeToString,
        response_deserializer=vims__pb2.SetSnapshotModeHdrResponse.FromString,
        )
    self.SetExposureMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetExposureMode',
        request_serializer=vims__pb2.SetExposureModeRequest.SerializeToString,
        response_deserializer=vims__pb2.SetExposureModeResponse.FromString,
        )
    self.SetIsoMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetIsoMode',
        request_serializer=vims__pb2.SetIsoModeRequest.SerializeToString,
        response_deserializer=vims__pb2.SetIsoModeResponse.FromString,
        )
    self.SetExposureValue = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetExposureValue',
        request_serializer=vims__pb2.SetExposureValueRequest.SerializeToString,
        response_deserializer=vims__pb2.SetExposureValueResponse.FromString,
        )
    self.SetShutterSpeed = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetShutterSpeed',
        request_serializer=vims__pb2.SetShutterSpeedRequest.SerializeToString,
        response_deserializer=vims__pb2.SetShutterSpeedResponse.FromString,
        )
    self.SetPictureResolution = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetPictureResolution',
        request_serializer=vims__pb2.SetPictureResolutionRequest.SerializeToString,
        response_deserializer=vims__pb2.SetPictureResolutionResponse.FromString,
        )
    self.SetPictureFormat = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetPictureFormat',
        request_serializer=vims__pb2.SetPictureFormatRequest.SerializeToString,
        response_deserializer=vims__pb2.SetPictureFormatResponse.FromString,
        )
    self.SetWhiteBalanceMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetWhiteBalanceMode',
        request_serializer=vims__pb2.SetWhiteBalanceModeRequest.SerializeToString,
        response_deserializer=vims__pb2.SetWhiteBalanceModeResponse.FromString,
        )
    self.SetWhiteBalanceCustomValue = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetWhiteBalanceCustomValue',
        request_serializer=vims__pb2.SetWhiteBalanceCustomValueRequest.SerializeToString,
        response_deserializer=vims__pb2.SetWhiteBalanceCustomValueResponse.FromString,
        )
    self.ResetCameraSettings = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/ResetCameraSettings',
        request_serializer=vims__pb2.ResetCameraSettingsRequest.SerializeToString,
        response_deserializer=vims__pb2.ResetCameraSettingsResponse.FromString,
        )
    self.SetPreviewResolutionFps = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetPreviewResolutionFps',
        request_serializer=vims__pb2.SetPreviewResolutionFpsRequest.SerializeToString,
        response_deserializer=vims__pb2.SetPreviewResolutionFpsResponse.FromString,
        )
    self.SetRecordingResolutionFps = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetRecordingResolutionFps',
        request_serializer=vims__pb2.SetRecordingResolutionFpsRequest.SerializeToString,
        response_deserializer=vims__pb2.SetRecordingResolutionFpsResponse.FromString,
        )
    self.SetPreviewCodec = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetPreviewCodec',
        request_serializer=vims__pb2.SetPreviewCodecRequest.SerializeToString,
        response_deserializer=vims__pb2.SetPreviewCodecResponse.FromString,
        )
    self.EnterTrackerMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/EnterTrackerMode',
        request_serializer=vims__pb2.TrackerModeRequest.SerializeToString,
        response_deserializer=vims__pb2.TrackerModeResponse.FromString,
        )
    self.SetTrackerTarget = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetTrackerTarget',
        request_serializer=vims__pb2.SetTrackerTargetRequest.SerializeToString,
        response_deserializer=vims__pb2.SetTrackerTargetResponse.FromString,
        )
    self.LeaveTrackerMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/LeaveTrackerMode',
        request_serializer=vims__pb2.TrackerModeRequest.SerializeToString,
        response_deserializer=vims__pb2.TrackerModeResponse.FromString,
        )
    self.EnterGestureMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/EnterGestureMode',
        request_serializer=vims__pb2.GestureModeRequest.SerializeToString,
        response_deserializer=vims__pb2.GestureModeResponse.FromString,
        )
    self.SetGestureTarget = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetGestureTarget',
        request_serializer=vims__pb2.SetGestureTargetRequest.SerializeToString,
        response_deserializer=vims__pb2.SetGestureTargetResponse.FromString,
        )
    self.LeaveGestureMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/LeaveGestureMode',
        request_serializer=vims__pb2.GestureModeRequest.SerializeToString,
        response_deserializer=vims__pb2.GestureModeResponse.FromString,
        )
    self.EnterTripodMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/EnterTripodMode',
        request_serializer=vims__pb2.TripodModeRequest.SerializeToString,
        response_deserializer=vims__pb2.TripodModeResponse.FromString,
        )
    self.LeaveTripodMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/LeaveTripodMode',
        request_serializer=vims__pb2.TripodModeRequest.SerializeToString,
        response_deserializer=vims__pb2.TripodModeResponse.FromString,
        )
    self.EnterTemplatedVideoMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/EnterTemplatedVideoMode',
        request_serializer=vims__pb2.TemplatedVideoModeRequest.SerializeToString,
        response_deserializer=vims__pb2.TemplatedVideoModeResponse.FromString,
        )
    self.LeaveTemplatedVideoMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/LeaveTemplatedVideoMode',
        request_serializer=vims__pb2.TemplatedVideoModeRequest.SerializeToString,
        response_deserializer=vims__pb2.TemplatedVideoModeResponse.FromString,
        )
    self.EnterTemplatedPhotoMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/EnterTemplatedPhotoMode',
        request_serializer=vims__pb2.TemplatedPhotoModeRequest.SerializeToString,
        response_deserializer=vims__pb2.TemplatedPhotoModeResponse.FromString,
        )
    self.SetTemplatedPhotoTarget = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetTemplatedPhotoTarget',
        request_serializer=vims__pb2.SetTemplatedPhotoTargetRequest.SerializeToString,
        response_deserializer=vims__pb2.SetTemplatedPhotoTargetResponse.FromString,
        )
    self.LeaveTemplatedPhotoMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/LeaveTemplatedPhotoMode',
        request_serializer=vims__pb2.TemplatedPhotoModeRequest.SerializeToString,
        response_deserializer=vims__pb2.TemplatedPhotoModeResponse.FromString,
        )
    self.EnterSafariSnapshotMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/EnterSafariSnapshotMode',
        request_serializer=vims__pb2.SafariSnapshotModeRequest.SerializeToString,
        response_deserializer=vims__pb2.SafariSnapshotModeResponse.FromString,
        )
    self.LeaveSafariSnapshotMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/LeaveSafariSnapshotMode',
        request_serializer=vims__pb2.SafariSnapshotModeRequest.SerializeToString,
        response_deserializer=vims__pb2.SafariSnapshotModeResponse.FromString,
        )
    self.ReturnToHome = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/ReturnToHome',
        request_serializer=vims__pb2.ReturnToHomeRequest.SerializeToString,
        response_deserializer=vims__pb2.ReturnToHomeResponse.FromString,
        )
    self.CancelReturnToHome = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/CancelReturnToHome',
        request_serializer=vims__pb2.CancelReturnToHomeRequest.SerializeToString,
        response_deserializer=vims__pb2.CancelReturnToHomeResponse.FromString,
        )
    self.EnterCustomMode = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/EnterCustomMode',
        request_serializer=vims__pb2.CustomModeRequest.SerializeToString,
        response_deserializer=vims__pb2.CustomModeResponse.FromString,
        )
    self.SendCustomMotion = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SendCustomMotion',
        request_serializer=vims__pb2.CustomMotionRequest.SerializeToString,
        response_deserializer=vims__pb2.CustomMotionResponse.FromString,
        )
    self.GetCustomDroneData = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/GetCustomDroneData',
        request_serializer=vims__pb2.CustomDroneDataRequest.SerializeToString,
        response_deserializer=vims__pb2.CustomDroneDataResponse.FromString,
        )
    self.GetCustomObstacleInfo = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/GetCustomObstacleInfo',
        request_serializer=vims__pb2.CustomObstacleInfoRequest.SerializeToString,
        response_deserializer=vims__pb2.CustomObstacleInfoResponse.FromString,
        )
    self.GetCustomObjectInfo = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/GetCustomObjectInfo',
        request_serializer=vims__pb2.CustomObjectInfoRequest.SerializeToString,
        response_deserializer=vims__pb2.CustomObjectInfoResponse.FromString,
        )
    self.GetCustomArucoInfo = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/GetCustomArucoInfo',
        request_serializer=vims__pb2.CustomArucoInfoRequest.SerializeToString,
        response_deserializer=vims__pb2.CustomArucoInfoResponse.FromString,
        )
    self.StartStereoCalibration = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/StartStereoCalibration',
        request_serializer=vims__pb2.StartStereoCalibrationRequest.SerializeToString,
        response_deserializer=vims__pb2.StartStereoCalibrationResponse.FromString,
        )
    self.CancelStereoCalibration = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/CancelStereoCalibration',
        request_serializer=vims__pb2.CancelStereoCalibrationRequest.SerializeToString,
        response_deserializer=vims__pb2.CancelStereoCalibrationResponse.FromString,
        )
    self.StartSensorCalibration = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/StartSensorCalibration',
        request_serializer=vims__pb2.StartSensorCalibrationRequest.SerializeToString,
        response_deserializer=vims__pb2.StartSensorCalibrationResponse.FromString,
        )
    self.CancelSensorCalibration = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/CancelSensorCalibration',
        request_serializer=vims__pb2.CancelSensorCalibrationRequest.SerializeToString,
        response_deserializer=vims__pb2.CancelSensorCalibrationResponse.FromString,
        )
    self.SyncSettings = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SyncSettings',
        request_serializer=vims__pb2.SyncSettingsRequest.SerializeToString,
        response_deserializer=vims__pb2.SyncSettingsResponse.FromString,
        )
    self.SetVehicleLimit = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetVehicleLimit',
        request_serializer=vims__pb2.SetVehicleLimitRequest.SerializeToString,
        response_deserializer=vims__pb2.SetVehicleLimitResponse.FromString,
        )
    self.SetHomePosition = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetHomePosition',
        request_serializer=vims__pb2.SetHomePositionRequest.SerializeToString,
        response_deserializer=vims__pb2.SetHomePositionResponse.FromString,
        )
    self.SetSystemTime = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetSystemTime',
        request_serializer=vims__pb2.SetSystemTimeRequest.SerializeToString,
        response_deserializer=vims__pb2.SetSystemTimeResponse.FromString,
        )
    self.SetReturnToHomeBatteryThreshold = channel.unary_unary(
        '/airlango.butterfly.vims.ControlService/SetReturnToHomeBatteryThreshold',
        request_serializer=vims__pb2.SetReturnToHomeBatteryThresholdRequest.SerializeToString,
        response_deserializer=vims__pb2.SetReturnToHomeBatteryThresholdResponse.FromString,
        )
    self.UploadFile = channel.stream_unary(
        '/airlango.butterfly.vims.ControlService/UploadFile',
        request_serializer=vims__pb2.UploadFileRequest.SerializeToString,
        response_deserializer=vims__pb2.UploadFileResponse.FromString,
        )


class ControlServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SetVehicleName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TakeOff(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Land(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartPreview(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopPreview(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartRecording(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopRecording(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TakePicture(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetSnapshotModeSingle(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetSnapshotModeBurst(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetSnapshotModeTimed(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetSnapshotModeHdr(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetExposureMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetIsoMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetExposureValue(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetShutterSpeed(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetPictureResolution(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetPictureFormat(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetWhiteBalanceMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetWhiteBalanceCustomValue(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ResetCameraSettings(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetPreviewResolutionFps(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetRecordingResolutionFps(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetPreviewCodec(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EnterTrackerMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetTrackerTarget(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LeaveTrackerMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EnterGestureMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetGestureTarget(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LeaveGestureMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EnterTripodMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LeaveTripodMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EnterTemplatedVideoMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LeaveTemplatedVideoMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EnterTemplatedPhotoMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetTemplatedPhotoTarget(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LeaveTemplatedPhotoMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EnterSafariSnapshotMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LeaveSafariSnapshotMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReturnToHome(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CancelReturnToHome(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EnterCustomMode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendCustomMotion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCustomDroneData(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCustomObstacleInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCustomObjectInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCustomArucoInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartStereoCalibration(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CancelStereoCalibration(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartSensorCalibration(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CancelSensorCalibration(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SyncSettings(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetVehicleLimit(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetHomePosition(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetSystemTime(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetReturnToHomeBatteryThreshold(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UploadFile(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ControlServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetVehicleName': grpc.unary_unary_rpc_method_handler(
          servicer.SetVehicleName,
          request_deserializer=vims__pb2.SetVehicleNameRequest.FromString,
          response_serializer=vims__pb2.SetVehicleNameResponse.SerializeToString,
      ),
      'TakeOff': grpc.unary_unary_rpc_method_handler(
          servicer.TakeOff,
          request_deserializer=vims__pb2.TakeOffRequest.FromString,
          response_serializer=vims__pb2.TakeOffResponse.SerializeToString,
      ),
      'Land': grpc.unary_unary_rpc_method_handler(
          servicer.Land,
          request_deserializer=vims__pb2.LandRequest.FromString,
          response_serializer=vims__pb2.LandResponse.SerializeToString,
      ),
      'StartPreview': grpc.unary_unary_rpc_method_handler(
          servicer.StartPreview,
          request_deserializer=vims__pb2.StartPreviewRequest.FromString,
          response_serializer=vims__pb2.StartPreviewResponse.SerializeToString,
      ),
      'StopPreview': grpc.unary_unary_rpc_method_handler(
          servicer.StopPreview,
          request_deserializer=vims__pb2.StopPreviewRequest.FromString,
          response_serializer=vims__pb2.StopPreviewResponse.SerializeToString,
      ),
      'StartRecording': grpc.unary_unary_rpc_method_handler(
          servicer.StartRecording,
          request_deserializer=vims__pb2.StartRecordingRequest.FromString,
          response_serializer=vims__pb2.StartRecordingResponse.SerializeToString,
      ),
      'StopRecording': grpc.unary_unary_rpc_method_handler(
          servicer.StopRecording,
          request_deserializer=vims__pb2.StopRecordingRequest.FromString,
          response_serializer=vims__pb2.StopRecordingResponse.SerializeToString,
      ),
      'TakePicture': grpc.unary_unary_rpc_method_handler(
          servicer.TakePicture,
          request_deserializer=vims__pb2.TakePictureRequest.FromString,
          response_serializer=vims__pb2.TakePictureResponse.SerializeToString,
      ),
      'SetSnapshotModeSingle': grpc.unary_unary_rpc_method_handler(
          servicer.SetSnapshotModeSingle,
          request_deserializer=vims__pb2.SetSnapshotModeSingleRequest.FromString,
          response_serializer=vims__pb2.SetSnapshotModeSingleResponse.SerializeToString,
      ),
      'SetSnapshotModeBurst': grpc.unary_unary_rpc_method_handler(
          servicer.SetSnapshotModeBurst,
          request_deserializer=vims__pb2.SetSnapshotModeBurstRequest.FromString,
          response_serializer=vims__pb2.SetSnapshotModeBurstResponse.SerializeToString,
      ),
      'SetSnapshotModeTimed': grpc.unary_unary_rpc_method_handler(
          servicer.SetSnapshotModeTimed,
          request_deserializer=vims__pb2.SetSnapshotModeTimedRequest.FromString,
          response_serializer=vims__pb2.SetSnapshotModeTimedResponse.SerializeToString,
      ),
      'SetSnapshotModeHdr': grpc.unary_unary_rpc_method_handler(
          servicer.SetSnapshotModeHdr,
          request_deserializer=vims__pb2.SetSnapshotModeHdrRequest.FromString,
          response_serializer=vims__pb2.SetSnapshotModeHdrResponse.SerializeToString,
      ),
      'SetExposureMode': grpc.unary_unary_rpc_method_handler(
          servicer.SetExposureMode,
          request_deserializer=vims__pb2.SetExposureModeRequest.FromString,
          response_serializer=vims__pb2.SetExposureModeResponse.SerializeToString,
      ),
      'SetIsoMode': grpc.unary_unary_rpc_method_handler(
          servicer.SetIsoMode,
          request_deserializer=vims__pb2.SetIsoModeRequest.FromString,
          response_serializer=vims__pb2.SetIsoModeResponse.SerializeToString,
      ),
      'SetExposureValue': grpc.unary_unary_rpc_method_handler(
          servicer.SetExposureValue,
          request_deserializer=vims__pb2.SetExposureValueRequest.FromString,
          response_serializer=vims__pb2.SetExposureValueResponse.SerializeToString,
      ),
      'SetShutterSpeed': grpc.unary_unary_rpc_method_handler(
          servicer.SetShutterSpeed,
          request_deserializer=vims__pb2.SetShutterSpeedRequest.FromString,
          response_serializer=vims__pb2.SetShutterSpeedResponse.SerializeToString,
      ),
      'SetPictureResolution': grpc.unary_unary_rpc_method_handler(
          servicer.SetPictureResolution,
          request_deserializer=vims__pb2.SetPictureResolutionRequest.FromString,
          response_serializer=vims__pb2.SetPictureResolutionResponse.SerializeToString,
      ),
      'SetPictureFormat': grpc.unary_unary_rpc_method_handler(
          servicer.SetPictureFormat,
          request_deserializer=vims__pb2.SetPictureFormatRequest.FromString,
          response_serializer=vims__pb2.SetPictureFormatResponse.SerializeToString,
      ),
      'SetWhiteBalanceMode': grpc.unary_unary_rpc_method_handler(
          servicer.SetWhiteBalanceMode,
          request_deserializer=vims__pb2.SetWhiteBalanceModeRequest.FromString,
          response_serializer=vims__pb2.SetWhiteBalanceModeResponse.SerializeToString,
      ),
      'SetWhiteBalanceCustomValue': grpc.unary_unary_rpc_method_handler(
          servicer.SetWhiteBalanceCustomValue,
          request_deserializer=vims__pb2.SetWhiteBalanceCustomValueRequest.FromString,
          response_serializer=vims__pb2.SetWhiteBalanceCustomValueResponse.SerializeToString,
      ),
      'ResetCameraSettings': grpc.unary_unary_rpc_method_handler(
          servicer.ResetCameraSettings,
          request_deserializer=vims__pb2.ResetCameraSettingsRequest.FromString,
          response_serializer=vims__pb2.ResetCameraSettingsResponse.SerializeToString,
      ),
      'SetPreviewResolutionFps': grpc.unary_unary_rpc_method_handler(
          servicer.SetPreviewResolutionFps,
          request_deserializer=vims__pb2.SetPreviewResolutionFpsRequest.FromString,
          response_serializer=vims__pb2.SetPreviewResolutionFpsResponse.SerializeToString,
      ),
      'SetRecordingResolutionFps': grpc.unary_unary_rpc_method_handler(
          servicer.SetRecordingResolutionFps,
          request_deserializer=vims__pb2.SetRecordingResolutionFpsRequest.FromString,
          response_serializer=vims__pb2.SetRecordingResolutionFpsResponse.SerializeToString,
      ),
      'SetPreviewCodec': grpc.unary_unary_rpc_method_handler(
          servicer.SetPreviewCodec,
          request_deserializer=vims__pb2.SetPreviewCodecRequest.FromString,
          response_serializer=vims__pb2.SetPreviewCodecResponse.SerializeToString,
      ),
      'EnterTrackerMode': grpc.unary_unary_rpc_method_handler(
          servicer.EnterTrackerMode,
          request_deserializer=vims__pb2.TrackerModeRequest.FromString,
          response_serializer=vims__pb2.TrackerModeResponse.SerializeToString,
      ),
      'SetTrackerTarget': grpc.unary_unary_rpc_method_handler(
          servicer.SetTrackerTarget,
          request_deserializer=vims__pb2.SetTrackerTargetRequest.FromString,
          response_serializer=vims__pb2.SetTrackerTargetResponse.SerializeToString,
      ),
      'LeaveTrackerMode': grpc.unary_unary_rpc_method_handler(
          servicer.LeaveTrackerMode,
          request_deserializer=vims__pb2.TrackerModeRequest.FromString,
          response_serializer=vims__pb2.TrackerModeResponse.SerializeToString,
      ),
      'EnterGestureMode': grpc.unary_unary_rpc_method_handler(
          servicer.EnterGestureMode,
          request_deserializer=vims__pb2.GestureModeRequest.FromString,
          response_serializer=vims__pb2.GestureModeResponse.SerializeToString,
      ),
      'SetGestureTarget': grpc.unary_unary_rpc_method_handler(
          servicer.SetGestureTarget,
          request_deserializer=vims__pb2.SetGestureTargetRequest.FromString,
          response_serializer=vims__pb2.SetGestureTargetResponse.SerializeToString,
      ),
      'LeaveGestureMode': grpc.unary_unary_rpc_method_handler(
          servicer.LeaveGestureMode,
          request_deserializer=vims__pb2.GestureModeRequest.FromString,
          response_serializer=vims__pb2.GestureModeResponse.SerializeToString,
      ),
      'EnterTripodMode': grpc.unary_unary_rpc_method_handler(
          servicer.EnterTripodMode,
          request_deserializer=vims__pb2.TripodModeRequest.FromString,
          response_serializer=vims__pb2.TripodModeResponse.SerializeToString,
      ),
      'LeaveTripodMode': grpc.unary_unary_rpc_method_handler(
          servicer.LeaveTripodMode,
          request_deserializer=vims__pb2.TripodModeRequest.FromString,
          response_serializer=vims__pb2.TripodModeResponse.SerializeToString,
      ),
      'EnterTemplatedVideoMode': grpc.unary_unary_rpc_method_handler(
          servicer.EnterTemplatedVideoMode,
          request_deserializer=vims__pb2.TemplatedVideoModeRequest.FromString,
          response_serializer=vims__pb2.TemplatedVideoModeResponse.SerializeToString,
      ),
      'LeaveTemplatedVideoMode': grpc.unary_unary_rpc_method_handler(
          servicer.LeaveTemplatedVideoMode,
          request_deserializer=vims__pb2.TemplatedVideoModeRequest.FromString,
          response_serializer=vims__pb2.TemplatedVideoModeResponse.SerializeToString,
      ),
      'EnterTemplatedPhotoMode': grpc.unary_unary_rpc_method_handler(
          servicer.EnterTemplatedPhotoMode,
          request_deserializer=vims__pb2.TemplatedPhotoModeRequest.FromString,
          response_serializer=vims__pb2.TemplatedPhotoModeResponse.SerializeToString,
      ),
      'SetTemplatedPhotoTarget': grpc.unary_unary_rpc_method_handler(
          servicer.SetTemplatedPhotoTarget,
          request_deserializer=vims__pb2.SetTemplatedPhotoTargetRequest.FromString,
          response_serializer=vims__pb2.SetTemplatedPhotoTargetResponse.SerializeToString,
      ),
      'LeaveTemplatedPhotoMode': grpc.unary_unary_rpc_method_handler(
          servicer.LeaveTemplatedPhotoMode,
          request_deserializer=vims__pb2.TemplatedPhotoModeRequest.FromString,
          response_serializer=vims__pb2.TemplatedPhotoModeResponse.SerializeToString,
      ),
      'EnterSafariSnapshotMode': grpc.unary_unary_rpc_method_handler(
          servicer.EnterSafariSnapshotMode,
          request_deserializer=vims__pb2.SafariSnapshotModeRequest.FromString,
          response_serializer=vims__pb2.SafariSnapshotModeResponse.SerializeToString,
      ),
      'LeaveSafariSnapshotMode': grpc.unary_unary_rpc_method_handler(
          servicer.LeaveSafariSnapshotMode,
          request_deserializer=vims__pb2.SafariSnapshotModeRequest.FromString,
          response_serializer=vims__pb2.SafariSnapshotModeResponse.SerializeToString,
      ),
      'ReturnToHome': grpc.unary_unary_rpc_method_handler(
          servicer.ReturnToHome,
          request_deserializer=vims__pb2.ReturnToHomeRequest.FromString,
          response_serializer=vims__pb2.ReturnToHomeResponse.SerializeToString,
      ),
      'CancelReturnToHome': grpc.unary_unary_rpc_method_handler(
          servicer.CancelReturnToHome,
          request_deserializer=vims__pb2.CancelReturnToHomeRequest.FromString,
          response_serializer=vims__pb2.CancelReturnToHomeResponse.SerializeToString,
      ),
      'EnterCustomMode': grpc.unary_unary_rpc_method_handler(
          servicer.EnterCustomMode,
          request_deserializer=vims__pb2.CustomModeRequest.FromString,
          response_serializer=vims__pb2.CustomModeResponse.SerializeToString,
      ),
      'SendCustomMotion': grpc.unary_unary_rpc_method_handler(
          servicer.SendCustomMotion,
          request_deserializer=vims__pb2.CustomMotionRequest.FromString,
          response_serializer=vims__pb2.CustomMotionResponse.SerializeToString,
      ),
      'GetCustomDroneData': grpc.unary_unary_rpc_method_handler(
          servicer.GetCustomDroneData,
          request_deserializer=vims__pb2.CustomDroneDataRequest.FromString,
          response_serializer=vims__pb2.CustomDroneDataResponse.SerializeToString,
      ),
      'GetCustomObstacleInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetCustomObstacleInfo,
          request_deserializer=vims__pb2.CustomObstacleInfoRequest.FromString,
          response_serializer=vims__pb2.CustomObstacleInfoResponse.SerializeToString,
      ),
      'GetCustomObjectInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetCustomObjectInfo,
          request_deserializer=vims__pb2.CustomObjectInfoRequest.FromString,
          response_serializer=vims__pb2.CustomObjectInfoResponse.SerializeToString,
      ),
      'GetCustomArucoInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetCustomArucoInfo,
          request_deserializer=vims__pb2.CustomArucoInfoRequest.FromString,
          response_serializer=vims__pb2.CustomArucoInfoResponse.SerializeToString,
      ),
      'StartStereoCalibration': grpc.unary_unary_rpc_method_handler(
          servicer.StartStereoCalibration,
          request_deserializer=vims__pb2.StartStereoCalibrationRequest.FromString,
          response_serializer=vims__pb2.StartStereoCalibrationResponse.SerializeToString,
      ),
      'CancelStereoCalibration': grpc.unary_unary_rpc_method_handler(
          servicer.CancelStereoCalibration,
          request_deserializer=vims__pb2.CancelStereoCalibrationRequest.FromString,
          response_serializer=vims__pb2.CancelStereoCalibrationResponse.SerializeToString,
      ),
      'StartSensorCalibration': grpc.unary_unary_rpc_method_handler(
          servicer.StartSensorCalibration,
          request_deserializer=vims__pb2.StartSensorCalibrationRequest.FromString,
          response_serializer=vims__pb2.StartSensorCalibrationResponse.SerializeToString,
      ),
      'CancelSensorCalibration': grpc.unary_unary_rpc_method_handler(
          servicer.CancelSensorCalibration,
          request_deserializer=vims__pb2.CancelSensorCalibrationRequest.FromString,
          response_serializer=vims__pb2.CancelSensorCalibrationResponse.SerializeToString,
      ),
      'SyncSettings': grpc.unary_unary_rpc_method_handler(
          servicer.SyncSettings,
          request_deserializer=vims__pb2.SyncSettingsRequest.FromString,
          response_serializer=vims__pb2.SyncSettingsResponse.SerializeToString,
      ),
      'SetVehicleLimit': grpc.unary_unary_rpc_method_handler(
          servicer.SetVehicleLimit,
          request_deserializer=vims__pb2.SetVehicleLimitRequest.FromString,
          response_serializer=vims__pb2.SetVehicleLimitResponse.SerializeToString,
      ),
      'SetHomePosition': grpc.unary_unary_rpc_method_handler(
          servicer.SetHomePosition,
          request_deserializer=vims__pb2.SetHomePositionRequest.FromString,
          response_serializer=vims__pb2.SetHomePositionResponse.SerializeToString,
      ),
      'SetSystemTime': grpc.unary_unary_rpc_method_handler(
          servicer.SetSystemTime,
          request_deserializer=vims__pb2.SetSystemTimeRequest.FromString,
          response_serializer=vims__pb2.SetSystemTimeResponse.SerializeToString,
      ),
      'SetReturnToHomeBatteryThreshold': grpc.unary_unary_rpc_method_handler(
          servicer.SetReturnToHomeBatteryThreshold,
          request_deserializer=vims__pb2.SetReturnToHomeBatteryThresholdRequest.FromString,
          response_serializer=vims__pb2.SetReturnToHomeBatteryThresholdResponse.SerializeToString,
      ),
      'UploadFile': grpc.stream_unary_rpc_method_handler(
          servicer.UploadFile,
          request_deserializer=vims__pb2.UploadFileRequest.FromString,
          response_serializer=vims__pb2.UploadFileResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'airlango.butterfly.vims.ControlService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class GestureControlServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.DetectGesture = channel.unary_unary(
        '/airlango.butterfly.vims.GestureControlService/DetectGesture',
        request_serializer=vims__pb2.SnapshotMessage.SerializeToString,
        response_deserializer=vims__pb2.GestureAction.FromString,
        )


class GestureControlServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def DetectGesture(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GestureControlServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'DetectGesture': grpc.unary_unary_rpc_method_handler(
          servicer.DetectGesture,
          request_deserializer=vims__pb2.SnapshotMessage.FromString,
          response_serializer=vims__pb2.GestureAction.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'airlango.butterfly.vims.GestureControlService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class MediaServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListMedia = channel.unary_unary(
        '/airlango.butterfly.vims.MediaService/ListMedia',
        request_serializer=vims__pb2.MediaListRequest.SerializeToString,
        response_deserializer=vims__pb2.MediaListResponse.FromString,
        )
    self.RangedListMedia = channel.unary_unary(
        '/airlango.butterfly.vims.MediaService/RangedListMedia',
        request_serializer=vims__pb2.RangedMediaListRequest.SerializeToString,
        response_deserializer=vims__pb2.MediaListResponse.FromString,
        )
    self.GetMedia = channel.unary_stream(
        '/airlango.butterfly.vims.MediaService/GetMedia',
        request_serializer=vims__pb2.MediaGetRequest.SerializeToString,
        response_deserializer=vims__pb2.MediaGetResponse.FromString,
        )
    self.DeleteMedia = channel.unary_unary(
        '/airlango.butterfly.vims.MediaService/DeleteMedia',
        request_serializer=vims__pb2.MediaDeleteRequest.SerializeToString,
        response_deserializer=vims__pb2.MediaDeleteResponse.FromString,
        )
    self.DeleteMediaEx = channel.unary_unary(
        '/airlango.butterfly.vims.MediaService/DeleteMediaEx',
        request_serializer=vims__pb2.MediaDeleteExRequest.SerializeToString,
        response_deserializer=vims__pb2.MediaDeleteResponse.FromString,
        )
    self.FormatMediaLibrary = channel.unary_unary(
        '/airlango.butterfly.vims.MediaService/FormatMediaLibrary',
        request_serializer=vims__pb2.FormatMediaLibraryRequest.SerializeToString,
        response_deserializer=vims__pb2.FormatMediaLibraryResponse.FromString,
        )


class MediaServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ListMedia(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RangedListMedia(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetMedia(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteMedia(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteMediaEx(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FormatMediaLibrary(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MediaServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListMedia': grpc.unary_unary_rpc_method_handler(
          servicer.ListMedia,
          request_deserializer=vims__pb2.MediaListRequest.FromString,
          response_serializer=vims__pb2.MediaListResponse.SerializeToString,
      ),
      'RangedListMedia': grpc.unary_unary_rpc_method_handler(
          servicer.RangedListMedia,
          request_deserializer=vims__pb2.RangedMediaListRequest.FromString,
          response_serializer=vims__pb2.MediaListResponse.SerializeToString,
      ),
      'GetMedia': grpc.unary_stream_rpc_method_handler(
          servicer.GetMedia,
          request_deserializer=vims__pb2.MediaGetRequest.FromString,
          response_serializer=vims__pb2.MediaGetResponse.SerializeToString,
      ),
      'DeleteMedia': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteMedia,
          request_deserializer=vims__pb2.MediaDeleteRequest.FromString,
          response_serializer=vims__pb2.MediaDeleteResponse.SerializeToString,
      ),
      'DeleteMediaEx': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteMediaEx,
          request_deserializer=vims__pb2.MediaDeleteExRequest.FromString,
          response_serializer=vims__pb2.MediaDeleteResponse.SerializeToString,
      ),
      'FormatMediaLibrary': grpc.unary_unary_rpc_method_handler(
          servicer.FormatMediaLibrary,
          request_deserializer=vims__pb2.FormatMediaLibraryRequest.FromString,
          response_serializer=vims__pb2.FormatMediaLibraryResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'airlango.butterfly.vims.MediaService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
