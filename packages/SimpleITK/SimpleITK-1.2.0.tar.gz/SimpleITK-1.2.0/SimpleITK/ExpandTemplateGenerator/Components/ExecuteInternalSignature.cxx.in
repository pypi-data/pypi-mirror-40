template <class TImageType>
$(if no_return_image then OUT=[[void]] else OUT=[[Image]] end) ${name}::ExecuteInternal ( $(for inum=1,number_of_inputs do
 if inum>1 then
       OUT=OUT.. ', '
  end
  OUT= OUT .. 'const Image& inImage' .. inum
end )$(if inputs then
for i = 1,#inputs do
  if (number_of_inputs > 0 or i > 1) then
    OUT = OUT .. ", "
  end
  if not inputs[i].type and inputs[i].enum then
    OUT = OUT .. name .. '::' .. inputs[i].name .. 'Type'
  elseif inputs[i].dim_vec and (inputs[i].dim_vec == 1) then
    OUT = OUT..'const std::vector<'..inputs[i].type..'> *'
  elseif inputs[i].point_vec and (inputs[i].point_vec == 1) then
    OUT = OUT..'const  std::vector< std::vector<'..inputs[i].type..'> > *'
  else
    OUT = OUT .. 'const ' .. inputs[i].type .. ' *'
  end
  OUT = OUT .. ' in' .. inputs[i].name
end
end) )
